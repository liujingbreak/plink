@use "@wfh/material-components-react/client/theme";
$titleColor: change-color(theme.$primary, $alpha: 0.7);
$dividerColor: change-color(theme.$primary, $alpha: 0.5);

.toc{
  &Body {
    flex-grow: 0;
    flex-shrink: 0;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    // width: auto;
    position: fixed;
    transform: none;
    display: none;
    transition: opacity 0.3s ease-out,transform 0.3s ease-out;
    padding-top: 60px;
    background: white;

    &.toggleOnBegin {
      display: block;
      transform: translate3d(70%, 0, 0);
      opacity: 0;
    }
    &.toggleOn {
      display: block;
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }

    h3 {
      margin-bottom: 1rem;
      color: theme.$primary;
      padding-left: 10px;
    }
  }
  &-item {
    line-height: 1.5rem;
    position: relative;
    transition: background-image 0.25s linear;
    &.hl {
      > .toc-title:first-child {
        color: theme.$primary;
      }
    }
  }
  &-title {
    position: relative;
    white-space: nowrap;
    color: $titleColor;
    text-overflow: ellipsis;
    overflow: hidden;
    padding: 4px 0;
    transition: color 0.25s linear;
    &:hover {
      color: theme.$primary;
    }
  }
  &Content {
    transition: translate ease-out 0.25s;
  }
  &ContentInner {
    margin-left: 5px;
    border-left: 1px solid $dividerColor;
    width: calc(100% - 6px);
  }
  &PlaceHolder {
    min-width: 1px;
  }
  &ScrollDetector {
    position: absolute; // this element is used for IntersectionObserver, "absolute" makes it more stable for position detection, avoiding being interfered by reflowing
    top: 0;
    min-width: 1px;
    min-height: 1px;
  }
}

.posIndicator {
  position: absolute;
  left: 0;
  width: 12px;
  height: 12px;
  border-radius: 6px;
  border: 2px solid theme.$primary;
  transition-property: top;
  transition-duration: 200ms;
  transition-timing-function: ease-out;
}

:global(.mdc-layout-size-desktop), :global(.mdc-layout-size-tablet) {
  .tocBody {
    display: block;
    transform: none;
    position: static;
    overflow: visible;
    bottom: auto;
    right: auto;
    // width: 28vw;
    // max-width: 400px;
    padding-top: 0;
    background: transparent;
    &.fixed {
      padding-top: 24px;
    }
  }
  .tocContent {
    position: fixed;
    overflow-y: auto;
    overflow-x: hidden;
  }
}

$level-indent-unit: 10px;
.level-0 {
  padding-left: 1 * $level-indent-unit;
}
.level-1 {
  padding-left: 2 * $level-indent-unit;
}
.level-2 {
  padding-left: 3 * $level-indent-unit;
}
.level-3 {
  padding-left: 4 * $level-indent-unit;
}
.level-4 {
  padding-left: 5 * $level-indent-unit;
}
.level-5 {
  padding-left: 6 * $level-indent-unit;
}
.level-6 {
  padding-left: 7 * $level-indent-unit;
}
.level-7 {
  padding-left: 8 * $level-indent-unit;
}

