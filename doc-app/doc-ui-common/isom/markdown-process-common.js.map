{"version":3,"file":"markdown-process-common.js","sourceRoot":"","sources":["markdown-process-common.ts"],"names":[],"mappings":"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","sourcesContent":["import * as rx from 'rxjs';\nimport {fork, WorkerControl, setIdleDuring} from '@wfh/reactivizer/dist/fork-join/node-worker';\nimport {ActionMeta, str2ArrayBuffer, arrayBuffer2str} from '@wfh/reactivizer';\nimport md5 from 'md5';\nimport MarkdownIt from 'markdown-it';\nimport highlight from 'highlight.js';\nimport {parse as parseHtml, DefaultTreeAdapterMap} from 'parse5';\nimport {TOC} from './md-types';\nimport {ChildNode, Element, lookupTextNodeIn, createTocTree} from './markdown-processor-helper';\n\nexport type MdInputActions = {\n  forkProcessFile(markdownFileContent: string, filePath: string): void;\n  processFile(markdownFileContent: SharedArrayBuffer, filePath: string): void;\n  processFileDone(res: {resultHtml: ArrayBuffer; toc: TOC[]; mermaid: ArrayBuffer[]; transferList: ArrayBuffer[]}): void;\n  /** Consumer should dispatach to be related to \"resolveImage\" event */\n  imageResolved(resultUrl: string): void;\n  linkResolved(resultUrl: string): void;\n  /** Consumer should dispatch */\n  anchorLinkResolved(url: string): void;\n};\n\nexport type MdOutputEvents = {\n  processFileDone: MdInputActions['processFileDone'];\n  /** Consumer program should react on this event */\n  imageToBeResolved(imgSrc: string, mdFilePath: string): void;\n  /** Consumer program should react on this event */\n  linkToBeResolved(urlSrc: string, mdFilePath: string): void;\n  /** Consumer should react and dispatach \"anchorLinkResolved\" */\n  anchorLinkToBeResolved(linkSrc: string, mdFilePath: string): void;\n\n  htmlRendered(file: string, html: string): void;\n};\n\nconst headerSet = new Set<string>('h1 h2 h3 h4 h5'.split(' '));\nconst md = new MarkdownIt({\n  html: true,\n  highlight(str, lang, _attrs) {\n    if (lang && lang !== 'mermaid') {\n      try {\n        const parsed = highlight.highlight(str, {language: lang}).value;\n        return parsed;\n      } catch (e) {\n        console.error(e); // skip non-important error like: Unknown language: \"mermaid\"\n      }\n    }\n    return str;\n  }\n});\nexport type MarkdownProcessor = WorkerControl<MdInputActions, MdOutputEvents>;\n\nexport function setupReacting(markdownProcessor: MarkdownProcessor) {\n  const {r, i, o} = markdownProcessor;\n  r('forkProcessFile -> fork processFile, processFileDone', i.pt.forkProcessFile.pipe(\n    rx.mergeMap(async ([m, content, file]) => {\n      try {\n        const resultDone = fork(markdownProcessor, 'processFile', [str2ArrayBuffer<SharedArrayBuffer>(content, true), file], 'processFileDone', m);\n        const [result] = await setIdleDuring.asPromise(markdownProcessor, resultDone);\n        o.dpf.processFileDone(m, result);\n      } catch (e) {\n        markdownProcessor.dispatchErrorFor(e, m);\n      }\n    })\n  ));\n\n  r('processFile -> processFileDone', i.pt.processFile.pipe(\n    rx.mergeMap(([m, content, file]) => {\n      o.dp.log('react to processFile', file);\n      return rx.defer(() => {\n        const html = md.render(arrayBuffer2str(content));\n        const doc = parseHtml(html, {sourceCodeLocationInfo: true});\n        const content$ = dfsAccessElement(markdownProcessor, m, html, file, doc);\n        return content$;\n      }).pipe(\n        rx.map(([content, toc, mermaidCodes]) => {\n          const buf = str2ArrayBuffer<ArrayBuffer>(content);\n          const mermaidBufs = mermaidCodes.map(code => str2ArrayBuffer<ArrayBuffer>(code));\n          o.dpf.processFileDone(m, {resultHtml: buf, toc: createTocTree(toc), mermaid: mermaidBufs, transferList: [buf, ...mermaidBufs]});\n        }),\n        markdownProcessor.catchErrorFor(m)\n      );\n    })\n  ));\n\n  i.dp.setLiftUpActions(rx.merge(\n    o.at.imageToBeResolved,\n    o.at.linkToBeResolved\n  ));\n}\n\nfunction dfsAccessElement(\n  processor: MarkdownProcessor,\n  _processFileActionMeta: ActionMeta,\n  sourceHtml: string,\n  file: string,\n  root: DefaultTreeAdapterMap['document']\n  // transpileCode?: (language: string, sourceCode: string) => Promise<string> | rx.Observable<string> | void,\n) {\n  const {i, o} = processor;\n  const toc: TOC[] = [];\n  const mermaidCode = [] as string[];\n  const chr = new rx.BehaviorSubject<ChildNode[]>(root.childNodes || []);\n  const output = [] as Array<string | Promise<string> | rx.Observable<string> | null | undefined>;\n  let htmlOffset = 0;\n\n  chr.pipe(\n    rx.mergeMap(children => rx.from(children)),\n    rx.map(node => {\n      const nodeName = node.nodeName.toLowerCase();\n      if (nodeName === '#text' || nodeName === '#comment' || nodeName === '#documentType')\n        return;\n      const el = node as Element;\n      if (nodeName === 'code') {\n        const classAttr = el.attrs.find(item => item.name === 'class');\n        if (classAttr) {\n          const langMatch = /^language-(.*)$/.exec(classAttr.value);\n          const lang = langMatch ? langMatch[1] : null;\n          const endQuoteSyntaxPos = el.sourceCodeLocation!.attrs!.class!.endOffset - 1;\n          output.push(\n            sourceHtml.slice(htmlOffset, endQuoteSyntaxPos),\n            ' hljs'\n          );\n          htmlOffset = endQuoteSyntaxPos;\n\n          if (lang === 'mermaid' && el.childNodes.length > 0) {\n            const mermaidCodeStart = (el.childNodes[0] as Element).sourceCodeLocation!.startOffset;\n            const mermaidCodeEnd = (el.childNodes[el.childNodes.length - 1] as Element).sourceCodeLocation!.endOffset;\n            mermaidCode.push(sourceHtml.slice(mermaidCodeStart, mermaidCodeEnd));\n            output.push(sourceHtml.slice(htmlOffset, mermaidCodeStart));\n            htmlOffset = mermaidCodeEnd;\n          }\n        }\n      } else if (nodeName === 'img') {\n        const imgSrc = el.attrs.find(item => item.name === 'src');\n        if (imgSrc && !imgSrc.value.startsWith('/') && !/^https?:\\/\\//.test(imgSrc.value)) {\n          o.dp.log('found img src=' + imgSrc.value);\n          output.push(sourceHtml.slice(htmlOffset, el.sourceCodeLocation!.attrs!.src!.startOffset + 'src=\"'.length));\n          // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n          htmlOffset = el.sourceCodeLocation!.attrs?.src.endOffset! - 1;\n\n          const result$ = new rx.ReplaySubject<string>(1);\n          o.do.imageToBeResolved(i.at.imageResolved, imgSrc.value, file).pipe(\n            rx.take(1),\n            rx.map(([, url]) => url),\n            rx.tap(result$)\n          ).subscribe();\n          return output.push(result$);\n        }\n      } else if (headerSet.has(nodeName)) {\n        const text = lookupTextNodeIn(el);\n        const hash = btoa(md5(text, {asString: true}));\n        const posBeforeStartTagEnd = el.sourceCodeLocation!.startTag!.endOffset - 1;\n        output.push(sourceHtml.slice(htmlOffset, posBeforeStartTagEnd), ` id=\"mdt-${hash}\" data-mdt `);\n        htmlOffset = posBeforeStartTagEnd;\n        toc.push({\n          level: 0,\n          tag: nodeName,\n          text: lookupTextNodeIn(el),\n          id: hash\n        });\n      } else if (nodeName === 'a') {\n        const hrefAttr = el.attrs.find(attr => attr.name === 'href');\n        if (hrefAttr?.value && hrefAttr.value.startsWith('.')) {\n          output.push(sourceHtml.slice(htmlOffset, el.sourceCodeLocation!.attrs!.href!.startOffset + 'href=\"'.length));\n          htmlOffset = el.sourceCodeLocation!.attrs!.href!.endOffset - 1;\n          const result$ = new rx.ReplaySubject<string>(1);\n          o.do.linkToBeResolved(i.at.linkResolved, hrefAttr?.value, file).pipe(\n            rx.take(1),\n            rx.map(([, url]) => url),\n            rx.tap(result$)\n          ).subscribe();\n\n          return output.push(result$);\n        }\n      } else if (el.childNodes) {\n        chr.next(el.childNodes);\n      }\n    })\n  ).subscribe();\n\n  output.push(sourceHtml.slice(htmlOffset));\n\n  return setIdleDuring(processor, rx.from(output).pipe(\n    rx.concatMap(item => typeof item === 'string' ? rx.of(JSON.stringify(item)) : item == null ? ' + img + ' : item),\n    rx.reduce<string, string[]>((acc, item) => {\n      acc.push(item);\n      return acc;\n    }, []),\n    rx.map(frags => {\n      return [frags.join(' + '), toc, mermaidCode] as const;\n    })\n  ));\n}\n"]}