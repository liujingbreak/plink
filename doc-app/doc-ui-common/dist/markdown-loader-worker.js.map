{"version":3,"file":"markdown-loader-worker.js","sourceRoot":"","sources":["markdown-loader-worker.ts"],"names":[],"mappings":";;;;AAAA,sEAAqC;AACrC,gEAA0C;AAC1C,sCAAwD;AAExD,IAAA,0BAAkB,GAAE,CAAC;AACrB,MAAM,GAAG,GAAG,IAAA,gBAAQ,EAAC,UAAU,CAAC,CAAC;AAEjC,MAAM,EAAE,GAAG,IAAI,qBAAU,CAAC;IACxB,IAAI,EAAE,IAAI;IACV,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK;QACxB,IAAI,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;YAC9B,IAAI;gBACF,OAAO,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC;aACnD;YAAC,OAAO,CAAC,EAAE;gBACV,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,6DAA6D;aAC5E;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;CACF,CAAC,CAAC;AAEH,SAAgB,WAAW,CAAC,MAAc;IACxC,OAAO,EAAE,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC;AAC5B,CAAC;AAFD,kCAEC","sourcesContent":["import MarkdownIt from 'markdown-it';\nimport * as highlight from 'highlight.js';\nimport {log4File, initAsChildProcess} from '@wfh/plink';\n\ninitAsChildProcess();\nconst log = log4File(__filename);\n\nconst md = new MarkdownIt({\n  html: true,\n  highlight(str, lang, attrs) {\n    if (lang && lang !== 'mermaid') {\n      try {\n        return highlight.highlight(lang, str, true).value;\n      } catch (e) {\n        log.debug(e); // skip non-important error like: Unknown language: \"mermaid\"\n      }\n    }\n    return str;\n  }\n});\n\nexport function parseToHtml(source: string) {\n  return md.render(source );\n}\n"]}