{"version":3,"file":"markdown-loader-worker.js","sourceRoot":"","sources":["markdown-loader-worker.ts"],"names":[],"mappings":"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","sourcesContent":["import {parentPort, MessagePort} from 'node:worker_threads';\n// import inspector from 'node:inspector';\nimport md5 from 'md5';\nimport MarkdownIt from 'markdown-it';\nimport * as op from 'rxjs/operators';\nimport * as rx from 'rxjs';\nimport highlight from 'highlight.js';\nimport type {DefaultTreeAdapterMap} from 'parse5';\nimport {log4File, initAsChildProcess} from '@wfh/plink';\nimport findLastIndex from 'lodash/findLastIndex';\nimport {TOC} from '../isom/md-types';\n// inspector.open(9222, '0.0.0.0', true);\n\ntype ChildNode = DefaultTreeAdapterMap['childNode'];\ntype Element = DefaultTreeAdapterMap['element'];\ntype TextNode = DefaultTreeAdapterMap['textNode'];\n\nconst headerSet = new Set<string>('h1 h2 h3 h4 h5'.split(' '));\n\n\ninitAsChildProcess();\n\nconst log = log4File(__filename);\n\nconst md = new MarkdownIt({\n  html: true,\n  highlight(str, lang, _attrs) {\n    if (lang && lang !== 'mermaid') {\n      try {\n        const parsed = highlight.highlight(str, {language: lang}).value;\n        // log.info('...........................\\n', parsed);\n        return parsed;\n      } catch (e) {\n        log.debug(e); // skip non-important error like: Unknown language: \"mermaid\"\n      }\n    }\n    return str;\n  }\n});\n\nconst THREAD_MSG_TYPE_RESOLVE_IMG = 'resolveImageSrc';\n\nexport function toContentAndToc(source: string) {\n  return parseHtml(\n    md.render(source ),\n    imgSrc => {\n      return new rx.Observable<string>(sub => {\n        const cb: Parameters<MessagePort['addListener']>[1] = (msg: {type: string; data: string}) => {\n          if (msg.type === THREAD_MSG_TYPE_RESOLVE_IMG) {\n            parentPort!.off('message', cb);\n            sub.next(msg.data);\n            sub.complete();\n          }\n        };\n        parentPort!.on('message', cb);\n        parentPort!.postMessage({type: THREAD_MSG_TYPE_RESOLVE_IMG, data: imgSrc});\n        return () => parentPort!.off('message', cb);\n      });\n    }\n  ).pipe(\n    op.take(1)\n  ).toPromise();\n}\n\nexport const testable = {parseHtml};\n\nfunction parseHtml(\n  html: string,\n  resolveImage?: (imgSrc: string) => Promise<string> | rx.Observable<string> | null | undefined\n): rx.Observable<{toc: TOC[]; content: string}> {\n  let toc: TOC[] = [];\n  return rx.from(import('parse5')).pipe(\n    op.mergeMap(parser => {\n      const doc = parser.parse(html, {sourceCodeLocationInfo: true});\n      const content$ = dfsAccessElement(html, doc, resolveImage, toc);\n      toc = createTocTree(toc);\n      return content$.pipe(op.map(content => ({toc, content})));\n    }),\n    op.catchError(err => {\n      log.error(err);\n      return rx.of({toc, content: html});\n    })\n  );\n}\n\nfunction dfsAccessElement(\n  sourceHtml: string,\n  root: DefaultTreeAdapterMap['document'],\n  resolveImage?: (imgSrc: string) => Promise<string> | rx.Observable<string> | null | undefined,\n  // transpileCode?: (language: string, sourceCode: string) => Promise<string> | rx.Observable<string> | void,\n  toc: TOC[] = []\n) {\n  const chr = new rx.BehaviorSubject<ChildNode[]>(root.childNodes || []);\n  const output = [] as Array<string | Promise<string> | rx.Observable<string> | null | undefined>;\n  let htmlOffset = 0;\n\n  chr.pipe(\n    op.mergeMap(children => rx.from(children)),\n    op.map(node => {\n      const nodeName = node.nodeName.toLowerCase();\n      if (nodeName === '#text' || nodeName === '#comment' || nodeName === '#documentType')\n        return;\n      const el = node as Element;\n      if (nodeName === 'code') {\n        const classAttr = el.attrs.find(item => item.name === 'class');\n        if (classAttr) {\n          const endQuoteSyntaxPos = el.sourceCodeLocation!.attrs!.class!.endOffset - 1;\n          output.push(\n            sourceHtml.slice(htmlOffset, endQuoteSyntaxPos),\n            ' hljs'\n          );\n          htmlOffset = endQuoteSyntaxPos;\n        }\n      } else if (nodeName === 'img') {\n        const imgSrc = el.attrs.find(item => item.name === 'src');\n        if (resolveImage && imgSrc && !imgSrc.value.startsWith('/') && !/^https?:\\/\\//.test(imgSrc.value)) {\n          log.info('found img src=' + imgSrc.value);\n          output.push(sourceHtml.slice(htmlOffset, el.sourceCodeLocation!.attrs!.src!.startOffset + 'src=\"'.length));\n          // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n          htmlOffset = el.sourceCodeLocation!.attrs?.src.endOffset! - 1;\n          return output.push(resolveImage(imgSrc.value));\n        }\n      } else if (headerSet.has(nodeName)) {\n        const text = lookupTextNodeIn(el);\n        const hash = btoa(md5(text, {asString: true}));\n        const posBeforeStartTagEnd = el.sourceCodeLocation!.startTag!.endOffset - 1;\n        output.push(sourceHtml.slice(htmlOffset, posBeforeStartTagEnd), ` id=\"mdt-${hash}\"`);\n        htmlOffset = posBeforeStartTagEnd;\n        toc.push({\n          level: 0,\n          tag: nodeName,\n          text: lookupTextNodeIn(el),\n          id: hash\n        });\n      } else if (el.childNodes) {\n        chr.next(el.childNodes);\n      }\n    })\n  ).subscribe();\n\n  output.push(sourceHtml.slice(htmlOffset));\n\n  return rx.from(output).pipe(\n    op.concatMap(item => typeof item === 'string' ? rx.of(JSON.stringify(item)) : item == null ? ' + img + ' : item),\n    op.reduce<string, string[]>((acc, item) => {\n      acc.push(item);\n      return acc;\n    }, []),\n    op.map(frags => frags.join(' + '))\n  );\n}\n\nfunction lookupTextNodeIn(el: Element) {\n  const chr = new rx.BehaviorSubject<ChildNode[]>(el.childNodes || []);\n  let text = '';\n  chr.pipe(\n    op.mergeMap(children => rx.from(children))\n  ).pipe(\n    op.map(node => {\n      if (node.nodeName === '#text') {\n        text += (node as TextNode).value;\n      } else if ((node as Element).childNodes) {\n        chr.next((node as Element).childNodes);\n      }\n    })\n  ).subscribe();\n  return text;\n}\n\nfunction createTocTree(input: TOC[]) {\n  const root: TOC = {level: -1, tag: 'h0', text: '', id: '', children: []};\n  const byLevel: TOC[] = [root]; // a stack of previous TOC items ordered by level\n  let prevHeaderWeight = Number(root.tag.charAt(1));\n  for (const item of input) {\n    const headerWeight = Number(item.tag.charAt(1));\n    // console.log(`${headerWeight} ${prevHeaderWeight}, ${item.text}`);\n    if (headerWeight < prevHeaderWeight) {\n      const pIdx = findLastIndex(byLevel, toc => Number(toc.tag.charAt(1)) < headerWeight);\n      byLevel.splice(pIdx + 1);\n      addAsChild(byLevel[pIdx], item);\n    } else if (headerWeight === prevHeaderWeight) {\n      byLevel.pop();\n      const parent = byLevel[byLevel.length - 1];\n      addAsChild(parent, item);\n    } else {\n      const parent = byLevel[byLevel.length - 1];\n      addAsChild(parent, item);\n    }\n    prevHeaderWeight = headerWeight;\n  }\n\n  function addAsChild(parent: TOC, child: TOC) {\n    if (parent.children == null)\n      parent.children = [child];\n    else\n      parent.children.push(child);\n    child.level = byLevel[byLevel.length - 1] ? byLevel[byLevel.length - 1].level + 1 : 0;\n    byLevel.push(child);\n  }\n  return root.children!;\n}\n\n\n"]}