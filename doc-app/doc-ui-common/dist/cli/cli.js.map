{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport Path from 'path';\nimport {CliExtension} from '@wfh/plink/wfh/dist';\nimport {mkdirpSync} from 'fs-extra';\nimport * as markdownUtil from '../markdown-util';\n// import util from 'util';\n\nconst cliExt: CliExtension = (program) => {\n  const mdCli = program.command('markdown <file>')\n    .description('Show markdown topics', {file: 'source markdown file'})\n    .option('-i, --insert', 'Insert or update table of content in markdown file')\n    .option('-o,--out <output html>', 'Output to html file')\n    .action(async (file) => {\n      const {markdownToHtml, tocToString, insertOrUpdateMarkdownToc} = require('../markdown-util') as typeof markdownUtil;\n      const input = fs.readFileSync(Path.resolve(file), 'utf8');\n      if (mdCli.opts().insert) {\n        const {changedMd, toc, html} = await insertOrUpdateMarkdownToc(input);\n        // eslint-disable-next-line no-console\n        console.log('Table of content:\\n' + toc);\n        fs.writeFileSync(file, changedMd);\n        if (mdCli.opts().out) {\n          const target = Path.resolve(mdCli.opts().out);\n          mkdirpSync(Path.dirname(target));\n          fs.writeFileSync(target, html);\n          // eslint-disable-next-line no-console\n          console.log('Output HTML to file:', target);\n        }\n      } else {\n        const {toc, content} = await markdownToHtml(input).toPromise();\n        // eslint-disable-next-line no-console\n        console.log('Table of content:\\n' + tocToString(toc));\n        if (mdCli.opts().out) {\n          const target = Path.resolve(mdCli.opts().out);\n          mkdirpSync(Path.dirname(target));\n          fs.writeFileSync(target, eval(content));\n          // eslint-disable-next-line no-console\n          console.log('Output HTML to file:', target);\n        }\n      }\n    });\n\n  program.command('color-info <color-string...>')\n    .description('Show color information', {'color-string': 'In form of CSS color string'})\n    .action(async function(colors: string[]) {\n      for (const info of (await import('../color.js')).colorInfo(colors)) {\n      // eslint-disable-next-line no-console\n        console.log(info);\n      }\n    });\n\n  program.command('color-contrast <color-string1> <color-string2>')\n    .description('Show color contrast information', {'color-string1': 'In form of CSS color string'})\n    .action(async function(...colors: string[]) {\n      (await import('../color.js')).colorContrast(...colors as [string, string]);\n    });\n\n  program.command('color-mix <color1> <color2> [weight-interval]')\n    .description('compare 2 colors', {\n      color1: 'In form of CSS color string',\n      color2: 'In form of CSS color string',\n      'weight-interval': 'weight of color to be mixed, should be number between 0 - 1'\n    })\n    .action(async (color1: string, color2: string, weightInterval?: string) => {\n      if (weightInterval == null) {\n        weightInterval = '0.1';\n      }\n      (await import('../color.js')).mixColor(color1, color2, Number(weightInterval));\n    });\n\n  // TODO: Add more sub command here\n};\n\nexport default cliExt;\n"]}