{"version":3,"file":"markdown-util.js","sourceRoot":"","sources":["markdown-util.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\nimport os from 'os';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport {Pool} from '@wfh/thread-promise-pool';\nimport {log4File} from '@wfh/plink';\nimport _ from 'lodash';\nimport parse5, {ChildNode, Element, TextNode} from 'parse5';\nimport {TOC} from '../isom/md-types';\nconst log = log4File(__filename);\n\nlet threadPool: Pool;\nconst headerSet = new Set<string>('h1 h2 h3 h4 h5'.split(' '));\n\n/**\n * Use Thread pool to parse Markdown file simultaneously\n * @param source \n * @param resolveImage \n */\nexport function markdownToHtml(source: string, resolveImage?: (imgSrc: string) => Promise<string> | rx.Observable<string>):\nrx.Observable<{toc: TOC[]; content: string}> {\n  if (threadPool == null) {\n    threadPool = new Pool(os.cpus().length > 1 ? os.cpus().length - 1 : 3, 1000);\n  }\n\n  const threadTask = threadPool.submitAndReturnTask<{toc: TOC[]; content: string}>({\n    file: path.resolve(__dirname, 'markdown-loader-worker.js'),\n    exportFn: 'toContentAndToc',\n    args: [source]\n  });\n\n  const threadMsg$ = new rx.Subject<{type?: string; data: string}>();\n  threadMsg$.pipe(\n    op.filter(msg => msg.type === 'resolveImageSrc'),\n    op.map(msg => msg.data),\n    op.mergeMap(imgSrc => resolveImage ? resolveImage(imgSrc) : rx.of(' + ' + JSON.stringify(imgSrc) + ' + ')),\n    op.tap(imgUrl => {\n      threadTask.thread?.postMessage({type: 'resolveImageSrc', data: imgUrl});\n      log.info('send resolved image', imgUrl);\n    }, undefined, () => {\n      threadTask.thread!.off('message', handleThreadMsg);\n      log.info('done');\n    }),\n    op.takeUntil(rx.from(threadTask.promise)),\n    op.catchError(err => {\n      log.error('markdownToHtml error', err);\n      return rx.of({toc: [], content: ''});\n    })\n  ).subscribe();\n\n  const handleThreadMsg = (msg: {type?: string; data: string}) => {\n    threadMsg$.next(msg);\n  };\n  threadTask.thread!.on('message', handleThreadMsg);\n  return rx.from(threadTask.promise);\n}\n\nexport function parseHtml(\n  html: string,\n  resolveImage?: (imgSrc: string) => Promise<string> | rx.Observable<string> | null | undefined\n): rx.Observable<{toc: TOC[]; content: string}> {\n  let toc: TOC[] = [];\n  try {\n    const doc = parse5.parse(html, {sourceCodeLocationInfo: true});\n    const content$ = dfsAccessElement(html, doc, resolveImage, toc);\n    toc = createTocTree(toc);\n    return content$.pipe(op.map(content => ({toc, content})));\n  } catch (e) {\n    console.error('parseHtml() error', e);\n    return rx.of({toc, content: html});\n  }\n}\n\nfunction dfsAccessElement(\n  sourceHtml: string,\n  root: parse5.Document,\n  resolveImage?: (imgSrc: string) => Promise<string> | rx.Observable<string> | null | undefined,\n  // transpileCode?: (language: string, sourceCode: string) => Promise<string> | rx.Observable<string> | void,\n  toc: TOC[] = []\n) {\n  const chr = new rx.BehaviorSubject<ChildNode[]>(root.childNodes || []);\n  const output = [] as Array<string | Promise<string> | rx.Observable<string> | null | undefined>;\n  let htmlOffset = 0;\n\n  chr.pipe(\n    op.mergeMap(children => rx.from(children)),\n    op.map(node => {\n      const nodeName = node.nodeName.toLowerCase();\n      if (nodeName === '#text' || nodeName === '#comment' || nodeName === '#documentType')\n        return;\n      const el = node as Element;\n      if (nodeName === 'img') {\n        const imgSrc = el.attrs.find(item => item.name === 'src');\n        if (resolveImage && imgSrc && !imgSrc.value.startsWith('/') && !/^https?:\\/\\//.test(imgSrc.value)) {\n          log.info('found img src=' + imgSrc.value);\n          output.push(sourceHtml.slice(htmlOffset, el.sourceCodeLocation!.attrs.src.startOffset + 'src'.length + 2));\n          htmlOffset = el.sourceCodeLocation!.attrs.src.endOffset - 1;\n          return output.push(resolveImage(imgSrc.value));\n        }\n      } else if (headerSet.has(nodeName)) {\n        toc.push({level: 0, tag: nodeName,\n          text: lookupTextNodeIn(el),\n          id: ''\n        });\n      } else if (el.childNodes) {\n        chr.next(el.childNodes);\n      }\n    })\n  ).subscribe();\n\n  output.push(sourceHtml.slice(htmlOffset));\n\n  return rx.from(output).pipe(\n    op.concatMap(item => typeof item === 'string' ? rx.of(JSON.stringify(item)) : item == null ? ' + img + ' : item),\n    op.reduce<string, string[]>((acc, item) => {\n      acc.push(item);\n      return acc;\n    }, []),\n    op.map(frags => frags.join(''))\n  );\n}\n\nfunction lookupTextNodeIn(el: Element) {\n  const chr = new rx.BehaviorSubject<ChildNode[]>(el.childNodes || []);\n  let text = '';\n  chr.pipe(\n    op.mergeMap(children => rx.from(children))\n  ).pipe(\n    op.map(node => {\n      if (node.nodeName === '#text') {\n        text += (node as TextNode).value;\n      } else if ((node as Element).childNodes) {\n        chr.next((node as Element).childNodes);\n      }\n    })\n  ).subscribe();\n  return text;\n}\n\nfunction createTocTree(input: TOC[]) {\n  const root: TOC = {level: -1, tag: 'h0', text: '', id: '', children: []};\n  const byLevel: TOC[] = [root]; // a stack of previous TOC items ordered by level\n  let prevHeaderSize = Number(root.tag.charAt(1));\n  for (const item of input) {\n    const headerSize = Number(item.tag.charAt(1));\n    // console.log(`${headerSize} ${prevHeaderSize}, ${item.text}`);\n    if (headerSize < prevHeaderSize) {\n      const pIdx = _.findLastIndex(byLevel, toc => Number(toc.tag.charAt(1)) < headerSize);\n      byLevel.splice(pIdx + 1);\n      addAsChild(byLevel[pIdx], item);\n    } else if (headerSize === prevHeaderSize) {\n      byLevel.pop();\n      const parent = byLevel[byLevel.length - 1];\n      addAsChild(parent, item);\n    } else {\n      const parent = byLevel[byLevel.length - 1];\n      addAsChild(parent, item);\n    }\n    prevHeaderSize = headerSize;\n  }\n\n  function addAsChild(parent: TOC, child: TOC) {\n    if (parent.children == null)\n      parent.children = [child];\n    else\n      parent.children.push(child);\n    child.level = byLevel[byLevel.length - 1] ? byLevel[byLevel.length - 1].level + 1 : 0;\n    byLevel.push(child);\n  }\n  return root.children!;\n}\n\nexport function* traverseTocTree(tocs: TOC[]): Generator<TOC> {\n  for (const item of tocs) {\n    yield item;\n    if (item.children)\n      yield* traverseTocTree(item.children);\n  }\n}\n\nexport function tocToString(tocs: TOC[]) {\n  let str = '';\n  for (const item of traverseTocTree(tocs)) {\n    str += ' |'.repeat(item.level);\n    // str += '- ';\n    str += `- ${item.text}`;\n    str += os.EOL;\n  }\n  return str;\n}\n\nexport function insertOrUpdateMarkdownToc(input: string) {\n  return markdownToHtml(input).pipe(\n    op.map(({toc, content: html}) => {\n      const tocStr = tocMarkdown(toc);\n      const BEGIN = '<!-- Plink markdown toc -->';\n      const END = '<!-- Plink markdown toc end -->';\n      const existing = input.indexOf(BEGIN);\n      let changedMd = '';\n      if (existing >= 0) {\n        const replacePos = existing + BEGIN.length;\n        const replaceEnd = input.indexOf(END);\n        changedMd = input.slice(0, replacePos) + '\\n' + tocStr + '\\n' + input.slice(replaceEnd);\n      } else {\n        changedMd = [BEGIN, tocStr, END, input].join('\\n');\n      }\n      return {changedMd, toc: tocToString(toc), html};\n    }),\n    op.take(1)\n  ).toPromise();\n}\n\nfunction tocMarkdown(tocs: TOC[]) {\n  let str = '';\n  let i = 0;\n  for (const item of traverseTocTree(tocs)) {\n    if (item.level > 2)\n      continue; // only show title of level 0 - 2\n    str += '  '.repeat(item.level);\n    str += `${item.level > 0 ? '-' : i > 0 ? os.EOL : ''} ${item.text}`;\n    str += os.EOL;\n    i++;\n  }\n  return str.slice(0, -1);\n}\n"]}