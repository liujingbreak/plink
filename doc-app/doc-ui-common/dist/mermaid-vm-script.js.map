{"version":3,"file":"mermaid-vm-script.js","sourceRoot":"","sources":["mermaid-vm-script.ts"],"names":[],"mappings":";AAAA,8CAA8C;;;AAE9C,IAAI,aAAa,GAAG,KAAK,CAAC;AAEnB,KAAK,UAAU,UAAU,CAAC,UAAkB;IACjD,MAAM,OAAO,GAAG,CAAC,MAAM,MAAM,CAAC,8BAA8B,CAAC,CAAC,CAAC,OAAO,CAAC;IACvE,IAAI,CAAC,aAAa,EAAE;QAClB,aAAa,GAAG,IAAI,CAAC;QACrB,OAAO,CAAC,UAAU,CAAC;YACjB,WAAW,EAAE,KAAK;YAClB,aAAa,EAAE,OAAO;SACvB,CAAC,CAAC;KACJ;IACD,OAAO,MAAO,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,UAAU,CAAsB,CAAC;AAChF,CAAC;AAVD,gCAUC","sourcesContent":["/// <reference path=\"./mermaid-types.d.mts\" />\r\n\r\nlet mermaidInited = false;\r\n\r\nexport async function runMermaid(sourceCode: string) {\r\n  const mermaid = (await import('mermaid/dist/mermaid.esm.mjs')).default;\r\n  if (!mermaidInited) {\r\n    mermaidInited = true;\r\n    mermaid.initialize({\r\n      startOnLoad: false,\r\n      securityLevel: 'loose'\r\n    });\r\n  }\r\n  return await (mermaid.render('test-mermaid', sourceCode) as Promise<unknown>);\r\n}\r\n\r\n"]}