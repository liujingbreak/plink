{"version":3,"file":"markdown-loader.js","sourceRoot":"","sources":["markdown-loader.ts"],"names":[],"mappings":"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","sourcesContent":["import {LoaderDefinitionFunction} from 'webpack';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport _ from 'lodash';\nimport {arrayBuffer2str} from '@wfh/reactivizer';\n// import {markdownToHtml} from './markdown-util';\nimport {markdownProcessor, setupBroker} from './markdown-processor-main';\n// require('node:inspector').open(9222, 'localhost', true);\n\nconst markdownLoader: LoaderDefinitionFunction = function(source, sourceMap) {\n  const cb = this.async();\n  const importCode = [] as string[];\n  let imgIdx = 0;\n  const broker = setupBroker(false);\n  // const logger = this.getLogger('markdown-loader');\n  // debugger;\n\n  const {i, o, r} = markdownProcessor;\n  r('resolve images', broker.outputTable.l.newWorkerReady.pipe(\n    rx.mergeMap(([, _workerNo, workerOutput, workerInput]) => workerOutput.pt.imageToBeResolved.pipe(\n      rx.tap(([m, imgSrc, _file]) => {\n        const url = imgSrc.startsWith('.') ? imgSrc : './' + imgSrc;\n        importCode.push(`import imgSrc${imgIdx} from '${url}';`);\n        workerInput.dpf.imageResolved(m, 'imgSrc' + (imgIdx++));\n      })\n    ))\n  ));\n\n  r('resolve links', broker.outputTable.l.newWorkerReady.pipe(\n    rx.mergeMap(([, _workerNo, workerOutput, workerInput]) => workerOutput.pt.linkToBeResolved.pipe(\n      rx.tap(([m, href, _file]) => {\n        const matched = /([^/]+)\\.md$/.exec(href);\n        if (matched?.[1]) {\n          workerInput.dpf.linkResolved(m, matched[1]);\n          return;\n        }\n        workerInput.dpf.linkResolved(m, href);\n      })\n    ))\n  ));\n\n  r('processFileDone -> ...', i.do.forkProcessFile(o.at.processFileDone, source, this.resourcePath).pipe(\n    rx.take(1),\n    rx.tap(([, {resultHtml, toc, mermaid}]) => {\n      cb(null, importCode.join('\\n') + '\\nconst html = ' + arrayBuffer2str(resultHtml) +\n        ';\\nlet toc = ' + JSON.stringify(toc) +\n        ';\\nlet mermaids = ' + JSON.stringify(mermaid.map(item => arrayBuffer2str(item))) + ';' +\n        ';\\nlet m = {html, toc, mermaids};\\nexport default m;\\n',\n      sourceMap\n      );\n    }),\n    op.catchError(err => {\n      cb(err, JSON.stringify(err), sourceMap);\n      return rx.EMPTY;\n    })\n  ));\n  // markdownToHtml(source, this.resourcePath,\n  //   imgSrc => {\n  //     const url = imgSrc.startsWith('.') ? imgSrc : './' + imgSrc;\n  //     importCode.push(`import imgSrc${imgIdx} from '${url}';`);\n  //     return Promise.resolve('imgSrc' + (imgIdx++));\n  //   })\n  //   .pipe(\n  //     op.take(1),\n  //     op.map(result => {\n  //       cb(null,\n  //         importCode.join('\\n') + '\\nconst html = ' + result.content + ';\\nlet toc = ' + JSON.stringify(result.toc) + ';\\nlet m = {html, toc};\\nexport default m;\\n', sourceMap);\n  //     }),\n  //     op.catchError(err => {\n  //       cb(err, JSON.stringify(err), sourceMap);\n  //       return rx.EMPTY;\n  //     })\n  //   )\n  //   .subscribe();\n};\n\nexport default markdownLoader;\n\n"]}