{"version":3,"file":"markdown-loader.js","sourceRoot":"","sources":["markdown-loader.ts"],"names":[],"mappings":";;;AACA,iDAA2B;AAC3B,2DAAqC;AAErC,4FAA4F;AAC5F,+BAA+B;AAC/B,mDAA+C;AAC/C,2DAA2D;AAE3D,MAAM,cAAc,GAAqB,UAAS,MAAM,EAAE,SAAS;IACjE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACxB,MAAM,UAAU,GAAG,EAAc,CAAC;IAClC,IAAI,MAAM,GAAG,CAAC,CAAC;IAEf,oDAAoD;IACpD,YAAY;IAEZ,IAAA,8BAAc,EAAC,MAAM;IACnB,wFAAwF;IACxF,MAAM,CAAC,EAAE;QACP,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;QAC5D,UAAU,CAAC,IAAI,CAAC,gBAAgB,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC;QACzD,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;IAC3D,CAAC,CAAC;SACD,IAAI,CACH,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;QACd,EAAE,CAAC,IAAI,EACL,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,iBAAiB,GAAG,MAAM,CAAC,OAAO,GAAG,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,8CAA8C,EAAE,SAAS,CAAC,CAAC;IAC3K,CAAC,CAAC,EACF,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QAClB,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACH;SACA,SAAS,EAAE,CAAC;AACjB,CAAC,CAAC;AAEF,kBAAe,cAAc,CAAC;AAE9B,qCAAqC;AACrC,kBAAkB;AAClB,oBAAoB;AACpB,wBAAwB;AACxB,wBAAwB;AACxB,sBAAsB;AACtB,yBAAyB;AACzB,0CAA0C;AAC1C,wCAAwC;AACxC,2BAA2B;AAC3B,4BAA4B;AAC5B,0BAA0B;AAC1B,8BAA8B;AAC9B,kCAAkC;AAClC,iCAAiC;AACjC,0BAA0B;AAC1B,6BAA6B;AAC7B,+BAA+B;AAC/B,4BAA4B;AAC5B,6BAA6B;AAC7B,wBAAwB;AACxB,mBAAmB;AACnB,oBAAoB;AACpB,gBAAgB;AAChB,YAAY;AACZ,OAAO;AACP,kBAAkB;AAClB,kBAAkB;AAClB,MAAM;AAEN,+EAA+E;AAC/E,qDAAqD;AACrD,8FAA8F;AAC9F,0GAA0G;AAC1G,mFAAmF;AACnF,iBAAiB;AACjB,wCAAwC;AACxC,iDAAiD;AACjD,0BAA0B;AAC1B,mCAAmC;AACnC,oBAAoB;AACpB,8BAA8B;AAC9B,aAAa;AACb,4BAA4B;AAC5B,WAAW;AACX,2HAA2H;AAC3H,uCAAuC;AACvC,uEAAuE;AACvE,iBAAiB;AACjB,6DAA6D;AAC7D,iEAAiE;AACjE,oDAAoD;AACpD,UAAU;AACV,+BAA+B;AAC/B,UAAU;AACV,QAAQ;AACR,IAAI","sourcesContent":["import {LoaderDefinition} from 'webpack';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport _ from 'lodash';\n// import {jsonToCompilerOptions, transpileSingleTs} from '@wfh/plink/wfh/dist/ts-compiler';\n// import ts from 'typescript';\nimport {markdownToHtml} from './markdown-util';\n// require('node:inspector').open(9222, 'localhost', true);\n\nconst markdownLoader: LoaderDefinition = function(source, sourceMap) {\n  const cb = this.async();\n  const importCode = [] as string[];\n  let imgIdx = 0;\n\n  // const logger = this.getLogger('markdown-loader');\n  // debugger;\n\n  markdownToHtml(source,\n    // imgSrc => loadModuleInWebpack(imgSrc.startsWith('.') ? imgSrc : './' + imgSrc, this))\n    imgSrc => {\n      const url = imgSrc.startsWith('.') ? imgSrc : './' + imgSrc;\n      importCode.push(`import imgSrc${imgIdx} from '${url}';`);\n      return Promise.resolve(' + imgSrc' + (imgIdx++) + ' + ');\n    })\n    .pipe(\n      op.take(1),\n      op.map(result => {\n        cb(null,\n          importCode.join('\\n') + '\\nconst html = ' + result.content + ';\\nlet toc = ' + JSON.stringify(result.toc) + ';\\nlet m = {html, toc};\\nexport default m;\\n', sourceMap);\n      }),\n      op.catchError(err => {\n        cb(err, JSON.stringify(err), sourceMap);\n        return rx.EMPTY;\n      })\n    )\n    .subscribe();\n};\n\nexport default markdownLoader;\n\n// const co = jsonToCompilerOptions({\n//   baseUrl: '.',\n//   outDir: 'dist',\n//   declaration: false,\n//   module: 'commonjs',\n//   target: 'es2015',\n//   noImplicitAny: true,\n//   suppressImplicitAnyIndexErrors: true,\n//   allowSyntheticDefaultImports: true,\n//   esModuleInterop: true,\n//   inlineSourceMap: false,\n//   inlineSources: false,\n//   moduleResolution: 'node',\n//   experimentalDecorators: true,\n//   emitDecoratorMetadata: true,\n//   noUnusedLocals: true,\n//   preserveSymlinks: false,\n//   downlevelIteration: false,\n//   strictNullChecks: true,\n//   resolveJsonModule: true,\n//   diagnostics: false,\n//   newLine: 'lf',\n//   lib: ['es2016',\n//     'es2015',\n//     'dom'\n//   ],\n//   pretty: true,\n//   rootDir: 'ts'\n// });\n\n// function loadModuleInWebpack(request: string, ctx: LoaderContext<unknown>) {\n//   return new rx.Observable<string>(subscriber => {\n//     // Unlike extract-loader, we does not support embedded require statement in source code\n//     ctx.loadModule(request, (err: Error | null, source: string | Buffer, _sourceMap, normalModule) => {\n//       const __webpack_public_path__ = ctx._compiler!.options.output?.publicPath;\n//       if (err)\n//         return subscriber.error(err);\n//       const _exports: {default?: string} = {};\n//       const sandbox = {\n//         __webpack_public_path__,\n//         module: {\n//           exports: _exports\n//         },\n//         exports: _exports\n//       };\n//       // console.log(`loadModuleInWebpack: ${request} source: ${Buffer.isBuffer(source) ? source.toString() : source}`);\n//       if (Buffer.isBuffer(source)) {\n//         subscriber.next('Error: Webpack loads a buffer ' + request);\n//       } else {\n//         source = transpileSingleTs(source, co, ts as any);\n//         vm.runInNewContext(source, vm.createContext(sandbox));\n//         subscriber.next(sandbox.exports.default);\n//       }\n//       subscriber.complete();\n//     });\n//   });\n// }\n\n"]}