{"version":3,"file":"markdown-processor.js","sourceRoot":"","sources":["markdown-processor.ts"],"names":[],"mappings":";;;AAAA,sCAAoC;AACpC,6EAAgF;AAChF,6EAAiH;AAEjH,MAAM,GAAG,GAAG,IAAA,gBAAQ,EAAC,UAAU,CAAC,CAAC;AAEpB,QAAA,iBAAiB,GAAsB,IAAA,iCAAmB,EAAiC;IACtG,IAAI,EAAE,mBAAmB;IACzB,KAAK,EAAE,IAAI;IACX,iBAAiB,EAAE,CAAC,MAAM,EAAE,aAAa,CAAC;IAC1C,GAAG,CAAC,GAAG,GAAG;QACR,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;IACnB,CAAC;CACF,CAAC,CAAC;AACH,IAAA,uCAAa,EAAC,yBAAiB,CAAC,CAAC","sourcesContent":["import {log4File} from '@wfh/plink';\nimport {createWorkerControl} from '@wfh/reactivizer/dist/fork-join/node-worker';\nimport {MdInputActions, MdOutputEvents, setupReacting, MarkdownProcessor} from '../isom/markdown-process-common';\n\nconst log = log4File(__filename);\n\nexport const markdownProcessor: MarkdownProcessor = createWorkerControl<MdInputActions, MdOutputEvents>({\n  name: 'markdownProcessor',\n  debug: true,\n  debugExcludeTypes: ['wait', 'stopWaiting'],\n  log(...msg) {\n    log.info(...msg);\n  }\n});\nsetupReacting(markdownProcessor);\n\n"]}