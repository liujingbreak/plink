{"version":3,"file":"redux-toolkit-observable.js","sourceRoot":"","sources":["../redux-toolkit-observable.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference lib=\"es2017\" />\n/// <reference path=\"./hmr-module.d.ts\" />\n// eslint-disable  max-line-length member-ordering\n/**\n * A combo set for using Redux-toolkit along with redux-observable\n */\nimport {\n  CaseReducer, combineReducers, configureStore,\n  ConfigureStoreOptions, createSlice as reduxCreateSlice, CreateSliceOptions,\n  Draft, EnhancedStore, PayloadAction, ReducersMapObject,\n  Slice, SliceCaseReducers, Reducer, PayloadActionCreator,\n  ValidateSliceCaseReducers, Middleware, ActionCreatorWithPayload\n} from '@reduxjs/toolkit';\nimport { createEpicMiddleware, Epic, ofType } from 'redux-observable';\nimport { BehaviorSubject, Observable, ReplaySubject, Subject, OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, filter, map, mergeMap, take, takeUntil, tap, catchError} from 'rxjs/operators';\n\nexport {PayloadAction, SliceCaseReducers, Slice};\n\nexport interface ExtraSliceReducers<SS> {\n  _init: CaseReducer<SS, PayloadAction<{isLazy: boolean}>>;\n  _change: CaseReducer<SS, PayloadAction<(draftState: Draft<SS>) => void>>;\n}\n\nexport type ReducerWithDefaultActions<SS,\n  ACR extends SliceCaseReducers<SS>> = ValidateSliceCaseReducers<SS, ACR> & ExtraSliceReducers<SS>;\n\nexport function ofPayloadAction<P1, T1 extends string>(actionCreators1: ActionCreatorWithPayload<P1, T1>):\nOperatorFunction<any, P1 extends undefined ? {type: T1} : PayloadAction<P1, T1>>;\nexport function ofPayloadAction<P1, P2, T1 extends string, T2 extends string>(actionCreators1: ActionCreatorWithPayload<P1, T1>, actionCreators2: ActionCreatorWithPayload<P2, T2>):\nOperatorFunction<any, PayloadAction<P1 | P2, T1 | T2>>;\nexport function ofPayloadAction<P1, P2, P3, T1 extends string, T2 extends string, T3 extends string>(actionCreators1: ActionCreatorWithPayload<P1, T1>,\n  actionCreators2: ActionCreatorWithPayload<P2, T2>, actionCreators3: ActionCreatorWithPayload<P3, T3>):\nOperatorFunction<any, PayloadAction<P1 | P2 | P3, T1 | T2 | T3>>;\nexport function ofPayloadAction<P, T extends string>(...actionCreators: ActionCreatorWithPayload<P, T>[]):\nOperatorFunction<any, PayloadAction<P, T>> {\n  const types = actionCreators.map(c => c.type) as [T, ...T[]];\n  return ofType(...types);\n}\n\nexport interface ErrorState {\n  actionError?: Error;\n}\n\nconst defaultSliceReducers: Partial<ExtraSliceReducers<any>> = {\n  _change: (state, action) => {\n    action.payload(state);\n  }\n};\n\ntype InferStateType<MyCreateSliceOptionsType> = MyCreateSliceOptionsType extends CreateSliceOptions<infer S, any, string> ? S : unknown;\n\n/** A Helper infer type */\nexport type InferSliceType<MyCreateSliceOptionsType> =\n  Slice<InferStateType<MyCreateSliceOptionsType>,\n  (MyCreateSliceOptionsType extends CreateSliceOptions<any, infer _CaseReducer, string> ? _CaseReducer : SliceCaseReducers<InferStateType<MyCreateSliceOptionsType>>) &\n  ExtraSliceReducers<InferStateType<MyCreateSliceOptionsType>>,\n  string>;\n\n/** A Helper infer type */\nexport type InferActionsType<MyCreateSliceOptionsType> =\nInferSliceType<MyCreateSliceOptionsType>['actions'];\n\nexport class StateFactory {\n  /**\n   * Why I don't use Epic's state$ parameter:\n   * \n   * Redux-observable's state$ does not notify state change event when a lazy loaded (replaced) slice initialize state \n   */\n  realtimeState$: BehaviorSubject<unknown>;\n  store$ = new BehaviorSubject<EnhancedStore<any, PayloadAction<any>> | undefined>(undefined);\n  log$: Observable<any[]>;\n\n  rootStoreReady: Promise<EnhancedStore<any, PayloadAction<any>>>;\n  /**\n   * same as store.dispatch(action), but this one goes through Redux-observable's epic middleware\n   */\n  actionsToDispatch = new ReplaySubject<PayloadAction<any>>(20);\n  reportActionError: (err: Error) => void;\n\n  private epicSeq = 0;\n  // private globalChangeActionCreator = createAction<(draftState: Draft<any>) => void>('__global_change');\n  private debugLog = new ReplaySubject<any[]>(15);\n  private reducerMap: ReducersMapObject<any, PayloadAction<any>>;\n  private epicWithUnsub$: Subject<[Epic<PayloadAction<unknown>>, string, Subject<string>]>;\n  private errorSlice: InferSliceType<typeof errorSliceOpt>;\n\n  sliceStoreMap = new Map<string, Observable<unknown>>();\n\n  constructor(private preloadedState: ConfigureStoreOptions['preloadedState']) {\n    this.realtimeState$ = new BehaviorSubject<unknown>(preloadedState);\n    this.epicWithUnsub$ = new ReplaySubject<[Epic<PayloadAction<unknown>>, string, Subject<string>]>();\n    this.log$ = this.debugLog.asObservable();\n    this.reducerMap = {};\n\n    this.rootStoreReady = this.store$.pipe(\n      filter(store => store != null),\n      take(1)\n    ).toPromise() as Promise<EnhancedStore<any, PayloadAction>>;\n\n    const errorSlice = this.newSlice(errorSliceOpt);\n\n    this.errorSlice = errorSlice;\n\n    this.reportActionError = this.bindActionCreators(errorSlice).reportActionError;\n  }\n\n  // configureStore(middlewares?: Middleware[]): this;\n  /**\n   * \n   * @param opt Be aware, turn off option \"serializableCheck\" and \"immutableCheck\" from Redux default middlewares\n   */\n  configureStore(opt?: {[key in Exclude<'reducer', keyof ConfigureStoreOptions<unknown, PayloadAction<unknown>>>]: ConfigureStoreOptions<unknown, PayloadAction<unknown>>[key]}) {\n    if (this.store$.getValue())\n      return this;\n    const rootReducer = this.createRootReducer();\n    const epicMiddleware = createEpicMiddleware<PayloadAction<any>>();\n\n    let cfgOpt = opt as ConfigureStoreOptions<unknown, PayloadAction<unknown>>;\n    const ourMiddlwares = [this.errorHandleMiddleware, epicMiddleware];\n    if (cfgOpt) {\n      cfgOpt.reducer = rootReducer;\n      cfgOpt.devTools = false;\n      if (cfgOpt.middleware) {\n        const exitingMid = cfgOpt.middleware;\n        if (typeof exitingMid === 'function') {\n          cfgOpt.middleware = (getDefault) => {\n            return [...exitingMid(getDefault), ...ourMiddlwares];\n          };\n        } else {\n          cfgOpt.middleware = [...exitingMid, ...ourMiddlwares];\n        }\n      } else {\n        cfgOpt.middleware = (getDefault) => {\n          return [...getDefault({serializableCheck: false, immutableCheck: false}), ...ourMiddlwares];\n        };\n      }\n    } else {\n      cfgOpt = {\n        reducer: rootReducer,\n        middleware(getDefault) {\n          return [...getDefault({serializableCheck: false, immutableCheck: false}), ...ourMiddlwares];\n        },\n        devTools: false\n      };\n    }\n\n    const store = configureStore(cfgOpt);\n    this.store$.next(store);\n\n    store.subscribe(() => {\n      const state = store.getState();\n      this.realtimeState$.next(state);\n    });\n\n    this.realtimeState$.pipe(\n      distinctUntilChanged(),\n      // tap(() => console.log('state changed')),\n      tap(state => this.debugLog.next(['state', state]))\n    ).subscribe();\n\n    epicMiddleware.run((action$, state$, dependencies) => {\n      return this.epicWithUnsub$.pipe(\n        tap(([epic, epicId, unsub]) => {\n          this.debugLog.next([`[redux-toolkit-obs] ${epicId} is about to be subscribed`]);\n          // console.log(`[redux-toolkit-obs] ${epicId} is about to be subscribed`);\n        }),\n        mergeMap(([epic, epicId, unsub]) => (epic(action$, state$, dependencies))\n          .pipe(\n            // tap(action => console.log('action: ', action.type)),\n            takeUntil(unsub.pipe(\n              take(1),\n              map(epicId => {\n                this.debugLog.next(['[redux-toolkit-obs]', `unsubscribe from ${epicId}`]);\n                // console.log(`[redux-toolkit-obs] unsubscribe ${epicId}`);\n              }))\n            ),\n            catchError((err, src) => {\n              this.reportActionError(err);\n              console.error(err);\n              return src;\n            })\n          )\n        ),\n        takeUntil(action$.pipe(\n          ofType('STOP_EPIC'),\n          tap(() => this.debugLog.next(['[redux-toolkit-obs]', 'Stop all epics']))\n        ))\n      );\n    });\n    this.addEpic((action$) => {\n      return this.actionsToDispatch;\n    }, 'internalDispatcher');\n\n    return this;\n  }\n\n  /**\n   * Create our special slice with a default reducer action: \n   * - `change(state: Draft<S>, action: PayloadAction<(draftState: Draft<SS>) => void>)`\n   * - initialState is loaded from StateFactory's partial preloadedState\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  newSlice<S extends Record<string, any>, _CaseReducer extends SliceCaseReducers<S>, Name extends string = string>(\n    opt: CreateSliceOptions<S, _CaseReducer, Name>):\n    Slice<S, _CaseReducer & ExtraSliceReducers<S>, Name> {\n\n    const _opt = opt as CreateSliceOptions<S, _CaseReducer & ExtraSliceReducers<S>, Name>;\n    const reducers = _opt.reducers as ReducerWithDefaultActions<S, _CaseReducer>;\n\n    if (reducers._change == null)\n      Object.assign(_opt.reducers, defaultSliceReducers);\n\n    if (reducers._init == null) {\n      reducers._init = (draft, action) => {\n        this.debugLog.next(['[redux-toolkit-obs]', `slice \"${opt.name}\" is created ${action.payload.isLazy ? 'lazily' : ''}`]);\n      };\n    }\n\n    if (this.preloadedState?.[opt.name]) {\n      Object.assign(opt.initialState, this.preloadedState[opt.name]);\n    }\n    const slice = reduxCreateSlice(\n      opt as CreateSliceOptions<S, _CaseReducer & ExtraSliceReducers<S>, Name>);\n\n    this.addSliceMaybeReplaceReducer(slice);\n    const slicedStore = (this.realtimeState$ as Subject<Record<string, any>>).pipe(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      map(s => s[opt.name]),\n      filter(ss => ss != null),\n      distinctUntilChanged(),\n      // share() do not use share() for a BehaviorSubject\n    );\n    this.sliceStoreMap.set(opt.name, slicedStore);\n    return slice;\n  }\n\n  removeSlice(slice: {name: string}) {\n    delete this.reducerMap[slice.name];\n    if (this.getRootStore()) {\n      this.debugLog.next(['[redux-toolkit-obs]', 'remove slice '+ slice.name]);\n      const newRootReducer = this.createRootReducer();\n      this.getRootStore()!.replaceReducer(newRootReducer);\n      this.sliceStoreMap.delete(slice.name);\n    }\n  }\n\n  /**\n   * @returns a function to unsubscribe from this epic\n   * @param epic \n   * @param epicName a name for debug and logging purpose\n   */\n  addEpic<SL = Slice<any, any, string>>(\n    epic: Epic<\n    PayloadAction<any>, any,\n    {\n      [key in SL extends Slice<any, any, infer Name> ? Name : string]:\n      SL extends Slice<infer S, any, any> ? S : any\n    }\n    >,\n    epicName?: string) {\n    const epicId = 'Epic-' + (epicName || ++this.epicSeq);\n    const unsubscribeEpic = new Subject<string>();\n    this.debugLog.next([`[redux-toolkit-obs] ${epicId} is added`]);\n    this.epicWithUnsub$.next([epic, epicId, unsubscribeEpic]);\n    return () => {\n      unsubscribeEpic.next(epicId);\n      unsubscribeEpic.complete();\n    };\n  }\n\n  sliceState<SS, CaseReducers extends SliceCaseReducers<SS> = SliceCaseReducers<SS>, Name extends string = string>(\n    slice: Slice<SS, CaseReducers, Name>): SS {\n    const store = this.getRootStore();\n    return store ? store.getState()[slice.name] as SS : {} as SS;\n  }\n\n  sliceStore<SS>(slice: Slice<SS>): Observable<SS> {\n    return this.sliceStoreMap.get(slice.name) as Observable<SS>;\n  }\n\n  getErrorState() {\n    return this.sliceState(this.errorSlice);\n  }\n\n  getErrorStore() {\n    return this.sliceStore(this.errorSlice);\n  }\n\n  dispatch<T>(action: PayloadAction<T>) {\n    // console.log('dispatch', action.type);\n    this.actionsToDispatch.next(action);\n  }\n\n  /**\n   * Unlike Redux's bindActionCreators, our store is lazily created, dispatch is not available at beginning.\n   * Parameter is a Slice instead of action map\n   */\n  bindActionCreators<A extends Record<string, any>>(slice: {actions: A})\n    : A {\n\n    const actionMap = {} as A;\n    for (const [name, actionCreator] of Object.entries(slice.actions)) {\n      const doAction = (...param: any[]) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n        const action = actionCreator(...param);\n        this.dispatch(action);\n        return action as unknown;\n      };\n      (doAction as unknown as {type: string}).type = (actionCreator as PayloadActionCreator).type;\n      actionMap[name as keyof A] = doAction as any;\n    }\n    return actionMap;\n  }\n\n  stopAllEpics() {\n    this.store$.pipe(\n      tap(store => {\n        if (store)\n          store.dispatch({payload: null, type: 'STOP_EPIC'});\n      }),\n      take(1)\n    ).subscribe();\n  }\n\n  getRootStore() {\n    return this.store$.getValue();\n  }\n\n  private errorHandleMiddleware: Middleware = (api) => {\n    return (next) => {\n      return (action: PayloadAction) => {\n        try {\n          // console.log('action in errorHandleMiddleware', action.type);\n          this.debugLog.next(['action', action != null ? action.type : action]);\n          const ret = next(action);\n          return ret;\n        } catch (err) {\n          // tslint:disable-next-line no-console\n          console.error('[redux-toolkit-observable] failed action', action);\n          // tslint:disable-next-line no-console\n          console.error('[redux-toolkit-observable] action dispatch error', err);\n          this.reportActionError(err as Error);\n          throw err;\n        }\n      };\n    };\n  };\n\n  private addSliceMaybeReplaceReducer<State, Name extends string = string>(\n    slice: Slice<State, SliceCaseReducers<State> & ExtraSliceReducers<State>, Name>\n  ) {\n    this.reducerMap[slice.name] = slice.reducer;\n    if (this.getRootStore()) {\n      const newRootReducer = this.createRootReducer();\n      this.getRootStore()!.replaceReducer(newRootReducer);\n      this.dispatch(slice.actions._init({isLazy: true}));\n    } else {\n      this.dispatch(slice.actions._init({isLazy: false}));\n    }\n    return slice;\n  }\n\n  private createRootReducer(): Reducer<any, PayloadAction> {\n    const combined = combineReducers(this.reducerMap);\n    const rootReducer: Reducer<any, PayloadAction<any>> = (state, action) => {\n      if (action.type === '::syncState') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n        return action.payload(state);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return combined(state, action);\n      }\n    };\n    return rootReducer;\n  }\n}\n\nexport type PayloadCaseReducers<S, R extends SliceCaseReducers<S>> = {\n  [T in keyof R]: R[T] extends (s: any) => any ?\n    (state: Draft<S>) => S | void | Draft<S> :\n    R[T] extends (s: any, action: PayloadAction<infer P>) => any ?\n      (state: Draft<S>, payload: P) => S | void | Draft<S> : (state: Draft<S>, payload: unknown) => S | void | Draft<S>;\n};\n\n/**\n * Simplify reducers structure required in Slice creation option.\n * \n * Normally, to create a slice, you need to provide a slice option paramter like:\n * {name: <name>, initialState: <value>, reducers: {\n *  caseReducer(state, {payload}: PayloadAction<PayloadType>) {\n *    // manipulate state draft with destructored payload data\n *  }\n * }}\n * \n * Unconvenient thing is the \"PayloadAction<PayloadType>\" part which specified as second parameter in every case reducer definition,\n * actually we only care about the Payload type instead of the whole PayloadAction in case reducer.\n * \n * this function accept a simplified version of \"case reducer\" in form of: \n * {\n *    [caseName]: (Draft<State>, payload: any) => Draft<State> | void;\n * }\n * \n * return a regular Case reducers, not longer needs to \"destructor\" action paramter to get payload data.\n * \n * @param payloadReducers \n * @returns \n */\nexport function fromPaylodReducer<S, R extends SliceCaseReducers<S>>(payloadReducers: PayloadCaseReducers<S, R>):\nCreateSliceOptions<S, R>['reducers'] {\n  const reducers = {} as CreateSliceOptions<S, R>['reducers'];\n  for (const [caseName, simpleReducer] of Object.entries(payloadReducers)) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    reducers[caseName as keyof CreateSliceOptions<S, R>['reducers']] = function(s: Draft<S>, action: PayloadAction<any>) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      return simpleReducer(s, action.payload) as unknown;\n    } as any;\n  }\n  return reducers;\n}\n\nconst errorSliceOpt = {\n  initialState: {} as ErrorState,\n  name: 'error',\n  reducers: {\n    reportActionError(s: ErrorState, {payload}: PayloadAction<Error>) {\n      s.actionError = payload;\n    }\n  }\n};\n\nif (module.hot) {\n  module.hot.decline();\n}\n"]}