{"version":3,"file":"tiny-redux-toolkit.js","sourceRoot":"","sources":["../tiny-redux-toolkit.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/**\n * This file provide some hooks which leverages RxJS to mimic Redux-toolkit + Redux-observable\n * which is supposed to be used independently within any React component in case your component has \n * complicated async state change logic.\n * \n * - it is small and supposed to be well performed\n * - it does not use ImmerJS, you should take care of immutability of state by yourself\n * - because there is no ImmerJS, you can put any type of Object in state including those are not friendly by ImmerJS\n */\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nexport interface Action<S> {\n  type: string;\n  reducer?(old: S): S | void;\n}\n\nexport interface PayloadAction<S, P = any[]> {\n  type: string;\n  payload: P;\n  reducer?(old: S, ...payload: P extends Array<infer I> ? I[] : [P]): S | void;\n}\n\nexport type Reducers<S, R = any> = {\n  /** Returning `undefined / void` has same effect of returning old state reference,\n   * Returning a brand new state object for immutability in normal case.\n   */\n  [K in keyof R]: (state: S, ...payload: any[]) => S | void;\n};\n\nexport type Actions<S, R> = {\n  [K in keyof R]:\n  R[K] extends (s: S) => any ? {\n    (): ActionTypes<S, R>[K];\n    type: string;\n  } :\n    R[K] extends (s: S, payload: infer P) => any ? {\n      (payload: P): ActionTypes<S, R>[K];\n      type: string;\n    } :\n      R[K] extends (s: S, ...payload: infer M) => any ? {\n        (...payload: M): ActionTypes<S, R>[K];\n        type: string;\n      } : {\n        (): ActionTypes<S, R>[K];\n        type: string;\n      };\n};\n\ntype ActionTypes<S, R> = {\n  [K in keyof R]:\n  R[K] extends (s: S) => any ? Action<S>:\n    R[K] extends (s: S, payload: infer P) => any ? PayloadAction<S, P> :\n      R[K] extends (s: S, ...payload: infer M) => any ? PayloadAction<S, M> :\n        PayloadAction<S, unknown>;\n};\n\ntype OutputActionObs<S, R extends Reducers<any>, K extends keyof R> =\n  rx.Observable<R[K] extends (s: S) => any ? Action<S> : R[K] extends (s: S, payload: infer P) => any ? PayloadAction<S, P> : PayloadAction<S, unknown>>;\n  // rx.Observable<PayloadAction<any, Parameters<R[K]>[1] extends undefined ? void : Parameters<R[K]>[1], K>>;\n\ntype OfTypePipeOp<S, R extends Reducers<S>, K extends keyof R> = (src: rx.Observable<PayloadAction<S> | Action<S>>) => OutputActionObs<S, R, K>;\n\n/** same as ofPayloadAction() , to filter action stream by type, unlike ofPayloadAction(), parameter is a string instead of actionCreator */\nexport interface OfTypeFn<S, R extends Reducers<S>> {\n  <K1 extends keyof R>(actionType: K1): OfTypePipeOp<S, R, K1>;\n  <K1 extends keyof R, K2 extends keyof R>(actionType: K1, actionType2: K2): OfTypePipeOp<S, R, K1 | K2>;\n  <K1 extends keyof R, K2 extends keyof R, K3 extends keyof R>(actionType: K1, actionType2: K2, actionType3: K3): OfTypePipeOp<S, R, K1 | K2 | K3>;\n  <K extends keyof R>(...actionTypes: K[]): OfTypePipeOp<S, R, K>;\n}\n\nexport type EpicFactory<S, R extends Reducers<S>> = (slice: Slice<S, R>, ofType: OfTypeFn<S, R>) => Epic<S> | void;\n\nexport interface Slice<S, R extends Reducers<S>> {\n  name: string | number;\n  state$: rx.BehaviorSubject<S>;\n  /** Action creator functions */\n  action$: rx.Observable<PayloadAction<any> | Action<S>>;\n  action$ByType: ActionByType<S, R>;\n  dispatch: (action: PayloadAction<S> | Action<S>) => void;\n  /** Action creators bound with dispatcher */\n  actionDispatcher: Actions<S, R>;\n  /** Action creators */\n  actions: Actions<S, R>;\n  destroy: () => void;\n  destroy$: rx.Observable<any>;\n  /**\n   * \n   * @param epic the \"Epic\" stream of actions-in, actions-out, refer to https://redux-observable.js.org/docs/basics/Epics.html\n   * @returns a function to destory (subscribe from) epic\n   */\n  epic(epic: Epic<S>): void;\n  /**\n   * epic(epic) is recommended to be used instead of addEpic(), it has conciser method signature.\n   * @param epicFactory a factory function which creates the \"Epic\" (stream of actions-in and actions-out,\n   *  refer to https://redux-observable.js.org/docs/basics/Epics.html)\n   * @returns a function to remove/unsubscribe this epic\n   */\n  addEpic(epicFactory: EpicFactory<S, R>): () => void;\n  /**\n   * Most of the time you just need epic(epic), this method is convenient in case of constantly \"adding\"\n   * new epic after \"unsubscribe\" from preceding old epic\n   * @param epicFactory$ this observable will be \"switchMap()\"ed in a pipeline\n   */\n  addEpic$(epicFactory$: rx.Observable<EpicFactory<S, R> | null | undefined>): () => void;\n  getStore(): rx.Observable<S>;\n  getState(): S;\n  /** un-processed actions go through this operator */\n  setActionInterceptor(intec: rx.OperatorFunction<PayloadAction<S, any> | Action<S>, PayloadAction<S, any> | Action<S>>): void;\n}\n\nexport type Epic<S, A$ = rx.Observable<PayloadAction<S, any> | Action<S>>> = (actions: A$, states: rx.BehaviorSubject<S>) => A$;\n\ntype ActionOfCreator<C> = C extends {\n  (): any;\n  type: string;\n} ? { type: string; payload: undefined } :\n  C extends {\n    (payload: infer P): any;\n    type: string;\n  } ? {type: string; payload: P} :\n    C extends {\n      (...args: infer M): any;\n      type: string;\n    } ? {type: string; payload: M} : unknown;\n\nexport interface OfPayloadActionFn {\n  <C>(actionCreators: C): rx.OperatorFunction<any, ActionOfCreator<C>>;\n  <C1, C2>(actionCreators: C1, actionCreators1: C2):\n  rx.OperatorFunction<any , ActionOfCreator<C1> | ActionOfCreator<C2>>;\n  <C1, C2, C3>(actionCreators: C1, actionCreators1: C2, actionCreators2: C3):\n  rx.OperatorFunction<any, ActionOfCreator<C1> | ActionOfCreator<C2> | ActionOfCreator<C3>>;\n  (...actionCreators: {type: string}[]): rx.OperatorFunction<any, {type: string; payload?: unknown}>;\n}\n\nexport const ofPayloadAction: OfPayloadActionFn = (\n  ...actionCreators: {type: string}[]) => {\n  return function(src: rx.Observable<{type: string}>) {\n    return src.pipe(\n      op.filter(action => actionCreators.some(ac => action.type === ac.type)),\n      op.share()\n    );\n  };\n};\n\ntype ActionByType<S, R> = {[K in keyof R]: rx.Observable<ActionTypes<S, R>[K]>};\n/**\n * Map action stream to multiple action streams by their action type.\n * This is an alternative way to categorize action stream, compare to \"ofPayloadAction()\"\n * Usage:\n```\nslice.addEpic(slice => action$ => {\n  const actionsByType = castByActionType(slice.actions, action$);\n  return merge(\n    actionsByType.REDUCER_NAME_A.pipe(\n      ...\n    ),\n    actionsByType.REDUCER_NAME_B.pipe(\n      ...\n    ),\n  )\n})\n```\n * @param actionCreators \n * @param action$ \n */\nexport function castByActionType<S, R extends Reducers<S>>(actionCreators: Actions<S, R>,\n  action$: rx.Observable<PayloadAction<any> | Action<S>>): ActionByType<S, R> {\n\n  const splitActions = {} as ActionByType<S, R>;\n\n  for (const reducerName of Object.keys(actionCreators) as (keyof R)[]) {\n    Object.defineProperty(splitActions, reducerName, {\n      get() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return action$.pipe(ofPayloadAction(actionCreators[reducerName]));\n      }\n    });\n  }\n\n  return splitActions;\n}\n\nexport function isActionOfCreator<C extends {type: string}>(action: any, actionCreator: C):\n  action is ActionOfCreator<C> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return action.type === actionCreator.type;\n}\n\nconst sliceCount4Name: {[name: string]: number} = {};\n\nexport interface SliceOptions<RS, R extends Reducers<RS>, S extends RS = RS> {\n  name: string;\n  initialState: S;\n  reducers: R;\n  /** Generate unique ID as part of slice's name, default: true */\n  generateId?: boolean;\n  debug?: boolean;\n  debugActionOnly?: boolean;\n  rootStore?: rx.BehaviorSubject<{[k: string]: S}>;\n}\n\n/**\n * Reducers and initialState are reused cross multiple component\n * \n *  Slice --- Component instance (state, actions)\n */\nexport function createSlice<S extends {error?: Error}, R extends Reducers<S>>(opt: SliceOptions<S, R>): Slice<S, R> {\n  let name = opt.name;\n  if (opt.generateId === undefined || opt.generateId === true) {\n    if (sliceCount4Name[name] == null) {\n      sliceCount4Name[name] = 0;\n    }\n    opt.name = name = name + '.' + (++sliceCount4Name[name]);\n  }\n  const actionCreators = {} as Actions<S, R>;\n  const actionDispatcher = {} as Actions<S, R>;\n\n  for (const [key, reducer] of Object.entries(opt.reducers)) {\n    const type = name + '/' + key;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const creator = ((payload: unknown[]) => {\n      const action = {\n        type,\n        payload: payload.length === 0\n          ? undefined :\n          payload.length === 1\n            ? payload[0] :\n            payload,\n        reducer\n      };\n      return action;\n    }) as any;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    creator.type = type;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    actionCreators[key as keyof R] = creator;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    actionDispatcher[key as keyof R] = ((...payload: any[]) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n      const action = creator(payload);\n      dispatch(action);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return action;\n    }) as any;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    actionDispatcher[key as keyof R].type = creator.type;\n  }\n\n  const state$ = new rx.BehaviorSubject<S>(opt.initialState);\n  const unprocessedAction$ = new rx.Subject<PayloadAction<S> | Action<S>>();\n  const action$ = new rx.Subject<PayloadAction<S> | Action<S>>();\n\n  function ofType<T extends keyof R>(\n    ...actionTypes: T[]) {\n    return function(src: rx.Observable<PayloadAction<any>>) {\n      return src.pipe(\n        op.filter(\n          action => actionTypes.some(ac => action.type === name + '/' + ac),\n          op.share()\n        )\n      );\n    };\n  }\n\n  function dispatch(action: PayloadAction<S> | Action<S>) {\n    unprocessedAction$.next(action);\n  }\n\n  let actionCount = 0;\n  let executingReducer = false;\n  // To warn developer that no action dispatching shoud be called inside a reducer, this is side-effects and \n  // will leads to recursive reducer\n  let inReducer = false;\n  const interceptor$ = new rx.BehaviorSubject<rx.OperatorFunction<PayloadAction<S, any> | Action<S>, PayloadAction<S, any> | Action<S>>>(\n    input => input\n  );\n\n  const sub = rx.merge(\n    interceptor$.pipe(\n      op.switchMap(interceptor => unprocessedAction$.pipe(\n        // op.observeOn(rx.queueScheduler), // Avoid recursively dispatching action inside an reducer, but normally recursively dispatching should be warned and forbidden\n        op.tap(action => {\n          if (opt.debug || opt.debugActionOnly) {\n            // eslint-disable-next-line no-console\n            console.log(`%c ${name} internal:action `, 'color: black; background: #fae4fc;', action.type);\n          }\n        }),\n        interceptor,\n        op.tap(action => {\n          if (action.reducer) {\n            const currState = state$.getValue();\n            const shallowCopied = {...currState, __ac: ++actionCount};\n            executingReducer = true;\n            if (inReducer) {\n              throw new Error(`Do not dispatch action inside a reducer! (action: ${action.type})`);\n            }\n            inReducer = true;\n            let newState: S | void;\n            try {\n              const payload = (action as PayloadAction<S>).payload;\n              const params = Array.isArray(payload) ? payload : [payload];\n              newState = action.reducer(shallowCopied, ...params);\n            } finally {\n              inReducer = false;\n              executingReducer = false;\n            }\n            // inReducer = false;\n            // executingReducer = false;\n            const changed = newState ? newState : shallowCopied;\n            state$.next(changed);\n          }\n          action$.next(action);\n        }),\n        op.catchError((err, caught) => {\n          console.error(err);\n          dispatch({type: 'reducer error',\n            reducer(s: S) {\n              return {...s, error: err as unknown};\n            }\n          });\n          return caught;\n        })\n      ))\n    ),\n\n    state$.pipe(\n      op.tap(state => {\n        if (opt.debug) {\n          // eslint-disable-next-line no-console\n          console.log(`%c ${name} internal:state `, 'color: black; background: #e98df5;', state);\n        }\n      })\n    ),\n    opt.rootStore\n      ? state$.pipe(\n        op.tap(state => opt.rootStore!.next({...opt.rootStore?.getValue(), [opt.name]: state}))\n      )\n      : rx.EMPTY\n  ).subscribe();\n\n  function destroy() {\n    dispatch({\n      type: '__OnDestroy'\n    });\n    sub.unsubscribe();\n  }\n\n  function addEpic$(epicFactory$: rx.Observable<EpicFactory<S, R> | null | undefined>) {\n    const sub = epicFactory$.pipe(\n      op.distinctUntilChanged(),\n      op.switchMap(fac => {\n        if (fac) {\n          const epic = fac(slice, ofType as OfTypeFn<S, R>);\n          if (epic)\n            return epic(action$, state$).pipe(\n              op.catchError((err, src) => {\n                console.error(err);\n                dispatch({type: 'Epic error',\n                  reducer(s: S) {\n                    return {...s, error: err as unknown};\n                  }\n                });\n                return src;\n              })\n            );\n        }\n        return rx.EMPTY;\n      }),\n      op.takeUntil(unprocessedAction$.pipe(op.filter(action => action.type === '__OnDestroy'), op.take(1))),\n      op.tap(action => dispatch(action)),\n      op.catchError((err, caught) => {\n        console.error(err);\n        dispatch({type: 'Epics error',\n          reducer(s: S) {\n            return {...s, error: err as unknown};\n          }\n        });\n        return caught;\n      })\n    ).subscribe();\n    return () => sub.unsubscribe();\n  }\n\n  const slice: Slice<S, R> = {\n    name,\n    state$,\n    action$,\n    action$ByType: castByActionType(actionCreators, action$),\n    actions: actionCreators,\n    dispatch,\n    actionDispatcher,\n    destroy,\n    destroy$: unprocessedAction$.pipe(op.filter(action => action.type === '__OnDestroy'), op.take(1)),\n    epic(epic: Epic<S>) {\n      const epicFactory: EpicFactory<S, R> = () => {\n        return epic;\n      };\n      addEpic$(rx.of(epicFactory));\n    },\n    setActionInterceptor(intec: rx.OperatorFunction<PayloadAction<S, any> | Action<S>, PayloadAction<S, any> | Action<S>>) {\n      interceptor$.next(intec);\n    },\n    addEpic(epicFactory: EpicFactory<S, R>) {\n      return addEpic$(rx.of(epicFactory));\n    },\n    addEpic$,\n    getStore() {\n      return state$;\n    },\n    getState() {\n      if (executingReducer) {\n        throw new Error('To be consistent with Redux\\'s behaviour, slice.getState() is not allowed to be invoked inside a reducer');\n      }\n      return state$.getValue();\n    }\n  };\n  return slice;\n}\n\nexport function action$OfSlice<S, R extends Reducers<S>,\n  T extends keyof R>(\n  slice: Slice<S, R>,\n  actionType: T) {\n\n  return new rx.Observable<R[T] extends (s: any) => any ? {type: T} :\n    R[T] extends (s: any, p: infer P) => any ? {payload: P; type: T} : never>(sub => {\n      slice.addEpic(slice => (action$) => {\n        return action$.pipe(\n          ofPayloadAction(slice.actions[actionType]),\n          op.map(action => sub.next(action as any)),\n          op.ignoreElements()\n        );\n      });\n    });\n}\n\n/**\n * @deprecated use Slice['action$ByType'] instead\n */\nexport function action$ByType<S, R extends Reducers<S>>(slice: Slice<S, R>) {\n  return castByActionType(slice.actions, slice.action$);\n}\n/**\n * Add an epicFactory to another component's sliceHelper\n * e.g.\n * ```\n * action$.pipe(ofPayloadAction(slice.actionDispatcher._onChildSliceRef),\n *  childSliceOp((childSlice) => {\n *    return childAction$ => {\n *      return childAction$.pipe(...);\n *    };\n *  })\n * ```\n * @param epicFactory \n */\nexport function sliceRefActionOp<S, R extends Reducers<S>>(epicFactory: EpicFactory<S, R>):\nrx.OperatorFunction<PayloadAction<any, Slice<S, R>>, PayloadAction<any, any>> {\n  return function(in$: rx.Observable<PayloadAction<any, Slice<S, R>>>) {\n    return in$.pipe(\n      op.switchMap(({payload}) => {\n        const release = payload.addEpic(epicFactory);\n        return new rx.Observable<PayloadAction<never>>(sub => release);\n      })\n    );\n  };\n}\n\nconst demoSlice = createSlice({\n  name: 'demo',\n  initialState: {} as {ok?: boolean; error?: Error},\n  reducers: {\n    hellow(s, greeting: {data: string}) {},\n    world(s) {},\n    multiPayloadReducer(s, arg1: string, arg2: number) {}\n  }\n});\ndemoSlice.addEpic((slice, ofType) => {\n  return (action$, state$) => {\n    const actionStreams = castByActionType(slice.actions, action$);\n    // slice.actionDispatcher.abc();\n    return rx.merge(\n      actionStreams.hellow.pipe(),\n      actionStreams.multiPayloadReducer.pipe(),\n      action$.pipe(\n        ofType('hellow', 'hellow'),\n        op.map(action => slice.actions.world())\n      ),\n      action$.pipe(\n        ofType('world'),\n        op.tap(action => slice.actionDispatcher.hellow({data: 'yes'}))\n      ),\n      action$.pipe(\n        ofPayloadAction(slice.actions.hellow),\n        op.tap(action => typeof action.payload.data === 'string')\n      ),\n      action$.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        ofPayloadAction(slice.actions.world),\n        op.tap(action => slice.actionDispatcher.hellow({data: 'yes'}))\n      ),\n      action$.pipe(\n        ofPayloadAction(slice.actionDispatcher.hellow, slice.actionDispatcher.world),\n        op.tap(action => action.payload )\n      ),\n      action$.pipe(\n        ofPayloadAction(slice.actions.multiPayloadReducer),\n        op.tap(({payload: [a1, a2]}) => alert(a1))\n      )\n    ).pipe(op.ignoreElements());\n  };\n});\naction$OfSlice(demoSlice, 'hellow').pipe(op.tap(action => action));\naction$OfSlice(demoSlice, 'world').pipe(op.tap(action => action));\n"]}