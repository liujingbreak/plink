{"version":3,"file":"react-redux-helper.js","sourceRoot":"","sources":["../react-redux-helper.ts"],"names":[],"mappings":"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","sourcesContent":["import {InferableComponentEnhancerWithProps} from 'react-redux';\nimport React from 'react';\nimport {CreateSliceOptions, Draft} from '@reduxjs/toolkit';\nimport {useEffect, useState} from 'react';\nimport {Epic} from 'redux-observable';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport {createSliceHelper, EpicFactory, SliceHelper, castByActionType, createReducers, action$OfSlice} from './helper';\nimport {stateFactory} from './state-factory-browser';\nimport {StateFactory, SliceCaseReducers, ofPayloadAction, PayloadAction\n} from './redux-toolkit-observable';\nexport {ofPayloadAction};\nexport {connect, Provider as ReduxProvider} from 'react-redux';\nexport * from './helper';\n\nlet COMPONENT_ID = 0;\n/**\n * Use a dedicated Redux slice store for single component instance\n * @param optsFactory \n * @param epicFactories \n */\nexport function useReduxTookitWith<S extends Record<string, any>, R extends SliceCaseReducers<S>>(stateFactory: StateFactory,\n  optsFactory: () => CreateSliceOptions<S, R>, ...epicFactories: Array<EpicFactory<S, R> | null | undefined>): [S, SliceHelper<S, R>] {\n\n  const willUnmountSub = React.useMemo(() => new rx.ReplaySubject<void>(1), []);\n  const sliceOptions = React.useMemo(optsFactory, [optsFactory]);\n  const epic$s = React.useMemo<rx.BehaviorSubject<EpicFactory<S, R> | null | undefined>[]>(() => {\n    return epicFactories.map(() => new rx.BehaviorSubject<EpicFactory<S, R> | null | undefined>(null));\n  }, [epicFactories]);\n\n  const [state, setState] = React.useState<S>(sliceOptions.initialState);\n\n  const helper = React.useMemo<SliceHelper<S, R>>(() => {\n    const helper = createSliceHelper(stateFactory, {...sliceOptions, name: sliceOptions.name + '.' + COMPONENT_ID++});\n    stateFactory.sliceStore(helper).pipe(\n      op.distinctUntilChanged(),\n      // op.observeOn(rx.animationFrameScheduler), // To avoid changes being batched by React setState()\n      op.tap(changed => setState(changed)),\n      op.takeUntil(willUnmountSub)\n    ).subscribe();\n\n    // Important!!\n    // Epic might contain recurive state changing logic, like subscribing on state$ stream and \n    // change state, it turns out any subscriber that subscribe state$ later than\n    // epic will get a state change event in reversed order !! So epic must be the last one to\n    // subscribe state$ stream\n    for (const epicFac$ of epic$s) {\n      helper.addEpic$(epicFac$);\n    }\n    // Let's fun epic factory as earlier as possible, so that it will not missing\n    // any action dispatched from child component, since child component's useEffect()\n    // runs earlier than parent component's\n    epicFactories.forEach((fac, idx) => epic$s[idx].next(fac));\n    return helper;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    epicFactories.forEach((fac, idx) => epic$s[idx].next(fac));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, epicFactories);\n\n  React.useEffect(() => {\n    return () => {\n      willUnmountSub.next();\n      willUnmountSub.complete();\n      helper.destroy();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return [state, helper];\n}\n\n/**\n * Use a dedicated Redux slice store for single component instance\n * @param optsFactory \n * @param epicFactories \n */\nexport function useReduxTookit<S extends Record<string, any>, R extends SliceCaseReducers<S>>(\n  optsFactory: () => CreateSliceOptions<S, R>,\n  ...epicFactories: Array<EpicFactory<S, R> | null | undefined>): [S, SliceHelper<S, R>] {\n\n  return useReduxTookitWith(stateFactory, optsFactory, ...epicFactories);\n}\n\n/**\n * Use a dedicated Redux slice store for single component instance.\n * Unlike useReduxTookit, useRtk() accepts a State which extends BaseComponentState, \n *  useRtk() will automatically create an extra reducer \"_syncComponentProps\" for shallow coping\n * React component's properties to this internal RTK store\n * @param optsFactory \n * @param epicFactories \n * @returns [state, sliceHelper]\n */\nexport function useRtk<Props extends Record<string, any>, S extends BaseComponentState<Props>, R extends SliceCaseReducers<S>>(\n  optsFactory: () => CreateSliceOptions<S, R>,\n  props: Props,\n  ...epicFactories: Array<EpicFactory4Comp<Props, S, R> | null | undefined>):\n  [S, SliceHelper<S, R & CompPropsSyncReducer<Props, S>>] {\n\n  const extendOptsFactory = React.useCallback(() => {\n    const opts = optsFactory();\n\n    return {\n      ...opts,\n      reducers: withBaseReducers<Props, S, typeof opts.reducers>(opts.reducers)\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    (stateAndSlice[1] as SliceHelper<S, CompPropsSyncReducer<Props, S>>).actionDispatcher._syncComponentProps(props);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, Object.values(props));\n\n  useEffect(() => {\n    return () => {(stateAndSlice[1] as SliceHelper<S, CompPropsSyncReducer<Props, S>>).actionDispatcher._willUnmount(); };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const stateAndSlice = useReduxTookitWith(stateFactory, extendOptsFactory, ...epicFactories);\n  return stateAndSlice;\n}\n\nexport interface BaseComponentState<Props> {\n  componentProps?: Props;\n}\n\nexport type EpicFactory4Comp<Props, S extends BaseComponentState<Props>, R extends SliceCaseReducers<S>, Name extends string = string> =\n  (slice: SliceHelper<S, R & CompPropsSyncReducer<Props, S>>)\n  => Epic<PayloadAction<any>, any, {[Sn in Name]: S}> | void;\n\ntype CompPropsSyncReducer<Props, S extends BaseComponentState<Props>> = {\n  _syncComponentProps(s: S | Draft<S>, action: PayloadAction<Props>): void;\n  _willUnmount(s: S | Draft<S>): void;\n};\n\nfunction withBaseReducers<Props, S extends BaseComponentState<Props>, R extends SliceCaseReducers<S>>(origReducers: R):\nCompPropsSyncReducer<Props, S> & R {\n  const reducers = {\n    _syncComponentProps(s: S, {payload}: PayloadAction<Props>) {\n      s.componentProps = {...payload};\n    },\n    _willUnmount(s: S) {},\n    ...origReducers\n  };\n  return reducers;\n}\n\nexport type InjectedCompPropsType<ConnectHOC> =\n  (ConnectHOC extends InferableComponentEnhancerWithProps<infer TInjectedProps, any> ? TInjectedProps : {[p: string]: unknown})\n  &\n  (ConnectHOC extends InferableComponentEnhancerWithProps<any, infer TOwnProps> ? TOwnProps : {[p: string]: unknown});\n\n\nexport function useStoreOfStateFactory(stateFactory: StateFactory) {\n  const [reduxStore, setReduxStore] = useState<ReturnType<StateFactory['getRootStore']>>(undefined);\n  useEffect(() => {\n    stateFactory.store$.subscribe({\n      next(store) {\n        setReduxStore(store);\n      }\n    });\n\n  }, [stateFactory.store$]);\n\n  return reduxStore;\n}\n\ninterface DemoCompProps {\n  className: string;\n}\ninterface DemoState extends BaseComponentState<DemoCompProps> {\n  ok?: boolean;\n}\n\nconst demoState: DemoState = {};\n\nconst simpleDemoReducers = {\n  hellow(s: DemoState, payload: {data: string}) {},\n  world(s: DemoState) {}\n};\n\nconst demoReducers = createReducers<DemoState, typeof simpleDemoReducers>(simpleDemoReducers);\n\nconst demoSlice = createSliceHelper(stateFactory, {\n  name: '_internal_',\n  initialState: demoState,\n  reducers: withBaseReducers<DemoCompProps, DemoState, typeof demoReducers>(demoReducers)\n});\n\ndemoSlice.addEpic(slice => {\n  return action$ => {\n    slice.actionDispatcher._willUnmount();\n    const actionStreams = castByActionType(slice.actions, action$);\n    return rx.merge(\n      actionStreams.hellow,\n      actionStreams._syncComponentProps,\n      action$.pipe(ofPayloadAction(slice.actions.world),\n        op.map(action => action)),\n      action$.pipe(ofPayloadAction(slice.actions.hellow),\n        op.map(action => action))\n    );\n  };\n});\n\naction$OfSlice(demoSlice, 'hellow').pipe(\n  op.tap(action => console.log(action))\n);\naction$OfSlice(demoSlice, 'world').pipe(\n  op.tap(action => console.log(action))\n);\n"]}