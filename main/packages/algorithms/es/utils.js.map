{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,MAAM,UAAU,WAAW,CAAC,IAAuB;IACjD,MAAM,KAAK,GAAG,EAAc,CAAC;IAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;;QACtB,IAAI,CAAC,GAAG,IAA0B,CAAC;QACnC,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,OAAO,CAAC,EAAE;YACR,iBAAiB,GAAG,CAAC,CAAA,MAAA,CAAC,CAAC,CAAC,0CAAE,CAAC,KAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,iBAAiB,CAAC;YACzJ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACT;QACD,MAAM,GAAG,GAAG,GAAG,iBAAiB,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,CAAC,0CAAE,IAAI,MAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE,KAAK;YAC7G,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC;QACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IACH,sCAAsC;IACtC,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,CAAC","sourcesContent":["import chalk from 'chalk';\r\nimport {RedBlackTree} from './rb-tree';\r\n\r\nexport function printRbTree(tree: RedBlackTree<any>) {\r\n  const lines = [] as string[];\r\n  tree.inorderWalk(node => {\r\n    let p = node as typeof node | null;\r\n    let leadingSpaceChars = '';\r\n    while (p) {\r\n      leadingSpaceChars = (p.p?.p && ((p === p.p.left && p.p.p.right === p.p) || (p === p.p.right && p.p.p.left === p.p)) ? '|  ' : '   ') + leadingSpaceChars;\r\n      p = p.p;\r\n    }\r\n    const str = `${leadingSpaceChars}+- ${node.p ? node.p?.left === node ? 'L' : 'R' : 'root'} ${node.key + ''} - ` +\r\n      `size: ${node.size}`;\r\n    lines.push(node.isRed ? chalk.red(str) : str);\r\n  });\r\n  // eslint-disable-next-line no-console\r\n  console.log(':\\n' + lines.join('\\n'));\r\n}\r\n\r\n"]}