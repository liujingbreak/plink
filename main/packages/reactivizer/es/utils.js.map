{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,MAAM,MAAM,CAAC;AAE3B,MAAM,UAAU,UAAU,CAAI,WAAmB,EAAE,GAAe;IAChE,OAAO,UAAS,EAAoB;QAClC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,OAAO,EAAE,CAAC,KAAK,CACb,EAAE,CAAC,IAAI,CACL,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACT,QAAQ,GAAG,IAAI,CAAC;YAChB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CACH,EACD,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CACxB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,QAAQ,EAAE;gBACb,GAAG,EAAE,CAAC;aACP;QACH,CAAC,CAAC,EACF,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,EAAE,CAAC,cAAc,EAAE,CACpB,CACF,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import * as rx from 'rxjs';\n\nexport function timeoutLog<T>(millseconds: number, log: () => void) {\n  return function(up: rx.Observable<T>): rx.Observable<T> {\n    let hasValue = false;\n    return rx.merge(\n      up.pipe(\n        rx.map(v => {\n          hasValue = true;\n          return v;\n        })\n      ),\n      rx.timer(millseconds).pipe(\n        rx.map(() => {\n          if (!hasValue) {\n            log();\n          }\n        }),\n        rx.take(1),\n        rx.ignoreElements()\n      )\n    );\n  };\n}\n"]}