{"version":3,"file":"duplex.js","sourceRoot":"","sources":["../src/duplex.ts"],"names":[],"mappings":"AAAA,OAAO,EAAc,YAAY,EAAkB,MAAM,WAAW,CAAC;AAQrE,MAAM,OAAO,gBAAgB;IAQ3B,YAAY,IAAoB;QAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,YAAY,CAAI,EAAC,KAAK,EAAE,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,IAAG,KAAK,EAAE,GAAG,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,EAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,YAAY,CAAI,EAAC,KAAK,EAAE,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,IAAG,MAAM,EAAE,GAAG,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,EAAC,CAAC,CAAC;IACnG,CAAC;CACF","sourcesContent":["import {CoreOptions, RxController, ActionFunctions} from './control';\n\nexport type DuplexOptions = {\n  debug?: string | false;\n  outputDebug?: boolean;\n  log?: CoreOptions['log'];\n};\n\nexport class DuplexController<I extends ActionFunctions, O extends ActionFunctions> {\n  /** input actions controller, abbrevation name of \"inputControl\" */\n  i: RxController<I>;\n  inputControl: RxController<I>;\n  /** output actions controller abbrevation name of \"outputControl\" */\n  o: RxController<O>;\n  outputControl: RxController<O>;\n\n  constructor(opts?: DuplexOptions) {\n    this.inputControl = this.i = new RxController<I>({debug: opts?.debug + '.in', log: opts?.log});\n    this.outputControl = this.o = new RxController<O>({debug: opts?.debug + '.out', log: opts?.log});\n  }\n}\n"]}