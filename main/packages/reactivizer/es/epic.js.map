{"version":3,"file":"epic.js","sourceRoot":"","sources":["../src/epic.ts"],"names":[],"mappings":"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","sourcesContent":["import * as rx from 'rxjs';\nimport {RxController, ActionFunctions, PayloadStream} from './control';\nimport {DuplexController, DuplexOptions} from './duplex';\n\nexport type Reactor<I extends ActionFunctions> = (ctl: RxController<I>) => rx.Observable<any>;\nexport type DuplexReactor<I extends ActionFunctions, O extends ActionFunctions> = (ctl: DuplexController<I, O>) => rx.Observable<any>;\n\nexport type ReactorCompositeActions = {\n  mergeStream(stream: rx.Observable<any>, disableCatchError?: boolean, errorLabel?: string): void;\n  stopAll(): void;\n};\n\nexport type ReactorCompositeOutput = {\n  onError(label: string, originError: any): void;\n};\n\nexport type InferFuncReturnEventNames<I extends ActionFunctions> = {\n  [K in keyof I as `${K & string}Done`]: (\n    p: ReturnType<I[K]> extends PromiseLike<infer P> ?\n      P : ReturnType<I[K]> extends rx.Observable<infer OB> ?\n        OB : ReturnType<I[K]>\n  ) => void\n};\n\nexport class ReactorComposite<\n  I extends ActionFunctions = Record<string, never>,\n  O extends ActionFunctions = Record<string, never>\n> extends DuplexController<I & ReactorCompositeActions, O> {\n  protected latestCompActPayloads: {[K in 'mergeStream']: PayloadStream<ReactorCompositeActions, K>};\n  // protected control: DuplexController<ReactorCompositeActions, ReactorCompositeOutput>;\n\n  constructor(private opts?: DuplexOptions) {\n    super(opts);\n    this.latestCompActPayloads = (this as ReactorComposite<ReactorCompositeActions, ReactorCompositeOutput>).i.createLatestPayloadsFor('mergeStream');\n  }\n\n  startAll() {\n    const l = this.latestCompActPayloads;\n    return rx.merge(\n      l.mergeStream.pipe(\n        rx.mergeMap(([_id, downStream, noError, label]) => {\n          if (noError == null || !noError) {\n            downStream = this.handleError(downStream, label);\n          }\n          return downStream;\n        })\n      )\n    ).pipe(\n      rx.takeUntil(this.i.pt.stopAll),\n      rx.catchError((err, src) => {\n        if (this.opts?.log)\n          this.opts.log(err);\n        else\n          console.error(err);\n        return src;\n      })\n    ).subscribe();\n  }\n\n  // eslint-disable-next-line space-before-function-paren\n  reactivize<F extends {[s: string]: (...a: any[]) => any}>(fObject: F) {\n    const funcs = Object.entries(fObject);\n\n    for (const [key, func] of funcs) {\n      if (typeof func === 'function') {\n        const dispatch = (this as ReactorComposite<ReactorCompositeActions, any>).o.core.dispatcherFactory((key + 'Done') as any);\n        (this as ReactorComposite<ReactorCompositeActions>).i.dp.mergeStream(this.i.pt[key as keyof I].pipe(\n          rx.mergeMap(([, ...params]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const res = (func as (...a: any[]) => any).apply(fObject, params);\n            if (rx.isObservable(res)) {\n              return res;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            } else if (res?.then && res?.catch) {\n              return rx.from(res as PromiseLike<unknown>);\n            } else {\n              dispatch(res);\n            }\n            return rx.EMPTY;\n          }),\n          rx.map(res => {\n            dispatch(res as any);\n          })\n        ));\n      }\n    }\n    return this as ReactorComposite<I & F, InferFuncReturnEventNames<F> & O>;\n  }\n\n  addReaction(...params: [stream: rx.Observable<any>, disableCatchError?: boolean, errorLabel?: string]) {\n    this.r(...params);\n  }\n\n  /** Abbrevation of addReaction */\n  r(...params: [stream: rx.Observable<any>, disableCatchError?: boolean, errorLabel?: string]) {\n    (this as ReactorComposite<ReactorCompositeActions, O>).i.dp.mergeStream(...params);\n  }\n\n  protected handleError(upStream: rx.Observable<any>, label?: string) {\n    return upStream.pipe(\n      rx.catchError((err, src) => {\n        (this as unknown as ReactorComposite<ReactorCompositeActions, ReactorCompositeOutput>).o.dp.onError(err, label);\n        return src;\n      })\n    );\n  }\n}\n"]}