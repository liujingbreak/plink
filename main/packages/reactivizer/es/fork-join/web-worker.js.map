{"version":3,"file":"web-worker.js","sourceRoot":"","sources":["../../src/fork-join/web-worker.ts"],"names":[],"mappings":"AAAA,0CAA0C;AAC1C,OAAO,KAAK,EAAE,MAAM,MAAM,CAAC;AAC3B,OAAO,EAA0B,iBAAiB,EAAE,eAAe,EACjE,qBAAqB,EAAgB,sBAAsB,EAAC,MAAM,YAAY,CAAC;AACjF,OAAO,EAAC,gBAAgB,EAAsB,MAAM,SAAS,CAAC;AAE9D,sDAAsD;AAEtD,MAAM,aAAa,GAAG,CAAC,MAAM,CAAU,CAAC;AACxC,MAAM,cAAc,GAAG,CAAC,cAAc,EAAE,KAAK,EAAE,MAAM,CAAU,CAAC;AAEhE,MAAM,UAAU,mBAAmB,CACjC,UAAmB,EACnB,IAA8D;;IAG9D,IAAI,MAA0B,CAAC;IAE/B,IAAI,QAAiC,CAAC,CAAC,qBAAqB;IAC5D,MAAM,IAAI,GAAG,IAAI,gBAAgB,iCAC5B,IAAI,KACP,IAAI,EAAE,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,mCAAI,EAAE,EACtB,aAAa;QACb,cAAc,EACd,KAAK,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,EAClB,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAC,CAAC,EACzF,iBAAiB,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAClC,QAAQ,EAAE,SAAS,IACnB,CAAC;IAEH,MAAM,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAC,GAAG,IAAI,CAAC;IACpC,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAE9B,CAAC,CAAC,yBAAyB,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE;QAClD,MAAM,OAAO,GAAG,CAAC,KAA6E,EAAE,EAAE;;YAChG,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC;YACvB,IAAI,GAAG,CAAC,IAAI,KAAK,kBAAkB,EAAE;gBACnC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,cAAc,EAAC,CAAC,CAAC;gBACjD,MAAM,EAAC,QAAQ,EAAC,GAAG,GAAG,CAAC;gBACvB,MAAM,SAAS,GAAG,CAAC,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,mCAAI,EAAE,CAAC,GAAG,UAAU,GAAG,QAAQ,GAAG,GAAG,CAAC;gBACnE,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACrD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aACzB;QACH,CAAC,CAAC;QACF,IAAI,UAAU,EAAE;YACd,0CAA0C;YAC1C,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACtC;aAAM;YACL,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;SAC3C;QACD,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,mDAAmD,EAAE,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CACpF,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,AAAD,EAAG,AAAD,EAAG,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,EACzC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,AAAD,EAAG,AAAD,EAAG,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE;QACpD,SAAS,OAAO,CAAC,KAAmB;YAClC,MAAM,GAAG,GAAG,KAAK,CAAC,IAAmB,CAAC;YACtC,iBAAiB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC;QACA,IAAoB,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC3D,OAAO,GAAG,EAAE,GAAG,IAAoB,CAAC,mBAAmB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC,CACJ,CAAC,CAAC;IAEH,IAAI,UAAU,EAAE;QACd,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CACnC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,EACnC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CACH,CAAC,CAAC;QAEH,CAAC,CAAC,8CAA8C,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CACpE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,AAAD,EAAG,AAAD,EAAG,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,EACzC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,AAAD,EAAG,AAAD,EAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CACrC,CAAC,CAAC,EAAE,CAAC,IAAI,EACT,CAAC,CAAC,EAAE,CAAC,WAAW,EAChB,CAAC,CAAC,EAAE,CAAC,QAAQ,CACd,CAAC,IAAI,CACJ,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACd,IAAK,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CACH,CAAC,CACH,CAAC,CAAC;QAEH,CAAC,CAAC,2CAA2C,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CACjE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,AAAD,EAAG,AAAD,EAAG,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,EACzC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,AAAD,EAAG,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI;QACjD,mEAAmE;QACnE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,IAAK,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAC7E,CAAC,CACH,CAAC,CAAC;KACJ;SAAM;QACL,CAAC,CAAC,yBAAyB,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CAC/C,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,AAAD,EAAG,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI;QAC9D,sCAAsC;QACtC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,WAAC,OAAA,CAAC,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,mCAAI,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAA,EAAA,CAAC,CAClE,CAAC,CACH,CAAC,CAAC;KACJ;IAED,CAAC,CAAC,wBAAwB,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CACxC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAU,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5F,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,AAAD,EAAG,AAAD,EAAG,QAAQ,CAAC,CAAC,EAAE,EAAE;QACtC,MAAM,EAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAC,GAAG,GAAG,CAAC;QAC9B,MAAM,IAAI,GAAG,IAAI,cAAc,EAAE,CAAC;QAClC,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC,UAAU,CAAM,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjD,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC,KAAK,CACb,IAAI,EAAE,CAAC,UAAU,CAA4B,GAAG,CAAC,EAAE;YACjD,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;QAC3C,CAAC,CAAC,CAAC,IAAI,CACL,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAC5C,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CACvC,EACD,IAAI,EAAE,CAAC,UAAU,CAAO,IAAI,CAAC,EAAE;YAC7B,IAAI,QAAQ,EAAE;gBACZ,MAAM,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC,cAAc,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3E,QAAwB,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACpF;iBAAM;gBACL,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CACH,CAAC,CAAC;IAEH,CAAC,CAAC,mEAAmE,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CACrF,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;QAChC,iBAAiB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CACxB,qBAAqB,CAAC,OAAO,CAAC,EAC9B,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACd,MAAM,EAAC,CAAC,EAAC,GAAG,MAAM,CAAC;YACnB,IAAI,qBAAqB,CAAC,CAAC,CAAC,EAAE;gBAC5B,MAAM,CAAC,EAAC,YAAY,EAAC,CAAC,GAAG,CAAC,CAAC;gBAC3B,sEAAsE;gBACrE,CAAC,CAAC,CAAC,CAAS,CAAC,YAAY,GAAG,IAAI,CAAC;gBACjC,IAAoB,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC;aAC1E;iBAAM;gBACJ,IAAoB,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;aAC5D;YACD,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CACH,CAAC,CAAC;IAEH,CAAC,CAAC,sBAAsB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CACxC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAC/C,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAU,CAAC,EAC5B,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CACX,CAAC,EACF,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,AAAD,EAAG,AAAD,EAAG,QAAQ,CAAC,CAAC,EAAE,EAAE;QAC1C,IAAI,QAAQ,EAAE;YACZ,mEAAmE;YAClE,QAAwB,CAAC,WAAW,CAAC,EAAC,KAAK,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAC,EAAC,CAAC,CAAC;SACtE;aAAM,IAAI,MAAM,EAAE;YACjB,mEAAmE;YACnE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAC,EAAE,kBAAkB,CAAC,CAAC;SACzE;IACH,CAAC,CAAC,CACH,CAAC,CAAC;IACH,OAAO,IAA0E,CAAC;AACpF,CAAC;AAED,MAAM,UAAU,IAAI,CAClB,IAA4B,EAC5B,UAAsB,EAAE,MAA0B,EAClD,aAAiB;IAEjB,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,CAAC;IAChE,MAAM,QAAQ,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,CAAC,UAAU,GAAG,UAAU,CAAC,CAAY,CAAC,CAAC,IAAI,CACxG,sBAAsB,CAAC,YAAY,CAAC,EACpC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CACzB,CAAC,CAAC;IACF,IAAI,CAAC,CAA+C,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC5E,OAAO,QAAQ,CAAC;AAClB,CAAC;AAOD,SAAS,qBAAqB,CAAC,OAAyB;;IACtD,OAAO,KAAK,CAAC,OAAO,CAAC,MAAC,OAAO,CAAC,CAAC,CAA4C,0CAAE,YAAY,CAAC,CAAC;AAC7F,CAAC","sourcesContent":["/* eslint-disable no-restricted-globals */\nimport * as rx from 'rxjs';\nimport {Action, ActionFunctions, deserializeAction, serializeAction, RxController,\n  actionRelatedToAction, InferPayload, payloadRelatedToAction} from '../control';\nimport {ReactorComposite, ReactorCompositeOpt} from '../epic';\nimport {Broker, ForkWorkerInput, ForkWorkerOutput} from './types';\n// import {createBroker} from '../node-worker-broker';\n\nconst inputTableFor = ['exit'] as const;\nconst outputTableFor = ['workerInited', 'log', 'warn'] as const;\n\nexport function createWorkerControl<I extends ActionFunctions = Record<string, never>>(\n  isInWorker: boolean,\n  opts?: ReactorCompositeOpt<ForkWorkerInput & ForkWorkerOutput>\n):\nReactorComposite<ForkWorkerInput & I, ForkWorkerOutput> {\n  let broker: Broker | undefined;\n\n  let mainPort: MessagePort | undefined; // parent thread port\n  const comp = new ReactorComposite<ForkWorkerInput, ForkWorkerOutput, typeof inputTableFor, typeof outputTableFor>({\n    ...opts,\n    name: opts?.name ?? '',\n    inputTableFor,\n    outputTableFor,\n    debug: opts?.debug,\n    log: !isInWorker ? opts?.log : (...args) => mainPort?.postMessage({type: 'log', p: args}),\n    debugExcludeTypes: ['log', 'warn'],\n    logStyle: 'noParam'\n  });\n\n  const {r, i, o, outputTable} = comp;\n  const lo = comp.outputTable.l;\n\n  r('worker$ -> workerInited', new rx.Observable(() => {\n    const handler = (event: MessageEvent<{type?: string; workerNo: number; mainPort: MessagePort}>) => {\n      const msg = event.data;\n      if (msg.type === 'ASSIGN_WORKER_NO') {\n        msg.mainPort.postMessage({type: 'WORKER_READY'});\n        const {workerNo} = msg;\n        const logPrefix = (opts?.name ?? '') + '[Worker:' + workerNo + ']';\n        o.dp.workerInited(workerNo, logPrefix, msg.mainPort);\n        comp.setName(logPrefix);\n      }\n    };\n    if (isInWorker) {\n      /* eslint-disable no-restricted-globals */\n      addEventListener('message', handler);\n    } else {\n      o.dp.workerInited('main', '[main]', null);\n    }\n    return () => self.removeEventListener('message', handler);\n  }));\n\n  r('workerInited -> main worker message port listener', outputTable.l.workerInited.pipe(\n    rx.filter(([, , , port]) => port != null),\n    rx.switchMap(([, , , port]) => new rx.Observable(() => {\n      function handler(event: MessageEvent) {\n        const act = event.data as Action<any>;\n        deserializeAction(act, i);\n      }\n      (port as MessagePort).addEventListener('message', handler);\n      return () => {(port as MessagePort).removeEventListener('message', handler); };\n    }))\n  ));\n\n  if (isInWorker) {\n    r('exit', comp.inputTable.l.exit.pipe(\n      rx.switchMap(() => lo.workerInited),\n      rx.take(1),\n      rx.map(() => {\n        comp.destory();\n      })\n    ));\n\n    r('Pass worker wait and awake message to broker', lo.workerInited.pipe(\n      rx.filter(([, , , port]) => port != null),\n      rx.take(1),\n      rx.switchMap(([, , , port]) => rx.merge(\n        o.at.wait,\n        o.at.stopWaiting,\n        o.at.returned\n      ).pipe(\n        rx.map(action => {\n          port!.postMessage(serializeAction(action));\n        })\n      ))\n    ));\n\n    r('postMessage log to broker (parent thread)', lo.workerInited.pipe(\n      rx.filter(([, , , port]) => port != null),\n      rx.take(1),\n      rx.switchMap(([, , logPrefix, port]) => lo.log.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        rx.map(([, ...p]) => port!.postMessage({type: 'log', p: [logPrefix, ...p]}))\n      ))\n    ));\n  } else {\n    r('log, warn > console.log', lo.workerInited.pipe(\n      rx.take(1),\n      rx.switchMap(([, , logPrefix]) => rx.merge(lo.log, lo.warn).pipe(\n        // eslint-disable-next-line no-console\n        rx.map(([, ...p]) => (opts?.log ?? console.log)(logPrefix, ...p))\n      ))\n    ));\n  }\n\n  r('\"fork\" -> forkByBroker', o.at.fork.pipe(\n    rx.switchMap(a => outputTable.l.workerInited.pipe(rx.map(b => [a, b] as const), rx.take(1))),\n    rx.mergeMap(([act, [, , , mainPort]]) => {\n      const {p: [wrappedAct]} = act;\n      const chan = new MessageChannel();\n      const error$ = new rx.Observable<any>(sub => {\n        chan.port1.onmessageerror = err => sub.next(err);\n        return () => chan.port1.onmessageerror = null;\n      });\n      return rx.merge(\n        new rx.Observable<MessageEvent<any>['data']>(sub => {\n          chan.port1.onmessage = msg => sub.next(msg.data);\n          return () => chan.port1.onmessage = null;\n        }).pipe(\n          rx.map(event => deserializeAction(event, i)),\n          rx.take(1),\n          rx.takeUntil(rx.merge(error$, error$))\n        ),\n        new rx.Observable<void>(_sub => {\n          if (mainPort) {\n            const forkByBroker = o.createAction('forkByBroker', wrappedAct, chan.port2);\n            (mainPort as MessagePort).postMessage(serializeAction(forkByBroker), [chan.port2]);\n          } else {\n            o.dp.forkByBroker(wrappedAct, chan.port2);\n          }\n        })\n      );\n    })\n  ));\n\n  r('On recieving \"being forked\" message, wait for fork action returns', i.pt.onFork.pipe(\n    rx.mergeMap(([, origAct, port]) => {\n      deserializeAction(origAct, i);\n      return o.core.action$.pipe(\n        actionRelatedToAction(origAct),\n        rx.take(1),\n        rx.map(action => {\n          const {p} = action;\n          if (hasReturnTransferable(p)) {\n            const [{transferList}] = p;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            (p[0] as any).transferList = null;\n            (port as MessagePort).postMessage(serializeAction(action), transferList);\n          } else {\n            (port as MessagePort).postMessage(serializeAction(action));\n          }\n          o.dp.returned();\n        })\n      );\n    })\n  ));\n\n  r('Pass error to broker', comp.error$.pipe(\n    rx.switchMap(a => outputTable.l.workerInited.pipe(\n      rx.map(b => [a, b] as const),\n      rx.take(1)\n    )),\n    rx.map(([[label, err], [, , , mainPort]]) => {\n      if (mainPort) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        (mainPort as MessagePort).postMessage({error: {label, detail: err}});\n      } else if (broker) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        broker.o.dp.onWorkerError(-1, {label, detail: err}, 'customized error');\n      }\n    })\n  ));\n  return comp as unknown as ReactorComposite<ForkWorkerInput & I, ForkWorkerOutput>;\n}\n\nexport function fork< I extends ActionFunctions, O extends ForkWorkerOutput, K extends string & keyof I, R extends keyof I = `${K}Resolved`>(\n  comp: ReactorComposite<I, O>,\n  actionType: K & string, params: InferPayload<I[K]>,\n  resActionType?: R\n): Promise<InferPayload<I[R]>[0]> {\n  const forkedAction = comp.o.createAction(actionType, ...params);\n  const forkDone = rx.firstValueFrom(comp.i.pt[(resActionType ?? (actionType + 'Resolved')) as keyof I].pipe(\n    payloadRelatedToAction(forkedAction),\n    rx.map(([, res]) => res)\n  ));\n  (comp.o as unknown as RxController<ForkWorkerOutput>).dp.fork(forkedAction);\n  return forkDone;\n}\n\nexport type WebForkTransferablePayload<T = unknown> = {\n  content: T;\n  transferList: (ArrayBuffer | MessagePort)[];\n};\n\nfunction hasReturnTransferable(payload: Action<any>['p']): payload is [WebForkTransferablePayload, ...unknown[]] {\n  return Array.isArray((payload[0] as WebForkTransferablePayload | undefined)?.transferList);\n}\n"]}