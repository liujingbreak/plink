{"version":3,"file":"forkJoin-node-worker.js","sourceRoot":"","sources":["../src/forkJoin-node-worker.ts"],"names":[],"mappings":"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","sourcesContent":["import type {promises as fsPromises} from 'node:fs';\nimport type {X509Certificate} from 'node:crypto';\nimport type {Blob} from 'node:buffer';\nimport {parentPort, MessageChannel as NodeMessagechannel, threadId, isMainThread, MessagePort} from 'worker_threads';\nimport * as rx from 'rxjs';\nimport {Action, ActionFunctions, deserializeAction, serializeAction, nameOfAction, RxController, actionRelatedToAction} from './control';\nimport {ReactorComposite, InferFuncReturnEvents} from './epic';\nimport {Broker, ForkWorkerInput, ForkWorkerOutput} from './types';\nimport {DuplexOptions} from './duplex';\n// import {createBroker} from './node-worker-broker';\n\nexport function createWorkerControl<I extends ActionFunctions | unknown = unknown>(opts?: DuplexOptions<ForkWorkerInput & ForkWorkerOutput>) {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const comp = new ReactorComposite<ForkWorkerInput, ForkWorkerOutput>({\n    ...opts,\n    debug: opts?.debug ? ('[Thread:' + (isMainThread ? 'main]' : threadId + ']')) : false,\n    log: isMainThread ? opts?.log : (...args) => parentPort?.postMessage({type: 'log', p: args}),\n    debugExcludeTypes: ['log', 'warn'],\n    logStyle: 'noParam'\n  });\n  let broker: Broker | undefined;\n\n  comp.startAll();\n  const {r, i, o} = comp;\n  const latest = i.createLatestPayloadsFor('exit');\n  const lo = o.createLatestPayloadsFor('log', 'warn');\n\n  const logPrefix = '[Thread:' + (isMainThread ? 'main]' : threadId + ']');\n  if (parentPort) {\n    const handler = (event: {type?: string; data: number}) => {\n      const msg = event;\n      if (msg.type === 'ASSIGN_WORKER_NO') {\n        parentPort!.postMessage({type: 'WORKER_READY'});\n      } else {\n        const act = event as unknown as Action<any>;\n        deserializeAction(act, i);\n      }\n    };\n    /* eslint-disable no-restricted-globals */\n    parentPort?.on('message', handler);\n\n    r('exit', latest.exit.pipe(\n      rx.map(() => {\n        i.dp.stopAll();\n        parentPort?.off('message', handler);\n      })\n    ));\n\n    r('Pass worker wait and awake message to broker', rx.merge(\n      o.at.wait,\n      o.at.stopWaiting,\n      o.at.returned\n    ).pipe(\n      rx.map(action => {\n        parentPort?.postMessage(serializeAction(action));\n      })\n    ));\n\n    r(lo.log.pipe(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      rx.map(([, ...p]) => parentPort?.postMessage({type: 'log', p: [logPrefix, ...p]}))\n    ));\n  } else {\n    r(rx.merge(lo.log, lo.warn).pipe(\n      // eslint-disable-next-line no-console\n      rx.map(([, ...p]) => (opts?.log ?? console.log)(logPrefix, ...p))\n    ));\n  }\n  r('On output \"fork\" request message', o.at.fork.pipe(\n    rx.mergeMap(act => {\n      const {p: [wrappedAct]} = act;\n      const wrappedActId = wrappedAct.i;\n      const wrappedActCompletedType = nameOfAction(wrappedAct) + 'Completed';\n      const chan = new NodeMessagechannel();\n      const error$ = rx.fromEventPattern(\n        h => chan.port1.on('messageerror', h),\n        h => chan.port1.off('messageerror', h)\n      );\n      const close$ = rx.fromEventPattern(\n        h => chan.port1.on('close', h),\n        h => chan.port1.off('close', h)\n      );\n      return rx.merge(\n        rx.fromEventPattern(\n          h => chan.port1.on('message', h),\n          h => {\n            chan.port1.off('message', h);\n            chan.port1.close();\n          }\n        ).pipe(\n          rx.map(event => deserializeAction(event, i)),\n          rx.take(1),\n          rx.takeUntil(rx.merge(\n            error$,\n            close$,\n            (i as RxController<any>).at[wrappedActCompletedType].pipe(\n              actionRelatedToAction(wrappedActId)\n            )))\n        ),\n        new rx.Observable<void>(_sub => {\n          if (parentPort) {\n            const forkByBroker = o.createAction('forkByBroker', wrappedAct, chan.port2);\n            parentPort.postMessage(serializeAction(forkByBroker), [chan.port2]);\n          } else {\n            o.dp.forkByBroker(wrappedAct, chan.port2);\n          }\n        })\n      );\n    })\n  ));\n\n  r('On recieving \"being forked\" message, wait for fork action returns', i.pt.onFork.pipe(\n    rx.mergeMap(([, origAct, port]) => {\n      const origId = origAct.i;\n      deserializeAction(origAct, i);\n      const origType = nameOfAction(origAct);\n      const typeOfResolved = origType + 'Resolved';\n      const typeOfCompleted = origType + 'Completed';\n      return rx.merge(\n        (o as RxController<any>).at[typeOfResolved].pipe(\n          actionRelatedToAction(origId),\n          rx.map(action => [action, false] as const)\n        ),\n        (o as RxController<any>).at[typeOfCompleted].pipe(\n          actionRelatedToAction(origId),\n          rx.map(action => [action, true] as const)\n        )\n      ).pipe(\n        rx.map(([action, isCompleted]) => {\n          const {p} = action;\n          if (hasReturnTransferable(p)) {\n            const [{transferList}] = p;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            (p[0] as any).transferList = null;\n            port.postMessage(serializeAction(action), transferList);\n          } else {\n            port.postMessage(serializeAction(action));\n          }\n          if (isCompleted) {\n            o.dp.returned();\n          }\n          return isCompleted;\n        }),\n        rx.takeWhile(isComplete => !isComplete)\n      );\n    })\n  ));\n\n  r('Pass error to broker', o.pt.onError.pipe(\n    rx.map(([, label, err]) => {\n      if (parentPort) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        parentPort.postMessage({error: {label, detail: err}});\n      } else if (broker) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        broker.o.dp.onWorkerError(-1, {label, detail: err});\n      }\n    })\n  ));\n  return comp as unknown as ReactorComposite<I extends unknown ? ForkWorkerInput : ForkWorkerInput & I, ForkWorkerOutput>;\n}\n\nexport function reativizeRecursiveFuncs<\n  I extends ActionFunctions,\n  O extends ActionFunctions,\n  // eslint-disable-next-line space-before-function-paren\n  F extends {[s: string]: (...a: any[]) => any}\n>(comp: ReactorComposite<I, O>, fObject: F) {\n  comp.reactivize(fObject);\n  return comp as unknown as ReactorComposite<InferFuncReturnEvents<F> & I & F, InferFuncReturnEvents<F> & O>;\n}\n\nexport type ForkTransferablePayload<T = unknown> = {\n  content: T;\n  transferList: (ArrayBuffer | MessagePort | fsPromises.FileHandle | X509Certificate | Blob)[];\n};\n\nfunction hasReturnTransferable(payload: Action<any>['p']): payload is [ForkTransferablePayload, ...unknown[]] {\n  return Array.isArray((payload[0] as ForkTransferablePayload | undefined)?.transferList);\n}\n"]}