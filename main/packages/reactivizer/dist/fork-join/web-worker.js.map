{"version":3,"file":"web-worker.js","sourceRoot":"","sources":["../../src/fork-join/web-worker.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-globals */\nimport * as rx from 'rxjs';\nimport {Action, ActionFunctions, deserializeAction, serializeAction, RxController,\n  actionRelatedToAction, InferPayload, actionRelatedToPayload} from '../control';\nimport {ReactorComposite, ReactorCompositeOpt} from '../epic';\nimport {Broker, ForkWorkerInput, ForkWorkerOutput} from './types';\n// import {createBroker} from '../node-worker-broker';\n\nconst inputTableFor = ['exit'] as const;\nconst outputTableFor = ['workerInited', 'log', 'warn'] as const;\n\nexport function createWorkerControl<I extends ActionFunctions = Record<string, never>>(\n  isInWorker: boolean,\n  opts?: ReactorCompositeOpt<ForkWorkerInput & ForkWorkerOutput>\n):\nReactorComposite<ForkWorkerInput & I, ForkWorkerOutput> {\n  let broker: Broker | undefined;\n\n  const comp = new ReactorComposite<ForkWorkerInput, ForkWorkerOutput, typeof inputTableFor, typeof outputTableFor>({\n    ...opts,\n    name: opts?.name ?? '',\n    inputTableFor,\n    outputTableFor,\n    debug: opts?.debug,\n    log: !isInWorker ? opts?.log : (...args) => self.postMessage({type: 'log', p: args}),\n    debugExcludeTypes: ['log', 'warn'],\n    logStyle: 'noParam'\n  });\n\n  const {r, i, o} = comp;\n  const lo = comp.outputTable.l;\n\n  r('worker$ -> workerInited', new rx.Observable(() => {\n    const handler = (event: MessageEvent<{type?: string; workerNo: number}>) => {\n      const msg = event.data;\n      if (msg.type === 'ASSIGN_WORKER_NO') {\n        self.postMessage({type: 'WORKER_READY'});\n        const {workerNo} = msg;\n        const logPrefix = (opts?.name ?? '') + '[Worker:' + workerNo + ']';\n        o.dp.workerInited(workerNo, logPrefix);\n        comp.setName(logPrefix);\n      } else {\n        const act = event as unknown as Action<any>;\n        deserializeAction(act, i);\n      }\n    };\n    if (isInWorker) {\n      /* eslint-disable no-restricted-globals */\n      addEventListener('message', handler);\n    } else {\n      o.dp.workerInited('main', '[main]');\n    }\n    return () => self.removeEventListener('message', handler);\n  }));\n\n  if (isInWorker) {\n    r('exit', comp.inputTable.l.exit.pipe(\n      rx.switchMap(() => lo.workerInited),\n      rx.take(1),\n      rx.map(() => {\n        comp.destory();\n      })\n    ));\n\n    r('Pass worker wait and awake message to broker', lo.workerInited.pipe(\n      rx.take(1),\n      rx.switchMap(() => rx.merge(\n        o.at.wait,\n        o.at.stopWaiting,\n        o.at.returned\n      )),\n      rx.map(action => {\n        self.postMessage(serializeAction(action));\n      })\n    ));\n\n    r('postMessage log to broker (parent thread)', lo.workerInited.pipe(\n      rx.take(1),\n      rx.switchMap(([, , logPrefix]) => lo.log.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        rx.map(([, ...p]) => postMessage({type: 'log', p: [logPrefix, ...p]}))\n      ))\n    ));\n  } else {\n    r('log, warn > console.log', lo.workerInited.pipe(\n      rx.take(1),\n      rx.switchMap(([, , logPrefix]) => rx.merge(lo.log, lo.warn).pipe(\n        // eslint-disable-next-line no-console\n        rx.map(([, ...p]) => (opts?.log ?? console.log)(logPrefix, ...p))\n      ))\n    ));\n  }\n\n  r('On output \"fork\" request message', o.at.fork.pipe(\n    rx.mergeMap(act => {\n      const {p: [wrappedAct]} = act;\n      const chan = new MessageChannel();\n      const error$ = new rx.Observable<any>(sub => {\n        chan.port1.onmessageerror = err => sub.next(err);\n        return () => chan.port1.onmessageerror = null;\n      });\n      return rx.merge(\n        new rx.Observable<MessageEvent<any>['data']>(sub => {\n          chan.port1.onmessage = msg => sub.next(msg.data);\n          return () => chan.port1.onmessage = null;\n        }).pipe(\n          rx.map(event => deserializeAction(event, i)),\n          rx.take(1),\n          rx.takeUntil(rx.merge(error$, error$))\n        ),\n        new rx.Observable<void>(_sub => {\n          if (isInWorker) {\n            const forkByBroker = o.createAction('forkByBroker', wrappedAct, chan.port2);\n            postMessage(serializeAction(forkByBroker), '*', [chan.port2]);\n          } else {\n            o.dp.forkByBroker(wrappedAct, chan.port2);\n          }\n        })\n      );\n    })\n  ));\n\n  r('On recieving \"being forked\" message, wait for fork action returns', i.pt.onFork.pipe(\n    rx.mergeMap(([, origAct, port]) => {\n      const origId = origAct.i;\n      deserializeAction(origAct, i);\n      return o.core.action$.pipe(\n        actionRelatedToAction(origId),\n        rx.take(1),\n        rx.map(action => {\n          const {p} = action;\n          if (hasReturnTransferable(p)) {\n            const [{transferList}] = p;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            (p[0] as any).transferList = null;\n            (port as MessagePort).postMessage(serializeAction(action), transferList);\n          } else {\n            (port as MessagePort).postMessage(serializeAction(action));\n          }\n          o.dp.returned();\n        })\n      );\n    })\n  ));\n\n  r('Pass error to broker', comp.error$.pipe(\n    rx.map(([label, err]) => {\n      if (isInWorker) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        self.postMessage({error: {label, detail: err}});\n      } else if (broker) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        broker.o.dp.onWorkerError(-1, {label, detail: err}, 'customized error');\n      }\n    })\n  ));\n  return comp as unknown as ReactorComposite<ForkWorkerInput & I, ForkWorkerOutput>;\n}\n\nexport function fork< I extends ActionFunctions, O extends ForkWorkerOutput, K extends string & keyof I, R extends keyof I = `${K}Resolved`>(\n  comp: ReactorComposite<I, O>,\n  actionType: K & string, params: InferPayload<I[K]>,\n  resActionType?: R\n): Promise<InferPayload<I[R]>[0]> {\n  const forkedAction = comp.o.createAction(actionType, ...params);\n  const forkDone = rx.firstValueFrom(comp.i.pt[(resActionType ?? (actionType + 'Resolved')) as keyof I].pipe(\n    actionRelatedToPayload(forkedAction.i),\n    rx.map(([, res]) => res)\n  ));\n  (comp.o as unknown as RxController<ForkWorkerOutput>).dp.fork(forkedAction);\n  return forkDone;\n}\n\nexport type WebForkTransferablePayload<T = unknown> = {\n  content: T;\n  transferList: (ArrayBuffer | MessagePort)[];\n};\n\nfunction hasReturnTransferable(payload: Action<any>['p']): payload is [WebForkTransferablePayload, ...unknown[]] {\n  return Array.isArray((payload[0] as WebForkTransferablePayload | undefined)?.transferList);\n}\n"]}