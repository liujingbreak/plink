{"version":3,"file":"node-worker.js","sourceRoot":"","sources":["../../src/fork-join/node-worker.ts"],"names":[],"mappings":"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","sourcesContent":["import type {promises as fsPromises} from 'node:fs';\nimport type {X509Certificate} from 'node:crypto';\nimport type {Blob} from 'node:buffer';\nimport {parentPort, MessageChannel, threadId, isMainThread, MessagePort} from 'worker_threads';\nimport * as rx from 'rxjs';\nimport {Action, deserializeAction, serializeAction,\n  actionRelatedToAction, nameOfAction} from '../control';\nimport {ReactorComposite, ReactorCompositeOpt} from '../epic';\nimport {Broker, ForkWorkerInput, ForkWorkerOutput, workerInputTableFor as inputTableFor,\n  workerOutputTableFor as outputTableFor, WorkerControl} from './types';\n\nexport {fork} from './common';\nexport {WorkerControl} from './types';\n// import {createBroker} from './node-worker-broker';\n\nexport function createWorkerControl<\n  I = Record<string, never>,\n  O = Record<string, never>,\n  LI extends ReadonlyArray<keyof I> = readonly [],\n  LO extends ReadonlyArray<keyof O> = readonly []\n>(\n  opts?: ReactorCompositeOpt<ForkWorkerInput & ForkWorkerOutput & I, ForkWorkerOutput & O>\n) {\n  let mainPort: MessagePort | undefined; // parent thread port\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const comp = new ReactorComposite<ForkWorkerInput, ForkWorkerOutput, typeof inputTableFor, typeof outputTableFor>({\n    ...(opts ?? {}),\n    inputTableFor: [...(opts?.inputTableFor ?? []), ...inputTableFor],\n    outputTableFor: [...(opts?.outputTableFor ?? []), ...outputTableFor],\n    name: (opts?.name ?? '') + ('(W/' + (isMainThread ? 'main)' : threadId + '?)')),\n    debug: opts?.debug,\n    log: isMainThread ? opts?.log : (...args) => mainPort?.postMessage({type: 'log', p: args}),\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    debugExcludeTypes: ['log', 'warn', 'wait', 'stopWaiting', ...(opts?.debugExcludeTypes ?? [] as any)],\n    logStyle: 'noParam'\n  });\n  let broker: Broker | undefined;\n\n  const {r, i, o, outputTable, inputTable} = comp;\n  const lo = comp.outputTable.l;\n\n  r('-> workerInited', new rx.Observable(() => {\n    const handler = (event: {type?: string; workerNo: number; mainPort: MessagePort}) => {\n      const msg = event;\n      if (msg.type === 'ASSIGN_WORKER_NO') {\n        msg.mainPort.postMessage({type: 'WORKER_READY'});\n        mainPort = msg.mainPort;\n        const workerNo = msg.workerNo;\n        const logPrefix = (opts?.name ?? '') + '(W/' + workerNo + ')';\n        o.dp.workerInited(workerNo, logPrefix, msg.mainPort);\n        comp.setName(logPrefix);\n      }\n    };\n    if (parentPort) {\n      /* eslint-disable no-restricted-globals */\n      parentPort.on('message', handler);\n    } else {\n      o.dp.workerInited('main', '[main]', null);\n    }\n    return () => parentPort?.off('message', handler);\n  }));\n\n  r('workerInited -> main worker message port listener', outputTable.l.workerInited.pipe(\n    rx.filter(([, , , port]) => port != null),\n    rx.switchMap(([, , , port]) => new rx.Observable(() => {\n      function handler(event: unknown) {\n        const act = event as Action<any>;\n        deserializeAction(act, i);\n      }\n      (port as MessagePort).on('message', handler);\n      return () => {\n        (port as MessagePort).close();\n        (port as MessagePort).off('message', handler);\n      };\n    }))\n  ));\n\n  if (parentPort) {\n    r('exit', comp.inputTable.l.exit.pipe(\n      rx.switchMap(() => lo.workerInited),\n      rx.take(1),\n      rx.map(() => {\n        comp.destory();\n      })\n    ));\n\n    r('postMessage wait, stopWaiting, returned message to broker', lo.workerInited.pipe(\n      rx.filter(([, , , port]) => port != null),\n      rx.take(1),\n      rx.switchMap(([, , , port]) => rx.merge(\n        o.at.wait,\n        o.at.stopWaiting,\n        o.at.returned\n      ).pipe(\n        rx.map(action => {\n          port!.postMessage(serializeAction(action));\n        })\n      ))\n    ));\n\n    r('postMessage log to broker (parent thread)', lo.workerInited.pipe(\n      rx.filter(([, , , port]) => port != null),\n      rx.take(1),\n      rx.switchMap(([, , logPrefix, port]) => lo.log.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        rx.map(([, ...p]) => port?.postMessage({type: 'log', p: [logPrefix, ...p]}))\n      ))\n    ));\n  } else {\n    // main thread\n    r('log, warn > console.log', lo.workerInited.pipe(\n      rx.take(1),\n      rx.switchMap(([, , logPrefix]) => rx.merge(lo.log, lo.warn).pipe(\n        // eslint-disable-next-line no-console\n        rx.map(([, ...p]) => (opts?.log ?? console.log)(logPrefix, ...p))\n      ))\n    ));\n  }\n\n  r('\"fork\" -> mainPort.postMessage, forkByBroker', o.at.fork.pipe(\n    rx.switchMap(a => outputTable.l.workerInited.pipe(rx.map(b => [a, b] as const), rx.take(1))),\n    rx.mergeMap(([act, [, , , mainPort]]) => {\n      const {p: [wrappedAct]} = act;\n      const chan = new MessageChannel();\n      const error$ = rx.fromEventPattern(\n        h => chan.port1.on('messageerror', h),\n        h => chan.port1.off('messageerror', h)\n      );\n      const close$ = rx.fromEventPattern(\n        h => chan.port1.on('close', h),\n        h => chan.port1.off('close', h)\n      );\n      return rx.merge(\n        rx.fromEventPattern(\n          h => chan.port1.on('message', h),\n          h => {\n            chan.port1.off('message', h);\n            chan.port1.close();\n          }\n        ).pipe(\n          rx.map(event => deserializeAction(event, i)),\n          rx.take(1),\n          rx.takeUntil(rx.merge(error$, close$))\n        ),\n        new rx.Observable<void>(_sub => {\n          if (mainPort) {\n            const forkByBroker = o.createAction('forkByBroker', wrappedAct, chan.port2);\n            mainPort.postMessage(serializeAction(forkByBroker), [chan.port2]);\n          } else {\n            o.dpf.forkByBroker(act, wrappedAct, chan.port2);\n          }\n        })\n      );\n    })\n  ));\n\n  r('onFork -> wait for fork action returns, postMessage to forking parent thread', i.pt.onFork.pipe(\n    rx.mergeMap(([, origAct, port]) => {\n      return rx.merge(\n        o.core.action$.pipe(\n          actionRelatedToAction(origAct),\n          rx.take(1),\n          rx.map(action => {\n            const {p} = action;\n            if (hasReturnTransferable(p)) {\n              const [{transferList}] = p;\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n              (p[0] as any).transferList = null;\n              port.postMessage(serializeAction(action), transferList);\n            } else {\n              port.postMessage(serializeAction(action));\n            }\n            o.dp.returned();\n          })\n        ),\n        new rx.Observable(() => {\n          deserializeAction(origAct, i);\n        })\n      );\n    })\n  ));\n\n  r('Pass error to broker', comp.error$.pipe(\n    rx.switchMap(a => outputTable.l.workerInited.pipe(\n      rx.map(b => [a, b] as const),\n      rx.take(1)\n    )),\n    rx.map(([[label, err], [, , , mainPort]]) => {\n      if (mainPort) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        (mainPort as MessagePort).postMessage({error: {label, detail: err}});\n      } else if (broker) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        broker.o.dp.onWorkerError(-1, {label, detail: err}, 'customized error');\n      }\n    })\n  ));\n\n  r('setLiftUpActions -> postMessage to main thread',\n    inputTable.l.setLiftUpActions.pipe(\n      rx.mergeMap(([, action$]) => action$),\n      rx.withLatestFrom(outputTable.l.workerInited),\n      rx.tap(([action, [, , , port]]) => {\n        if (port) {\n          o.dp.log(`pass action ${nameOfAction(action) as string} to main thread`);\n          port.postMessage(serializeAction(action));\n        }\n      })\n    ));\n\n  return comp as unknown as WorkerControl<I, O, LI, LO>;\n}\n\nexport type ForkTransferablePayload<T = unknown> = {\n  content: T;\n  transferList: (ArrayBuffer | MessagePort | fsPromises.FileHandle | X509Certificate | Blob)[];\n};\n\nfunction hasReturnTransferable(payload: Action<any>['p']): payload is [ForkTransferablePayload, ...unknown[]] {\n  return Array.isArray((payload[0] as ForkTransferablePayload | undefined)?.transferList);\n}\n"]}