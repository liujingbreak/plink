{"version":3,"file":"package-priority-helper.js","sourceRoot":"","sources":["../src/package-priority-helper.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nconst log = require('log4js').getLogger('plink.package-priority-helper');\n\nconst priorityStrReg = /(before|after)\\s+(\\S+)/;\n\nexport interface PackageInfo {\n  name: string;\n  priority?: string | number;\n}\n\nexport type PackageInfoWithPriority = {[key in keyof PackageInfo]-?: PackageInfo[key]};\n// eslint-disable  max-len\nexport function orderPackages(packages: PackageInfo[], run: (pk: PackageInfoWithPriority) => Promise<any> | any) {\n  const numberTypePrio: PackageInfoWithPriority[] = [];\n  const beforePackages: {[key: string]: PackageInfoWithPriority[]} = {};\n  const afterPackages: {[key: string]: PackageInfoWithPriority[]} = {};\n\n  const beforeOrAfter: Map<string, string[]> = new Map();\n  packages.forEach(pk => {\n    const priority = pk.priority;\n    if (_.isNumber(priority)) {\n      numberTypePrio.push(pk as PackageInfoWithPriority);\n    } else if (_.isString(priority)) {\n      const res = priorityStrReg.exec(priority);\n      if (!res) {\n        throw new Error('Invalid format of package.json - priority in ' +\n          pk.name + ': ' + priority);\n      }\n      const targetPackageName = res[2];\n      if (res[1] === 'before') {\n        if (!beforePackages[targetPackageName]) {\n          beforePackages[targetPackageName] = [];\n          beforeOrAfter.set(targetPackageName, [pk.name, pk.priority as string]); // track target package\n        }\n        beforePackages[targetPackageName].push(pk as PackageInfoWithPriority);\n      } else if (res[1] === 'after') {\n        if (!afterPackages[targetPackageName]) {\n          afterPackages[targetPackageName] = [];\n          beforeOrAfter.set(targetPackageName, [pk.name, pk.priority as string]); // track target package\n        }\n        afterPackages[targetPackageName].push(pk as PackageInfoWithPriority);\n      }\n    } else {\n      pk.priority = 5000;\n      numberTypePrio.push(pk as PackageInfoWithPriority);\n    }\n  });\n  numberTypePrio.sort(function(pk1, pk2) {\n    return pk2.priority as number - (pk1.priority as number);\n  });\n\n  const pkNames = packages.map(p => p.name);\n\n  const notFound = _.difference(Array.from(beforeOrAfter.keys()), pkNames)\n  .map(name => name + ` by ${beforeOrAfter.get(name)!.join('\\'s ')}`);\n\n  if (notFound.length > 0) {\n    const err = 'Priority depended packages are not found: ' +  notFound +\n      '\\nTotal packages available:\\n' + pkNames.join('\\n');\n    log.error(err);\n    return Promise.reject(new Error(err));\n  }\n\n  async function runPackagesSync(packages: PackageInfoWithPriority[]) {\n    for (const pk of packages) {\n      await runPackage(pk);\n    }\n  }\n\n  function runPackagesAsync(packages: PackageInfoWithPriority[]) {\n    return Promise.all(packages.map(runPackage));\n  }\n\n  async function runPackage(pk: PackageInfoWithPriority) {\n    await beforeHandlersFor(pk.name);\n    log.debug(pk.name, ' starts with priority: ', pk.priority);\n    const anyRes = run(pk);\n    await Promise.resolve(anyRes);\n    log.debug(pk.name, ' ends');\n    await afterHandlersFor(pk.name);\n  }\n\n  function beforeHandlersFor(name: string) {\n    return runPackagesAsync(beforePackages[name] ? beforePackages[name] : []);\n  }\n\n  function afterHandlersFor(name: string) {\n    return runPackagesAsync(afterPackages[name] ? afterPackages[name] : []);\n  }\n\n  return runPackagesSync(numberTypePrio);\n}\n"]}