{"version":3,"file":"package-utils.js","sourceRoot":"","sources":["../ts/package-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import LRU from 'lru-cache';\nimport PackageInstance from './packageNodeInstance';\nimport LazyPackageFactory from './package-mgr/lazy-package-factory';\nimport {getState} from './package-mgr';\n// import * as Path from 'path';\nimport _ from 'lodash';\n// import log4js from 'log4js';\n// import * as fs from 'fs';\nimport {lookupPackageJson, findPackagesByNames} from './cmd/utils';\nimport {plinkEnv} from './utils/misc';\nimport path from 'path';\nimport {PackageType, allPackages, packages4WorkspaceKey, packages4Workspace} from './package-mgr/package-list-helper';\nexport {PackageType, allPackages, packages4WorkspaceKey, packages4Workspace};\n\n// const log = log4js.getLogger('plink.package-utils');\n\nconst lazyPackageFactory = new LazyPackageFactory(allPackages());\n\nexport function createLazyPackageFileFinder() {\n  const cache = new LRU<string, PackageInstance>({max: 20, maxAge: 20000});\n\n  return function(file: string): PackageInstance | undefined {\n    let found = cache.get(file);\n    if (!found) {\n      found = lazyPackageFactory.getPackageByPath(file)!;\n      if (found)\n        cache.set(file, found);\n    }\n    return found;\n  };\n}\n\nexport type FindPackageCb = (fullName: string,\n  /** @Deprecated empty string */\n  packagePath: string,\n  parsedName: {name: string, scope: string},\n  json: any,\n  realPackagePath: string,\n  isInstalled: boolean) => void;\n\nexport function lookForPackages(packageList: string[] | string, cb: FindPackageCb): void {\n  for (const pkg of findPackagesByNames(getState(), Array.isArray(packageList) ? packageList : [packageList])) {\n    if (pkg == null)\n      continue;\n    cb(pkg.name, path.join(plinkEnv.workDir, pkg.path), {name: pkg.shortName, scope: pkg.scope},\n      pkg.json, pkg.realPath, pkg.isInstalled);\n  }\n}\n\n// export type PackageType = '*' | 'build' | 'core';\n\nexport function findAllPackages(callback: FindPackageCb,\n  recipeType?: 'src' | 'installed',\n  projectDir?: string | string[]): void;\nexport function findAllPackages(packageList: string[] | string,\n  callback: FindPackageCb,\n  recipeType?: 'src' | 'installed',\n  projectDir?: string | string[]): void;\nexport function findAllPackages(packageList: string[] | string | FindPackageCb,\n  callback?: FindPackageCb | 'src' | 'installed',\n  recipeType?: string | string[],\n  projectDir?: string | string[]) {\n  // oldPu.findAllPackages.apply(oldPu, arguments);\n\n  if (_.isFunction(callback) && packageList) {\n    lookForPackages(([] as string[]).concat(packageList as (string[] | string)), callback);\n    return;\n  } else if (_.isFunction(packageList)) {\n    // arguments.length <= 2\n    projectDir = recipeType;\n    recipeType = callback as 'src' | 'installed';\n    callback = packageList;\n  }\n  return findPackageByType('*', callback as FindPackageCb, recipeType as 'src' | 'installed',\n    projectDir);\n}\n\n// export {eachRecipe} from './recipe-manager';\n\nexport {lookupPackageJson as findPackageJsonPath};\n\nexport function findPackageByType(_types: PackageType | PackageType[],\n  callback: FindPackageCb, recipeType?: 'src' | 'installed', projectDir?: string[] | string) {\n\n  const arr = Array.isArray(projectDir) ? projectDir : projectDir == null ? projectDir : [projectDir];\n  for (const pkg of allPackages(_types, recipeType, arr)) {\n    callback(pkg.name, path.join(plinkEnv.workDir, pkg.path),\n      {scope: pkg.scope, name: pkg.shortName}, pkg.json, pkg.realPath, pkg.isInstalled);\n  }\n}\n\n"]}