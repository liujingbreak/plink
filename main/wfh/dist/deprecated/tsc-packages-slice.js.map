{"version":3,"file":"tsc-packages-slice.js","sourceRoot":"","sources":["../../ts/deprecated/tsc-packages-slice.ts"],"names":[],"mappings":"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","sourcesContent":["import { PayloadAction } from '@reduxjs/toolkit';\nimport { stateFactory } from '../store';\nimport fs from 'fs';\nimport Path from 'path';\nimport {map, mergeMap, distinctUntilChanged, catchError, ignoreElements, debounceTime, reduce,\n  skip\n} from 'rxjs/operators';\nimport {of, from, merge, ReplaySubject, Observable} from 'rxjs';\nimport {getStore as getPkgStore, PackageInfo} from '../package-mgr';\n\nexport interface PackageJsonTscPropertyItem {\n  rootDir: string;\n  outDir: string;\n  files?: string[];\n  /** \"references\" in tsconfig https://www.typescriptlang.org/docs/handbook/project-references.html */\n  references?: string[];\n}\n\ninterface ConfigItemWithName {\n  pkg: string;\n  items: PackageJsonTscPropertyItem[];\n}\n\nexport interface TscState {\n  /** key is package name */\n  configs: Map<string, PackageJsonTscPropertyItem[]>;\n}\n\nconst initialState: TscState = {\n  configs: new Map()\n};\n\nexport const tscSlice = stateFactory.newSlice({\n  name: 'tsc',\n  initialState,\n  reducers: {\n    // normalizePackageJsonTscProperty(d, action: PayloadAction) {},\n    putConfig(draft, {payload}: PayloadAction<{pkg: string, items: PackageJsonTscPropertyItem[]}[]>) {\n      for (const {pkg, items} of payload)\n        draft.configs.set(pkg, items);\n    }\n  }\n});\n\nexport const tscActionDispatcher = stateFactory.bindActionCreators(tscSlice);\n\nconst releaseEpic = stateFactory.addEpic((action$) => {\n  return merge(\n    getPkgStore().pipe(\n      map(s => s.srcPackages),\n      distinctUntilChanged(),\n      skip(1),\n      debounceTime(500),\n      mergeMap(pkgMap => {\n        return merge(...Array.from(pkgMap.values())\n          .map(pkg => normalizePackageJsonTscProperty$(pkg)))\n          .pipe(\n            reduce((all, configs) => {\n              all.push(configs);\n              return all;\n            }, [] as ConfigItemWithName[])\n          );\n      }),\n      map(configs => tscActionDispatcher.putConfig(configs))\n    )\n  ).pipe(\n    catchError(ex => {\n      // eslint-disable-next-line no-console\n      console.error(ex);\n      return of<PayloadAction>();\n    }),\n    ignoreElements()\n  );\n});\n\nexport function getState() {\n  return stateFactory.sliceState(tscSlice);\n}\n\nexport function getStore() {\n  return stateFactory.sliceStore(tscSlice);\n}\n\nfunction normalizePackageJsonTscProperty$(pkg: PackageInfo) {\n\n  const dr = pkg.json.dr;\n  let rawConfigs: Observable<PackageJsonTscPropertyItem>;\n\n  if (dr?.tsc) {\n    const items: PackageJsonTscPropertyItem[] = Array.isArray(dr.tsc) ? dr.tsc : [dr.tsc];\n    rawConfigs = from<PackageJsonTscPropertyItem[]>(items);\n  } else {\n    const rawConfigs2 = new ReplaySubject<PackageJsonTscPropertyItem>();\n    rawConfigs = rawConfigs2;\n    fs.exists(Path.resolve(pkg.realPath, 'isom'), exists => {\n      if (exists) {\n        const temp: PackageJsonTscPropertyItem = {rootDir: 'isom', outDir: 'isom'};\n        rawConfigs2.next(temp);\n      }\n      const temp: PackageJsonTscPropertyItem = {\n        rootDir: 'ts',\n        outDir: 'dist'\n      };\n      rawConfigs2.next(temp);\n      rawConfigs2.complete();\n    });\n  }\n  return rawConfigs.pipe(\n    reduce((all, item) => {\n      all.push(item);\n      return all;\n    }, [] as PackageJsonTscPropertyItem[]),\n    map(items => {\n      return {pkg: pkg.name, items};\n    })\n  );\n}\n\nif (module.hot) {\n  module.hot.dispose(data => {\n    stateFactory.removeSlice(tscSlice);\n    releaseEpic();\n  });\n}\n"]}