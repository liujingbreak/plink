{"version":3,"file":"cli-bump.js","sourceRoot":"","sources":["../../ts/cmd/cli-bump.ts"],"names":[],"mappings":";;;;;AACA,gDAAyE;AACzE,oDAAuC;AACvC,mCAA4C;AAC5C,oDAA4B;AAC5B,2BAA2B;AAC3B,4BAA0B;AAE1B,MAAM,GAAG,GAAG,gBAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;AAE/B,KAAK,oBAAU,OAA2C;IACvE,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QAC/B,MAAM,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;KAC5D;SAAM,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAA,2BAAa,EAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CACtE,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;YACb,MAAM,UAAU,GAAG,IAAA,sBAAQ,GAAE,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACzD,IAAI,UAAU;gBACZ,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;QACd,CAAC,EACD,EAAc,CAAC,CAAC;QAElB,MAAM,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;KACpD;IACD,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,8BAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;AAC3C,CAAC;AAjBD,4BAiBC;AAED,KAAK,UAAU,YAAY,CAAC,QAAkB,EAAE,YAAoB;IAClE,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAA,2BAAmB,EAAC,IAAA,sBAAQ,GAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QAC1F,MAAM,EAAE,GAAG,GAAG,IAAI,IAAI,CAAC;QACvB,IAAI,CAAC,EAAE,EAAE;YACP,GAAG,CAAC,KAAK,CAAC,uCAAuC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACnE;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;QACb,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAI,CAAC,IAAI,UAAU,CAAC,CAAC;QACtC,MAAM,KAAK,GAAG,GAAI,CAAC,QAAQ,CAAC;QAC5B,OAAO,IAAA,mBAAG,EAAC,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC,OAAO,CAAC;IAChH,CAAC,CAAC,CAAC,CAAC;AACN,CAAC","sourcesContent":["import {BumpOptions} from './types';\nimport {getState, pathToProjKey, actionDispatcher} from '../package-mgr';\nimport { exe } from '../process-utils';\nimport {findPackagesByNames} from './utils';\nimport log4js from 'log4js';\n// import Path from 'path';\nimport '../editor-helper';\n\nconst log = log4js.getLogger('plin.cli-bump');\n\nexport default async function(options: BumpOptions & {packages: string[]}) {\n  if (options.packages.length > 0) {\n    await bumpPackages(options.packages, options.increVersion);\n  } else if (options.project.length > 0) {\n    const pkgNames = options.project.map(proj => pathToProjKey(proj)).reduce(\n      (pkgs, proj) => {\n        const pkgsOfProj = getState().project2Packages.get(proj);\n        if (pkgsOfProj)\n          pkgs.push(...pkgsOfProj);\n        return pkgs;\n      },\n      [] as string[]);\n\n    await bumpPackages(pkgNames, options.increVersion);\n  }\n  await new Promise(resolve => setImmediate(resolve));\n  actionDispatcher.scanAndSyncPackages({});\n}\n\nasync function bumpPackages(pkgNames: string[], increVersion: string) {\n  await Promise.all(Array.from(findPackagesByNames(getState(), pkgNames)).filter((pkg, idx) => {\n    const rs = pkg != null;\n    if (!rs) {\n      log.error(`Can not find package for name like: ${pkgNames[idx]}`);\n    }\n    return rs;\n  }).map((pkg) => {\n    log.info(`bump ${pkg!.name} version`);\n    const pkDir = pkg!.realPath;\n    return exe('npm', 'version', increVersion, '--no-commit-hooks', '--no-git-tag-version', {cwd: pkDir}).promise;\n  }));\n}\n"]}