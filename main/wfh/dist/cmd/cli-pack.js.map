{"version":3,"file":"cli-pack.js","sourceRoot":"","sources":["../../ts/cmd/cli-pack.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {queueUp} from '../../../packages/thread-promise-pool/dist/promise-queque';\nimport * as _ from 'lodash';\nimport * as fs from 'fs';\nimport fsext from 'fs-extra';\nimport * as Path from 'path';\nimport {exe} from '../process-utils';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\n// import {boxString} from './utils';\n// import * as recipeManager from './recipe-manager';\nimport jsonParser, {ObjectAst, Token} from '../utils/json-sync-parser';\nimport replaceCode, {ReplacementInf} from 'require-injector/dist/patch-text';\nimport config from '../config';\nimport {PackOptions, PublishOptions} from './types';\nimport {getPackagesOfProjects, getState, workspaceKey, actionDispatcher} from '../package-mgr';\nimport {packages4WorkspaceKey} from '../package-mgr/package-list-helper';\nimport log4js from 'log4js';\nimport stripAnsi from 'strip-ansi';\nimport {findPackagesByNames} from './utils';\nimport {plinkEnv} from '../utils/misc';\nimport '../editor-helper';\nimport {dispatcher as storeSettingDispatcher} from '../store';\n\n// let tarballDir: string;\nconst log = log4js.getLogger('plink.cli-pack');\n\nfunction init(opts: PublishOptions | PackOptions) {\n  const tarballDir = opts.tarDir || Path.resolve(config().rootPath, 'tarballs');\n  fsext.mkdirpSync(tarballDir);\n  return tarballDir;\n}\n\nexport async function pack(opts: PackOptions) {\n  const tarballDir = init(opts);\n  const targetJsonFile = opts.jsonFile;\n  storeSettingDispatcher.changeActionOnExit('save');\n  if (opts.workspace && opts.workspace.length > 0) {\n    await Promise.all(opts.workspace.map(ws => packPackages(\n      Array.from(linkedPackagesOfWorkspace(ws)), tarballDir, targetJsonFile))\n    );\n  } else if (opts.project && opts.project.length > 0) {\n    return packProject(opts.project, tarballDir, targetJsonFile);\n  } else if (opts.dir && opts.dir.length > 0) {\n    await packPackages(opts.dir, tarballDir, targetJsonFile);\n  } else if (opts.packages && opts.packages.length > 0) {\n    const dirs = Array.from(findPackagesByNames(getState(), opts.packages))\n    .filter(pkg => pkg && (pkg.json.dr != null || pkg.json.plink != null))\n    .map(pkg => pkg!.realPath);\n    await packPackages(dirs, tarballDir, targetJsonFile);\n  } else {\n    await packPackages(Array.from(linkedPackagesOfWorkspace(plinkEnv.workDir)), tarballDir, targetJsonFile);\n  }\n}\n\nexport async function publish(opts: PublishOptions) {\n  init(opts);\n\n  if (opts.project && opts.project.length > 0)\n    return publishProject(opts.project, opts.public ? ['--access', 'public'] : []);\n  else if (opts.dir && opts.dir.length > 0) {\n    await publishPackages(opts.dir, opts.public ? ['--access', 'public'] : []);\n  } else if (opts.packages && opts.packages.length > 0) {\n    const dirs = Array.from(findPackagesByNames(getState(), opts.packages))\n    .filter(pkg => pkg)\n    .map(pkg => pkg!.realPath);\n    await publishPackages(dirs, opts.public ? ['--access', 'public'] : []);\n  } else {\n    await publishPackages(Array.from(linkedPackagesOfWorkspace(plinkEnv.workDir)),\n      opts.public ? ['--access', 'public'] : []);\n  }\n}\n\nfunction *linkedPackagesOfWorkspace(workspaceDir: string) {\n  const wsKey = workspaceKey(workspaceDir);\n  if (!getState().workspaces.has(wsKey)) {\n    log.error(`Workspace ${workspaceDir} is not a workspace directory`);\n    return;\n  }\n  for (const pkg of packages4WorkspaceKey(wsKey)) {\n    yield pkg.realPath;\n  }\n}\n\nasync function packPackages(packageDirs: string[], tarballDir: string, targetJsonFile?: string) {\n  const excludeFromSync = new Set<string>();\n  const package2tarball = new Map<string, string>();\n\n\n  if (packageDirs && packageDirs.length > 0) {\n    const done = rx.from(packageDirs).pipe(\n      op.mergeMap(packageDir => rx.defer(() => npmPack(packageDir, tarballDir)).pipe(\n        op.retry(2)\n      ), 4),\n      op.reduce<ReturnType<typeof npmPack> extends Promise<infer T> ? T : unknown>((all, item) => {\n        all.push(item);\n        return all;\n      }, [])\n    ).toPromise();\n\n    const tarInfos = (await done).filter(item => typeof item != null) as\n      (typeof done extends Promise<(infer T)[]> ? NonNullable<T> : unknown)[];\n\n    for (const item of tarInfos) {\n      // log.info(item);\n      package2tarball.set(item.name, Path.resolve(tarballDir, item.filename));\n      if (item.name === '@wfh/plink') {\n        excludeFromSync.add(item.dir);\n      }\n    }\n\n    await deleteOldTar(tarInfos.map(item => new RegExp('^' +\n      _.escapeRegExp(item.name.replace('@', '').replace(/[/\\\\]/g, '-'))\n        + '\\\\-\\\\d+(?:\\\\.\\\\d+){1,2}(?:\\\\-[^]+?)?\\\\.tgz$', 'i'\n      )),\n      tarInfos.map(item => item.filename),\n      tarballDir);\n    changePackageJson(package2tarball, targetJsonFile);\n    await new Promise(resolve => setImmediate(resolve));\n    actionDispatcher.scanAndSyncPackages({\n      packageJsonFiles: packageDirs.filter(dir => !excludeFromSync.has(dir))\n        .map(dir => Path.resolve(dir, 'package.json'))\n    });\n  }\n}\n\nasync function packProject(projectDirs: string[], tarballDir: string, targetJsonFile: string | undefined) {\n  const dirs = [] as string[];\n  for (const pkg of getPackagesOfProjects(projectDirs)) {\n    dirs.push(pkg.realPath);\n  }\n  await packPackages(dirs, tarballDir, targetJsonFile);\n}\n\nasync function publishPackages(packageDirs: string[], npmCliOpts: string[]) {\n  if (packageDirs && packageDirs.length > 0) {\n    const pgPaths: string[] = packageDirs;\n\n    await queueUp(4, pgPaths.map(packageDir => async () => {\n      try {\n        log.info(`publishing ${packageDir}`);\n        const params = ['publish', ...npmCliOpts, {silent: true, cwd: packageDir}];\n        const output = await exe('npm', ...params).promise;\n        log.info(output);\n      } catch (e) {\n        log.error(e);\n      }\n    }));\n  }\n}\n\nasync function publishProject(projectDirs: string[], npmCliOpts: string[]) {\n  const dirs = [] as string[];\n  for (const pkg of getPackagesOfProjects(projectDirs)) {\n    dirs.push(pkg.realPath);\n  }\n  await publishPackages(dirs, npmCliOpts);\n}\n\nasync function npmPack(packagePath: string, tarballDir: string):\n  Promise<{name: string; filename: string; version: string; dir: string} | null> {\n  try {\n    const output = await (exe('npm', 'pack', Path.resolve(packagePath),\n      {silent: true, cwd: tarballDir}).done);\n\n    const resultInfo = parseNpmPackOutput(output.errout);\n\n    const packageName = resultInfo.get('name');\n    // cb(packageName, resultInfo.get('filename')!);\n    log.info(output.errout);\n    log.info(output.stdout);\n    if (packageName == null) {\n      throw new Error('My bad, can not parse `npm pack` output: ' + output.errout + '\\n, please try again, this could happend occasionally');\n    }\n    return {\n      name: packageName,\n      filename: output.stdout.trim(),\n      version: resultInfo.get('version')!,\n      dir: packagePath\n    };\n  } catch (e) {\n    handleExption(packagePath, e);\n    return null;\n  }\n}\n\n/**\n * @param package2tarball \n */\nfunction changePackageJson(packageTarballMap: Map<string, string>, targetJsonFile?: string) {\n  const package2tarball = new Map(packageTarballMap);\n  if (targetJsonFile) {\n    changeSinglePackageJson(Path.dirname(targetJsonFile), package2tarball);\n    return;\n  }\n  for (const workspace of _.uniq([\n    ...getState().workspaces.keys(), '']).map(dir => Path.resolve(config().rootPath, dir))\n  ) {\n    const wsDir = Path.resolve(config().rootPath, workspace);\n    changeSinglePackageJson(wsDir, package2tarball);\n  }\n}\n\nfunction changeSinglePackageJson(wsDir: string, package2tarball: Map<string, string>) {\n  const jsonFile = Path.resolve(wsDir, 'package.json');\n  const pkj = fs.readFileSync(jsonFile, 'utf8');\n  const ast = jsonParser(pkj);\n  const depsAst = ast.properties.find(({name}) => JSON.parse(name.text) === 'dependencies');\n  const devDepsAst = ast.properties.find(({name}) => JSON.parse(name.text) === 'devDependencies');\n  const replacements: ReplacementInf[] = [];\n  if (depsAst) {\n    changeDependencies(package2tarball, depsAst.value as ObjectAst, wsDir, jsonFile, replacements);\n  }\n  if (devDepsAst) {\n    changeDependencies(package2tarball, devDepsAst.value as ObjectAst, wsDir, jsonFile, replacements);\n  }\n\n  if (replacements.length > 0) {\n    const replaced = replaceCode(pkj, replacements);\n    // eslint-disable-next-line no-console\n    log.info(`Updated ${jsonFile}\\n`, replaced);\n    fs.writeFileSync(jsonFile, replaced);\n  }\n}\n\nfunction changeDependencies(package2tarball: Map<string, string>, deps: ObjectAst, wsDir: string, jsonFile: string, replacements: ReplacementInf[]) {\n  // console.log(deps.properties.map(prop => prop.name.text + ':' + (prop.value as Token).text));\n  // console.log(Array.from(package2tarball.entries()));\n  const foundDeps = deps.properties.filter(({name}) => package2tarball.has(JSON.parse(name.text)));\n  for (const foundDep of foundDeps) {\n    const verToken = foundDep.value as Token;\n    const pkName = JSON.parse(foundDep.name.text) as string;\n    const tarFile = package2tarball.get(pkName);\n    let newVersion = Path.relative(wsDir, tarFile!).replace(/\\\\/g, '/');\n    if (!newVersion.startsWith('.')) {\n      newVersion = './' + newVersion;\n    }\n    log.info(`Update ${jsonFile}: ${verToken.text} => ${newVersion}`);\n    replacements.push({\n      start: verToken.pos,\n      end: verToken.end,\n      text: JSON.stringify(newVersion)\n    });\n    // package2tarball.delete(pkName);\n  }\n}\n\nfunction handleExption(packagePath: string, e: unknown) {\n  if (e && (e as Error).message && (e as Error).message.indexOf('EPUBLISHCONFLICT') > 0)\n    log.info(`npm pack ${packagePath}: EPUBLISHCONFLICT.`);\n  else\n    log.error(packagePath, e);\n}\n\n/**\n * \n * @param output \n * e.g.\nnpm notice === Tarball Details === \nnpm notice name:          require-injector                        \nnpm notice version:       5.1.5                                   \nnpm notice filename:      require-injector-5.1.5.tgz              \nnpm notice package size:  56.9 kB                                 \nnpm notice unpacked size: 229.1 kB                                \nnpm notice shasum:        c0693270c140f65a696207ab9deb18e64452a02c\nnpm notice integrity:     sha512-kRGVWcw1fvQ5J[...]ABwLPU8UvStbA==\nnpm notice total files:   47                                      \nnpm notice \n\n */\nfunction parseNpmPackOutput(output: string) {\n  const lines = stripAnsi(output).split(/\\r?\\n/);\n  const linesOffset = _.findLastIndex(lines, line => line.indexOf('Tarball Details') >= 0);\n  const tarballInfo = new Map<string, string>();\n  lines.slice(linesOffset).forEach(line => {\n    const match = /npm notice\\s+([^:]+)[:]\\s*(.+?)\\s*$/.exec(line);\n    if (!match) {\n      return null;\n    }\n    return tarballInfo.set(match[1], match[2]);\n  });\n  return tarballInfo;\n}\n\nexport const testable = {parseNpmPackOutput};\n\nfunction deleteOldTar(deleteFileReg: RegExp[], keepfiles: string[], tarballDir: string) {\n  // log.warn(deleteFileReg, keepfiles);\n  const tarSet = new Set(keepfiles);\n  const deleteDone: Promise<any>[] = [];\n\n  if (!fs.existsSync(tarballDir))\n    fsext.mkdirpSync(tarballDir);\n\n  // console.log(tarSet, deleteFileReg);\n\n  for (const file of fs.readdirSync(tarballDir)) {\n    if (!tarSet.has(file) && deleteFileReg.some(reg => reg.test(file))) {\n      log.warn('Remove ' + file);\n      deleteDone.push(fs.promises.unlink(Path.resolve(tarballDir, file)));\n    }\n  }\n  return Promise.all(deleteDone);\n}\n"]}