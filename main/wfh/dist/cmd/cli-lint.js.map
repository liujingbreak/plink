{"version":3,"file":"cli-lint.js","sourceRoot":"","sources":["../../src/cmd/cli-lint.ts"],"names":[],"mappings":"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","sourcesContent":["import 'source-map-support/register';\n\nimport Path from 'path';\n// import chalk from 'chalk';\nimport log4js from 'log4js';\nimport {LintOptions} from './types';\nimport _ from 'lodash';\nimport {getState, getPackagesOfProjects} from '../package-mgr';\nimport {completePackageName} from './utils';\nimport {Pool} from '../../../packages/thread-promise-pool/dist';\nimport os from 'os';\n\nconst log = log4js.getLogger('plink.cli-lint');\n\nconst cpus = os.cpus().length;\n\nexport default async function(packages: string[], opts: LintOptions) {\n  return lint(packages, opts.pj, opts.fix);\n}\n\n\nfunction lint(packages: string[], projects: LintOptions['pj'], fix: LintOptions['fix']) {\n  let prom: Promise<any> = Promise.resolve();\n  const errors: {pkg: string; error: string}[] = [];\n  if (packages.length > 0) {\n    const threadPool = new Pool(cpus - 1);\n    const taskProms: Promise<any>[] = [];\n    for (const name of completePackageName(getState(), packages)) {\n      if (name == null) {\n        log.warn('Can not find package for name: ' + name);\n        continue;\n      }\n      const pkg = getState().srcPackages.get(name)!;\n      taskProms.push(threadPool.submitProcess({\n        file: Path.resolve(__dirname, 'tslint-worker.js'),\n        exportFn: 'default',\n        args: [pkg.name, pkg.json, pkg.realPath, fix]\n      }).catch(err => {\n        errors.push({pkg: pkg.name, error: err.toString()});\n      }));\n    }\n    prom = Promise.all(taskProms);\n  } else if (packages.length === 0 && (projects == null || projects.length === 0)) {\n    const threadPool = new Pool(cpus - 1, 0, {\n      // verbose: true\n    });\n    const taskProms: Promise<any>[] = [];\n    for (const pkg of getState().srcPackages.values()) {\n      taskProms.push(threadPool.submitProcess({\n        file: Path.resolve(__dirname, 'tslint-worker.js'),\n        exportFn: 'default',\n        args: [pkg.name, pkg.json, pkg.realPath, fix]\n      }).catch(err => {\n        errors.push({pkg: pkg.name, error: err.toString()});\n      }));\n    }\n    prom = Promise.all(taskProms);\n  } else if (projects && projects.length > 0) {\n    const taskProms: Promise<any>[] = [];\n    const threadPool = new Pool(cpus - 1, 0, {\n      // verbose: true\n    });\n    for (const pkg of getPackagesOfProjects(projects)) {\n      taskProms.push(threadPool.submitProcess({\n        file: Path.resolve(__dirname, 'tslint-worker.js'),\n        exportFn: 'default',\n        args: [pkg.name, pkg.json, pkg.realPath, fix]\n      }).catch(err => {\n        errors.push({pkg: pkg.name, error: err.toString()});\n      }));\n    }\n    prom = Promise.all(taskProms);\n  }\n  return prom.then(() => {\n    if (errors.length > 0) {\n      errors.forEach(error => log.error('Package ' + error.pkg + ':\\n', error.error));\n      throw new Error('Lint result contains errors');\n    }\n  });\n}\n\n"]}