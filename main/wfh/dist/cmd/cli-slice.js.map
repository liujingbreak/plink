{"version":3,"file":"cli-slice.js","sourceRoot":"","sources":["../../src/cmd/cli-slice.ts"],"names":[],"mappings":"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","sourcesContent":["import { PayloadAction } from '@reduxjs/toolkit';\nimport { from, merge, of } from 'rxjs';\n// import {cliActionDispatcher, getStore, cliSlice, CliExtension} from './cli-slice';\nimport * as op from 'rxjs/operators';\nimport {createReducers} from '../../../packages/redux-toolkit-observable/dist/helper';\nimport * as pkgMgr from '../package-mgr';\nimport { stateFactory, processExitAction$ } from '../store';\nimport {OurCommandMetadata} from './types';\nexport interface CliState {\n  /** key is package name, value is Command name and args */\n  commandByPackage: Map<string, OurCommandMetadata['name'][]>;\n  commandInfoByName: Map<OurCommandMetadata['name'], OurCommandMetadata>;\n  version: string;\n  osLang?: string;\n  osCountry?: string;\n  /** key: command name, value: file path */\n  // loadedExtensionCmds: Map<string, string>;\n}\n\nexport interface CliExtension {\n  pkName: string;\n  pkgFilePath: string;\n  funcName?: string;\n}\n\nconst initialState: CliState = {\n  commandByPackage: new Map(),\n  commandInfoByName: new Map(),\n  version: ''\n  // loadedExtensionCmds: new Map()\n};\n\nconst simpleReduces = {\n  plinkUpgraded(d: CliState, newVersion: string) {\n    d.version = newVersion;\n  },\n  updateLocale(d: CliState, [lang, country]: [string, string]) {\n    d.osLang = lang;\n    d.osCountry = country;\n  },\n  addCommandMeta(d: CliState, {pkg, metas}: {pkg: string; metas: OurCommandMetadata[]}) {\n    const names = metas.map(meta => /^\\s*?(\\S+)/.exec(meta.name)![1]);\n    d.commandByPackage.set(pkg, names);\n    for (let i = 0, l = names.length; i < l; i++) {\n      d.commandInfoByName.set(names[i], metas[i]);\n    }\n  }\n};\n\nexport const cliSlice = stateFactory.newSlice({\n  name: 'cli',\n  initialState,\n  reducers: createReducers<CliState, typeof simpleReduces>(simpleReduces)\n});\n\nexport const cliActionDispatcher = stateFactory.bindActionCreators(cliSlice);\n\n\n\nexport function getState() {\n  return stateFactory.sliceState(cliSlice);\n}\n\nexport function getStore() {\n  return stateFactory.sliceStore(cliSlice);\n}\n\nconst getLocale: () => Promise<string> = require('os-locale');\nconst drcpPkJson = require('../../../package.json') as {version: string};\n\n\nstateFactory.addEpic((action$, state$) => {\n  // const actionStreams = castByActionType(cliSlice.actions, action$);\n  return merge(\n    getStore().pipe(op.map(s => s.version), op.distinctUntilChanged(),\n      op.map(version => {\n        // console.log('quick!!!!!!!!!!', getState());\n        if (version !== drcpPkJson.version) {\n          cliActionDispatcher.plinkUpgraded(drcpPkJson.version);\n        }\n      })\n    ),\n    from(getLocale()).pipe(\n      op.map(locale => {\n        const [lang, country] = locale.split(/[_-]/);\n        if (getState().osLang !== lang || getState().osCountry !== country) {\n          cliActionDispatcher.updateLocale([lang, country]);\n          pkgMgr.actionDispatcher.setInChina(country ? country.toUpperCase() === 'CN' : false);\n        }\n      })\n    ),\n    processExitAction$.pipe(\n      op.tap(() => cliActionDispatcher._change(s => {\n        s.commandByPackage.clear();\n        s.commandInfoByName.clear();\n      }))\n    )\n  ).pipe(\n    op.catchError(ex => {\n      // eslint-disable-next-line no-console\n      console.error(ex);\n      return of<PayloadAction>();\n    }),\n    op.ignoreElements()\n  );\n});\n\nexport function availabeCliExtension() {\n}\n\n"]}