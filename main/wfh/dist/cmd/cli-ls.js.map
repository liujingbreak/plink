{"version":3,"file":"cli-ls.js","sourceRoot":"","sources":["../../ts/cmd/cli-ls.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport config from '../config';\nimport {GlobalOptions} from './types';\nimport * as pkMgr from '../package-mgr';\n// import {getRootDir} from '../utils/misc';\nimport {packages4WorkspaceKey} from '../package-mgr/package-list-helper';\nimport chalk from 'chalk';\nimport Path from 'path';\nimport * as _ from 'lodash';\nimport {printWorkspaces, printWorkspaceHoistedDeps} from './cli-init';\nimport {take, map, distinctUntilChanged, skip} from 'rxjs/operators';\nimport {createCliTable, plinkEnv} from '../utils/misc';\nimport * as priorityHelper from '../package-priority-helper';\nimport {isServerPackage, readPriorityProperty} from '../package-runner';\nimport {dispatcher as storeSettingDispatcher} from '../store';\n\nexport default async function list(opt: GlobalOptions & {json: boolean; hoist: boolean}) {\n  if (opt.hoist) {\n    for (const wsState of pkMgr.getState().workspaces.values()) {\n      printWorkspaceHoistedDeps(wsState);\n    }\n  }\n  if (opt.json)\n    console.log(JSON.stringify(jsonOfLinkedPackageForProjects(), null, '  '));\n  else\n    console.log(listPackagesByProjects((require('../package-mgr') as typeof pkMgr).getState()));\n\n  const table = createCliTable({horizontalLines: false});\n  table.push(\n    [{colSpan: 3, hAlign: 'center', content: chalk.bold('SERVER PACKAGES')}],\n    ['PACKAGE', 'PRIORITY', 'DIRECTORY'].map(item => chalk.gray(item)),\n    ['------', '-------', '--------'].map(item => chalk.gray(item))\n  );\n\n  const list: ServerPackageView[] = await listServerPackages();\n  list.forEach(row => table.push([\n    row.name,\n    row.priority,\n    chalk.cyan(Path.relative(config().rootPath, row.dir))\n  ]));\n  console.log(table.toString());\n  printWorkspaces();\n}\n\nexport function checkDir(opt: GlobalOptions) {\n  storeSettingDispatcher.changeActionOnExit('save');\n  pkMgr.getStore().pipe(\n    map(s => s.packagesUpdateChecksum), distinctUntilChanged(),\n    skip(1), take(1),\n    map((curr) => {\n      console.log('Directory state is updated.');\n      return curr;\n    })\n  ).subscribe();\n  pkMgr.actionDispatcher.updateDir();\n}\n\nexport function listPackagesByProjects(state: pkMgr.PackagesState) {\n  const cwd = process.cwd();\n  const linkedPkgs = state.srcPackages;\n\n  const table = createCliTable({horizontalLines: false, colAligns: ['right', 'left', 'left']});\n  table.push([{colSpan: 3, content: chalk.bold('LINKED PACKAGES IN PROJECT\\n'), hAlign: 'center'}]);\n  for (const [prj, pkgNames] of state.project2Packages.entries()) {\n    table.push([{\n      colSpan: 3, hAlign: 'left',\n      content: chalk.bold('Project: ') + (prj ? chalk.cyan(prj) : chalk.cyan('(root directory)'))}\n    ],\n      ['PACKAGE NAME', 'VERSION', 'PATH'].map(item => chalk.gray(item)),\n      ['------------', '-------', '----'].map(item => chalk.gray(item))\n    );\n    const pkgs = pkgNames.map(name => linkedPkgs.get(name)!);\n    for (const pk of pkgs) {\n      table.push([\n        chalk.cyan(pk.name),\n        chalk.green(pk.json.version),\n        Path.relative(cwd, pk.realPath)]);\n    }\n  }\n  for (const [prj, pkgNames] of state.srcDir2Packages.entries()) {\n    table.push([{\n      colSpan: 3, hAlign: 'left',\n      content: chalk.bold('Source directory: ') + (prj ? chalk.cyan(prj) : chalk.cyan('(root directory)'))}\n    ],\n      ['PACKAGE NAME', 'VERSION', 'PATH'].map(item => chalk.gray(item)),\n      ['------------', '-------', '----'].map(item => chalk.gray(item))\n    );\n    const pkgs = pkgNames.map(name => linkedPkgs.get(name)!);\n    for (const pk of pkgs) {\n      table.push([\n        chalk.cyan(pk.name),\n        chalk.green(pk.json.version),\n        Path.relative(cwd, pk.realPath)]);\n    }\n  }\n  return table.toString();\n}\n\nfunction jsonOfLinkedPackageForProjects() {\n  const all: {[prj: string]: {[key: string]: string}} = {};\n  const linkedPkgs = pkMgr.getState().srcPackages;\n  for (const [prj, pkgNames] of pkMgr.getState().project2Packages.entries()) {\n    const dep: {[key: string]: string} = all[prj] = {};\n    for (const pkName of pkgNames) {\n      const pkg = linkedPkgs.get(pkName);\n      if (pkg)\n        dep[pkName] = pkg.json.version;\n    }\n  }\n  return all;\n}\n\ninterface ServerPackageView {\n  name: string;\n  priority: string;\n  dir: string;\n}\n\nasync function listServerPackages(): Promise<ServerPackageView[]> {\n  let wsKey: string | null | undefined = pkMgr.workspaceKey(plinkEnv.workDir);\n  wsKey = pkMgr.getState().workspaces.has(wsKey) ? wsKey : pkMgr.getState().currWorkspace;\n  if (wsKey == null) {\n    return [] as ServerPackageView[];\n  }\n\n  const pkgs = Array.from(packages4WorkspaceKey(wsKey, true))\n  .filter(isServerPackage)\n  .map(pkg => ({\n    name: pkg.name,\n    priority: readPriorityProperty(pkg.json)\n  }));\n\n  const list: Array<[string, string | number]> = [];\n\n  await priorityHelper.orderPackages(pkgs, pk => {\n    list.push([pk.name, pk.priority]);\n  });\n  const workspace = pkMgr.getState().workspaces.get(wsKey)!;\n  return list.map(([name, pri]) => {\n    const pkg = pkMgr.getState().srcPackages.get(name) || workspace.installedComponents!.get(name)!;\n    return {\n      name,\n      priority: pri + '',\n      dir: pkg.realPath\n    };\n  });\n}\n"]}