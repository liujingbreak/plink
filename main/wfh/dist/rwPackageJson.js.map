{"version":3,"file":"rwPackageJson.js","sourceRoot":"","sources":["../ts/rwPackageJson.ts"],"names":[],"mappings":";;;;AAAA,qDAA+B;AAC/B,mDAA6B;AAC7B,mCAAiC;AAEjC,8CAAmC;AAEnC,oDAAoB;AACpB,MAAM,GAAG,GAAG,IAAA,kBAAS,EAAC,qBAAqB,CAAC,CAAC;AAC7C,MAAM,OAAO,GAAG,YAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEpD,SAAgB,oBAAoB,CAAC,OAAe;IAClD,OAAO,UAAS,GAAiD;QAC/D,OAAO,GAAG,CAAC,IAAI,CACb,IAAA,eAAG,EAAC,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,EAAE;YACvB,IAAI,OAAe,CAAC;YACpB,IAAI,IAA0B,CAAC;YAC/B,IAAI;gBACF,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACnC,IAAI;oBACF,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBACV,sEAAsE;oBACtE,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;qBACxB;;wBACC,MAAM,CAAC,CAAC;iBACX;gBAED,IAAI,IAAI,EAAE;oBACR,IAAI,IAAI,CAAC,MAAM,EAAE;wBACf,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,EAAE;wBAC5D,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;wBACvB,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;qBAClC;yBAAM,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;wBAC7B,GAAG,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;wBACzE,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;wBACvB,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;qBAClC;iBACF;qBAAM;oBACL,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;iBAClC;aACF;YAAC,OAAO,GAAG,EAAE;gBACZ,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAChB;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AApCD,oDAoCC;AAED,SAAS,WAAW,CAAC,OAAe,EAAE,QAAgB;IACpD,IAAI;QACF,OAAO,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC;KAC9C;IAAC,OAAO,EAAE,EAAE;QACX,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAED,SAAS,aAAa,CAAC,GAAW,EAAE,IAAS;IAC3C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IAClC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC3F,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE,CAAC","sourcesContent":["import * as fs from 'fs-extra';\nimport * as Path from 'path';\nimport {getLogger} from 'log4js';\nimport * as _ from 'lodash';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport os from 'os';\nconst log = getLogger('plink.rwPackageJson');\nconst isWin32 = os.platform().indexOf('win32') >= 0;\n\nexport function symbolicLinkPackages(destDir: string) {\n  return function(src: Observable<{name: string; realPath: string}>) {\n    return src.pipe(\n      map(({name, realPath}) => {\n        let newPath: string;\n        let stat: fs.Stats | undefined;\n        try {\n          newPath = Path.join(destDir, name);\n          try {\n            stat = fs.lstatSync(newPath);\n          } catch (e) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (e.code === 'ENOENT') {\n            } else\n              throw e;\n          }\n\n          if (stat) {\n            if (stat.isFile() ||\n              (stat.isSymbolicLink() && !isSymlinkTo(newPath, realPath))) {\n              fs.unlinkSync(newPath);\n              _symbolicLink(realPath, newPath);\n            } else if (stat.isDirectory()) {\n              log.info('Remove installed \"%s\"', Path.relative(process.cwd(), newPath));\n              fs.removeSync(newPath);\n              _symbolicLink(realPath, newPath);\n            }\n          } else {\n            _symbolicLink(realPath, newPath);\n          }\n        } catch (err) {\n          log.error(err);\n        }\n      })\n    );\n  };\n}\n\nfunction isSymlinkTo(newPath: string, realPath: string) {\n  try {\n    return fs.realpathSync(newPath) === realPath;\n  } catch (ex) {\n    return false;\n  }\n}\n\nfunction _symbolicLink(dir: string, link: any) {\n  fs.mkdirpSync(Path.dirname(link));\n  fs.symlinkSync(Path.relative(Path.dirname(link), dir), link, isWin32 ? 'junction' : 'dir');\n  log.info('Create symlink \"%s\"', Path.relative(process.cwd(), link));\n}\n\n"]}