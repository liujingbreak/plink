{"version":3,"file":"fork-for-preserve-symlink.js","sourceRoot":"","sources":["../ts/fork-for-preserve-symlink.ts"],"names":[],"mappings":"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","sourcesContent":["import Path from 'path';\nimport {fork, ForkOptions} from 'child_process';\nimport fs from 'fs';\nimport os from 'os';\nimport log4js from 'log4js';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport {plinkEnv} from './utils/misc';\nimport * as _editorHelper from './editor-helper';\nimport * as bootstrapProc from './utils/bootstrap-process';\nimport * as wrapper from './fork-module-wrapper';\nimport * as store from './store';\n\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      __plinkLogMainPid: string | undefined;\n      // __plink_fork_main?: string;\n    }\n  }\n}\n\nexport const isWin32 = os.platform().indexOf('win32') >= 0;\nconst log = log4js.getLogger('plink.fork-for-preserver-symlink');\n\nexport function workDirChangedByCli() {\n  const argv = process.argv.slice(2);\n  const foundCmdOptIdx =  argv.findIndex(arg => arg === '--cwd' || arg === '--space');\n  const workdir = foundCmdOptIdx >= 0 ? Path.resolve(plinkEnv.rootDir,  argv[foundCmdOptIdx + 1]) : null;\n  if (workdir) {\n    argv.splice(foundCmdOptIdx, 2);\n    // process.env.PLINK_WORK_DIR = workdir;\n  }\n  return {workdir, argv};\n}\n\n/**\n * @returns promise<number> if a child process is forked to apply \"--preserve-symlinks\", or `undefined` no new child process is created\n */\nexport default function run(\n  moduleName: string,\n  opts?: {\n    stateExitAction?: 'save' | 'send' | 'none';\n    handleShutdownMsg?: boolean;\n  }) {\n\n  if ((process.env.NODE_PRESERVE_SYMLINKS !== '1' && process.execArgv.indexOf('--preserve-symlinks') < 0)) {\n    return forkFile(moduleName, opts || {}).exited;\n  }\n  // In case it is already under \"preserve-symlinks\" mode\n  const {workdir} = workDirChangedByCli();\n  const {runModule} = require('./fork-module-wrapper') as typeof wrapper;\n  const file = resolveTargetModule(moduleName, workdir || process.env.PLINK_WORK_DIR || process.cwd());\n  runModule(file, opts?.stateExitAction);\n}\n\n/** run in main process, mayby in PM2 as a cluster process,\n* Unlike `run(modulename, opts)` this function will always fork a child process, it is conditionally executed inside `run(modulename, opts)`\n*/\nexport function forkFile(\n  moduleName: string,\n  opts?: {\n    stateExitAction?: 'save' | 'send' | 'none';\n    handleShutdownMsg?: boolean;\n  } & ForkOptions) {\n  let recovered = false;\n  const {initProcess, exitHooks} = require('./utils/bootstrap-process') as typeof bootstrapProc;\n  const {stateFactory} = require('./store') as typeof store;\n\n  exitHooks.push(() => removed.then((removeResolved) => {\n    if (recovered)\n      return;\n    recovered = true;\n\n    for (const {link, content} of removeResolved) {\n      if (!fs.existsSync(link)) {\n        void fs.promises.symlink(content, link, isWin32 ? 'junction' : 'dir');\n        log.info('recover ' + link);\n      }\n    }\n  }));\n\n  process.env.__plinkLogMainPid = '-1';\n  initProcess('none');\n\n  // removeNodeModuleSymlink needs Editor-helper, and editor-helper needs store being configured!\n  stateFactory.configureStore();\n  const removed = removeNodeModuleSymlink();\n\n  const {workdir, argv} = workDirChangedByCli();\n\n  // process.execArgv.push('--preserve-symlinks-main', '--preserve-symlinks');\n  const foundDebugOptIdx = argv.findIndex(arg => arg === '--inspect' || arg === '--inspect-brk');\n\n  const env: NodeJS.ProcessEnv = process.env;\n  if (foundDebugOptIdx >= 0) {\n    env.NODE_OPTIONS = env.NODE_OPTIONS ? env.NODE_OPTIONS + ' ' + argv[foundDebugOptIdx] : argv[foundDebugOptIdx];\n    argv.splice(foundDebugOptIdx, 1);\n  }\n  const debugOptIdx = argv.findIndex(arg => arg === '--debug');\n  if (debugOptIdx >= 0) {\n    env.NODE_OPTIONS = env.NODE_OPTIONS ? env.NODE_OPTIONS + ' --inspect-brk' : '--inspect-brk';\n    argv.splice(debugOptIdx, 1);\n  }\n\n  // env.__plink_fork_main = moduleName;\n\n  if (workdir)\n    env.PLINK_WORK_DIR = workdir;\n\n  const file = resolveTargetModule(moduleName, workdir || process.env.PLINK_WORK_DIR || process.cwd());\n  const cp = fork(Path.resolve(plinkEnv.rootDir, 'node_modules/@wfh/plink/wfh/dist/fork-module-wrapper.js'), argv, {\n    execArgv: process.execArgv.concat(['--preserve-symlinks-main', '--preserve-symlinks']),\n    stdio: 'inherit',\n    ...(opts ? opts : {})\n  });\n  cp.send(JSON.stringify({type: 'plink-fork-wrapper', opts, moduleFile: file}));\n\n  if (opts?.handleShutdownMsg) {\n    const processMsg$ = rx.fromEventPattern<string>(h => process.on('message', h), h => process.off('message', h));\n\n    processMsg$.pipe(\n      op.filter(msg => msg === 'shutdown'),\n      op.take(1),\n      op.tap(() => {\n        cp.send('shutdown');\n      })\n    ).subscribe();\n  }\n\n  const onChildExit$ = new rx.ReplaySubject<number>();\n  cp.once('exit', code => {\n    // if (code !== 0) {\n    // console.log('child process exits:', code);\n    // }\n    onChildExit$.next(code || 0);\n    onChildExit$.complete();\n  });\n  exitHooks.push(() => onChildExit$);\n\n  return {\n    childProcess: cp,\n    exited: onChildExit$.toPromise()\n  };\n}\n\n/**\n * Temporarily rename <pkg>/node_modules to another name\n * @returns\n */\nasync function removeNodeModuleSymlink() {\n  const {getState} = require('./editor-helper') as typeof _editorHelper;\n  const links = getState().nodeModuleSymlinks;\n  if (links == null)\n    return Promise.resolve([]);\n\n  const dones = Array.from(links.values()).map(async link => {\n    let stat: fs.Stats | undefined;\n    try {\n      stat = await fs.promises.lstat(link);\n      if (!stat.isSymbolicLink())\n        return null;\n    } catch (ex) {\n      return null;\n    }\n\n    const content = fs.readlinkSync(link);\n    await fs.promises.unlink(link);\n    return {link, content};\n  });\n  const res = await Promise.all(dones);\n  return res.filter(item => item != null) as {link: string; content: string}[];\n}\n\n/**\n *\n * @param tModule module name like \"@foo/bar/dist/index.js\", \"@foo/bar/dist/index\"\n * @param workDir \n * @returns complete resolved path like \"/Users/superhero/project/server-space/node_modules/@foo/bar/dist/index.js\"\n */\nfunction resolveTargetModule(tModule: string, workDir: string) {\n  if (!Path.extname(tModule)) {\n    tModule += '.js';\n  }\n  const root = Path.parse(workDir).root;\n  let dir = workDir;\n  let target: string;\n  for (;;) {\n    target = Path.resolve(dir, 'node_modules', tModule);\n    if (fs.existsSync(target))\n      break;\n    else {\n      if (dir === root) {\n        throw new Error('Can not require module ' + tModule + ' from directory ' + workDir);\n      }\n      dir = Path.dirname(dir);\n    }\n  }\n  return target;\n}\n\n"]}