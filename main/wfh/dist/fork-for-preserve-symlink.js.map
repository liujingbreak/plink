{"version":3,"file":"fork-for-preserve-symlink.js","sourceRoot":"","sources":["../ts/fork-for-preserve-symlink.ts"],"names":[],"mappings":"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","sourcesContent":["import Path from 'path';\nimport {fork, ChildProcess} from 'child_process';\nimport {threadId} from 'worker_threads';\nimport fs from 'fs';\nimport os from 'os';\nimport log4js from 'log4js';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport chalk from 'chalk';\nimport {plinkEnv} from './utils/misc';\nimport * as _editorHelper from './editor-helper';\nimport * as bootstrapProc from './utils/bootstrap-process';\nimport * as store from './store';\n\nexport const isWin32 = os.platform().indexOf('win32') >= 0;\nconst log = log4js.getLogger('plink.fork-for-preserver-symlink');\n\nexport function workDirChangedByCli() {\n  let argv = process.argv.slice(2);\n  const foundCmdOptIdx =  argv.findIndex(arg => arg === '--cwd' || arg === '--space');\n  const workdir = foundCmdOptIdx >= 0 ? Path.resolve(plinkEnv.rootDir,  argv[foundCmdOptIdx + 1]) : null;\n  if (workdir) {\n    argv.splice(foundCmdOptIdx, 2);\n    // process.env.PLINK_WORK_DIR = workdir;\n  }\n  return {workdir, argv};\n}\n\nexport default function run(moduleName: string, opts: {\n    stateExitAction?: 'save' | 'send' | 'none';\n    handleShutdownMsg?: boolean;\n  },\n  bootStrap: () => ((Array<() => rx.ObservableInput<unknown>>) | void)) {\n\n  if ((process.env.NODE_PRESERVE_SYMLINKS !== '1' && process.execArgv.indexOf('--preserve-symlinks') < 0)) {\n    void forkFile(moduleName, opts.handleShutdownMsg != null ? opts.handleShutdownMsg : false);\n    return;\n  }\n\n  const {initProcess, exitHooks} = require('./utils/bootstrap-process') as typeof bootstrapProc;\n\n  initProcess(opts.stateExitAction || 'none', (code) => {\n    // eslint-disable-next-line no-console\n    console.log(`Plink process ${process.pid} thread ${threadId} ` +\n      chalk.green(`${code !== 0 ? 'ends with failures' : 'ends'}`));\n  }, opts.handleShutdownMsg);\n\n  // Must be invoked after initProcess, otherwise store is not ready (empty)\n  const funcs = bootStrap();\n  if (Array.isArray(funcs))\n    exitHooks.push(...funcs);\n}\n\n/** run in main process */\nasync function forkFile(moduleName: string, handleShutdownMsg: boolean) {\n  let recovered = false;\n  const {initProcess, exitHooks} = require('./utils/bootstrap-process') as typeof bootstrapProc;\n  const {stateFactory} = require('./store') as typeof store;\n  let cp: ChildProcess | undefined;\n\n  initProcess('none', () => {\n    recoverNodeModuleSymlink();\n  });\n\n  // removeNodeModuleSymlink needs Editor-helper, and editor-helper needs store being configured!\n  stateFactory.configureStore();\n  const removed = await removeNodeModuleSymlink();\n\n  const {workdir, argv} = workDirChangedByCli();\n\n  process.execArgv.push('--preserve-symlinks-main', '--preserve-symlinks');\n  const foundDebugOptIdx = argv.findIndex(arg => arg === '--inspect' || arg === '--inspect-brk');\n\n  const env: {[key: string]: string | undefined} = {...process.env};\n  if (foundDebugOptIdx >= 0) {\n    env.NODE_OPTIONS = env.NODE_OPTIONS ? env.NODE_OPTIONS + ' ' + argv[foundDebugOptIdx] : argv[foundDebugOptIdx];\n    argv.splice(foundDebugOptIdx, 1);\n  }\n  const debugOptIdx = argv.findIndex(arg => arg === '--debug');\n  if (debugOptIdx >= 0) {\n    env.NODE_OPTIONS = env.NODE_OPTIONS ? env.NODE_OPTIONS + ' --inspect-brk' : '--inspect-brk';\n    argv.splice(debugOptIdx, 1);\n  }\n\n  env.__plink_fork_main = moduleName;\n\n  if (workdir)\n    env.PLINK_WORK_DIR = workdir;\n\n  cp = fork(Path.resolve(__dirname, 'fork-preserve-symlink-main.js'), argv, {\n    env,\n    stdio: 'inherit'\n  });\n\n  if (handleShutdownMsg) {\n    const processMsg$ = rx.fromEventPattern<string>(h => process.on('message', h), h => process.off('message', h));\n    // const processExit$ = rx.fromEventPattern( h => process.on('SIGINT', h), h => process.off('SIGINT', h));\n\n    rx.merge(processMsg$.pipe(\n      op.filter(msg => msg === 'shutdown')\n    )).pipe(\n      op.take(1),\n      op.tap(() => {\n        cp!.send('shutdown');\n      })\n    ).subscribe();\n  }\n\n  const onChildExit$ = new rx.ReplaySubject<number>();\n  cp.once('exit', code => {\n    // if (code !== 0) {\n      // console.log('child process exits:', code);\n    // }\n    onChildExit$.next(code || 0);\n    onChildExit$.complete();\n  });\n  exitHooks.push(() => onChildExit$);\n\n  function recoverNodeModuleSymlink() {\n    if (recovered)\n      return;\n    recovered = true;\n\n    for (const {link, content} of removed) {\n      if (!fs.existsSync(link)) {\n        void fs.promises.symlink(content, link, isWin32 ? 'junction' : 'dir');\n        log.info('recover ' + link);\n      }\n    }\n  }\n}\n\n/**\n * Temporarily rename <pkg>/node_modules to another name\n * @returns\n */\nasync function removeNodeModuleSymlink() {\n  const {getState} = require('./editor-helper') as typeof _editorHelper;\n  const links = getState().nodeModuleSymlinks;\n  if (links == null)\n    return Promise.resolve([]);\n\n  const dones = Array.from(links.values()).map(async link => {\n    let stat: fs.Stats | undefined;\n    try {\n      stat = await fs.promises.lstat(link);\n    if (!stat.isSymbolicLink())\n      return null;\n    } catch (ex) {\n      return null;\n    }\n\n    const content = fs.readlinkSync(link);\n    await fs.promises.unlink(link);\n    return {link, content};\n  });\n  const res = await Promise.all(dones);\n  return res.filter(item => item != null) as {link: string; content: string}[];\n}\n\n"]}