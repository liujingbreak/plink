{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/config/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable prefer-const, max-len */\nimport fs from 'fs';\nimport Path from 'path';\nimport _ from 'lodash';\nimport chalk from 'chalk';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport log4js from 'log4js';\n// Refactor: circular reference\nimport yamljs from 'yamljs';\nimport * as _pkgList from '../package-mgr/package-list-helper';\nimport * as _pkgMgr from '../package-mgr';\nimport {plinkEnv} from '../utils/misc';\n// const yamljs = require('yamljs');\nimport {GlobalOptions as CliOptions} from '../cmd/types';\nimport {ConfigHandlerMgr, DrcpConfig, ConfigHandler} from '../config-handler';\nimport {PackageSettingInterf} from './config.types';\nimport {dispatcher, getState, PlinkSettings, getStore} from './config-slice';\nrequire('yamlify/register');\n\nconst log = log4js.getLogger('plink.config');\nconst {rootDir} = plinkEnv;\n\nlet rootPath = rootDir;\n\nexport const configHandlerMgr$ = new rx.BehaviorSubject<ConfigHandlerMgr | undefined>(undefined);\n\n/**\n * read and return configuration\n * @name config\n * @return {object} setting\n */\nconst config = (): PlinkSettings => {\n  return getState();\n};\n\nconfig.initSync = (argv: CliOptions) => {\n  dispatcher.saveCliOption(argv);\n  // For child process, worker thread to access cli options\n  process.env.PLINK_CLI_OPTS = JSON.stringify(argv);\n  load(getState().cliOptions!);\n  return getState();\n};\n\n\nconfig.reload = function reload() {\n  const argv = getState().cliOptions!;\n  load(argv);\n  return getState();\n};\n\nconfig.set = function(path: string, value: any) {\n  dispatcher._change(setting => {\n    _.set(setting, path, value);\n  });\n  return getState();\n};\n\nconfig.get = function(propPath: string, defaultValue: any) {\n  return _.get(getState(), propPath, defaultValue);\n};\n\n\n/**\n * Resolve a path based on `rootPath`\n * @name resolve\n * @memberof config\n * @param  {string} property name or property path, like \"name\", \"name.childProp[1]\"\n * @return {string}     absolute path\n */\nconfig.resolve = function(pathPropName: 'rootPath' | 'destDir' | 'staticDir' | 'serverDir', ...paths: string[]) {\n  const args: string[] = [rootPath, getState()[pathPropName], ...paths];\n  return Path.resolve(...args);\n};\n\nconfig.configHandlerMgr = configHandlerMgr$;\n\nconfig.configHandlerMgrChanged = function(cb: (handler: ConfigHandlerMgr) => void) {\n  configHandlerMgr$.pipe(\n    op.distinctUntilChanged(),\n    op.filter(handler => handler != null),\n    op.tap(handler => cb(handler!))\n  ).subscribe();\n};\n\nconfig.change = function(reducer: (setting: PlinkSettings) => void ) {\n  return dispatcher._change(reducer);\n};\n\nconfig.getStore = getStore;\n\nfunction load(cliOption: CliOptions) {\n  const pkgSettingFiles = loadPackageSettings();\n  const configFileList = cliOption.config || [];\n  configFileList.forEach(localConfigPath => mergeFromYamlJsonFile(localConfigPath));\n  const handlers = new ConfigHandlerMgr(\n    configFileList.filter(name => /\\.[tj]s$/.test(name))\n      .map<[file: string, expName: string]>(item => [Path.resolve(item), 'default'])\n      .concat(pkgSettingFiles)\n  );\n  configHandlerMgr$.next(handlers);\n  dispatcher._change(draft => {\n    handlers.runEachSync<ConfigHandler>((_file, obj, handler) => {\n      if (handler.onConfig) {\n        return handler.onConfig(draft , draft.cliOptions!);\n      }\n    });\n  });\n  validateConfig();\n\n  dispatcher._change(s => {\n    s.port = normalizePort(s.port);\n  });\n  mergeFromCliArgs(getState().cliOptions!);\n}\n\nfunction mergeFromYamlJsonFile(localConfigPath: string) {\n  if (!fs.existsSync(localConfigPath)) {\n    // eslint-disable-next-line no-console\n    log.info(chalk.yellow(' File does not exist: %s', localConfigPath));\n    return;\n  }\n  // eslint-disable-next-line no-console\n  log.info(` Read ${localConfigPath}`);\n  var configObj: {[key: string]: any};\n\n  const matched = /\\.([^.]+)$/.exec(localConfigPath);\n\n  let suffix = matched ? matched[1] : null;\n  if (suffix === 'yaml' || suffix === 'yml') {\n    configObj = yamljs.parse(fs.readFileSync(localConfigPath, 'utf8'));\n  } else if (suffix === 'json') {\n    configObj = require(Path.resolve(localConfigPath));\n  } else {\n    return;\n  }\n\n  dispatcher._change(setting => {\n    _.assignWith(setting, configObj, (objValue, srcValue, key, object, source) => {\n      if (_.isObject(objValue) && !Array.isArray(objValue)) {\n        // We only merge 1st and 2nd level properties\n        return _.assign(objValue, srcValue);\n      }\n    });\n  });\n}\n\nfunction mergeFromCliArgs(cliOpt: CliOptions) {\n  if (!cliOpt.prop)\n    return;\n  for (let propPair of cliOpt.prop) {\n    const propSet = propPair.split('=');\n    let propPath = propSet[0];\n    if (_.startsWith(propSet[0], '['))\n      propPath = JSON.parse(propSet[0]);\n    let value: any;\n    try {\n      value = JSON.parse(propSet[1]);\n    } catch (e) {\n      value = propSet[1] === 'undefined' ? undefined : propSet[1];\n    }\n    dispatcher._change(s => _.set(s, propPath, value));\n    // eslint-disable-next-line no-console\n    log.info(`[config] set ${propPath} = ${value as string}`);\n  }\n}\n\n\nfunction validateConfig() {\n  // TODO: json schema validation\n}\n\n// function trimTailSlash(url: string) {\n//   if (url === '/') {\n//     return url;\n//   }\n//   return _.endsWith(url, '/') ? url.substring(0, url.length - 1) : url;\n// }\n\nfunction normalizePort(val: string | number) {\n  let port: number = typeof val === 'string' ? parseInt(val, 10) : val;\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return 8080;\n}\n\ntype PackageInfo = ReturnType<(typeof _pkgList)['packages4Workspace']> extends Generator<infer T> ? T : unknown;\n\n/**\n * @returns [defaultValueFile, exportName, dtsFile]\n */\nexport function* getPackageSettingFiles(workspaceKey: string, includePkg?: Set<string>): Generator<[\n  /** relative path within package realpath, without ext file name */\n  typeFileWithoutExt: string,\n  typeExportName: string,\n  /** relative path of js file, which exports default value or factory function of default value */\n  jsFile: string,\n  defaultExportName: string,\n  pkg: PackageInfo\n]> {\n  const {packages4WorkspaceKey} = require('../package-mgr/package-list-helper') as typeof _pkgList;\n  for (const pkg of packages4WorkspaceKey(workspaceKey, true)) {\n    if (includePkg && !includePkg.has(pkg.name))\n      continue;\n\n    try {\n      const dr = pkg.json.dr || pkg.json.plink!;\n      if (dr == null || typeof dr.setting !== 'object') {\n        continue;\n      }\n      const setting = dr.setting;\n      log.debug('getPackageSettingFiles', pkg.name, setting);\n      let [valueFile, valueExport] = setting.value.split('#', 2);\n\n      // Check value file\n      const ext = Path.extname(valueFile);\n      if (ext === '') {\n        valueFile = valueFile + '.js';\n      }\n      if (valueExport == null)\n        valueExport = 'default';\n\n      const absFile = Path.resolve(pkg.realPath, valueFile);\n      if (!fs.existsSync(absFile)) {\n        log.warn(`Package ${pkg.name}'s configure file \"${absFile}\" does not exist, skipped.`);\n        continue;\n      }\n      // Check dts type file\n      let [typeFile, typeExportName] = setting.type.split('#', 2);\n      let typeFileExt = Path.extname(typeFile);\n      if (typeFileExt === '') {\n        typeFile += '.dts';\n      }\n\n      const absTypeFile = Path.resolve(pkg.realPath, typeFileExt);\n      if (!fs.existsSync(absTypeFile)) {\n        log.warn(`Package setting ${pkg.name}'s dts file \"${absTypeFile}\" does not exist, skipped.`);\n        continue;\n      }\n      if (typeExportName == null) {\n        log.error(`Incorrect package config property format \"${setting.type}\" in ${pkg.realPath + Path.sep}package.json` +\n          ', correct format is \"<dts-file-relative-path>#<TS-type-export-name>\"');\n        continue;\n      }\n      yield [typeFile.replace(/\\.[^./\\\\]+$/g, ''), typeExportName, valueFile, valueExport, pkg];\n    } catch (err) {\n      log.warn(`Skip loading setting of package ${pkg.name}, due to (this might be caused by incorrect package.json format)`, err);\n    }\n  }\n}\n/**\n * @returns absulte path of setting JS files which contains exports named with \"default\"\n */\nfunction loadPackageSettings(): [file: string, exportName: string][] {\n  const {workspaceKey, isCwdWorkspace} = require('../package-mgr') as typeof _pkgMgr;\n  if (!isCwdWorkspace()) {\n    log.debug('Not in a workspace, skip loading package settings');\n    return [];\n  }\n  const jsFiles: [file: string, exportName: string][] = [];\n\n  for (const [_typeFile, _typeExport, jsFile, defaultSettingExport, pkg] of getPackageSettingFiles(workspaceKey(plinkEnv.workDir))) {\n    try {\n      const absFile = Path.resolve(plinkEnv.workDir, pkg.path, jsFile);\n      const exps = require(absFile);\n      const defaultSettingFactory: PackageSettingInterf<any> = exps[defaultSettingExport];\n\n      if (typeof defaultSettingFactory === 'function') {\n        const value = defaultSettingFactory(getState().cliOptions!);\n        dispatcher._change(s => s[pkg.name] = value);\n      } else {\n        log.warn(`Failed to load package setting from ${pkg.name}/${jsFile}.\\n Export name \"${defaultSettingExport}\" is not found`);\n      }\n      if (defaultSettingFactory != null) {\n        jsFiles.push([absFile, defaultSettingExport]);\n      }\n    } catch (err) {\n      log.error(`Failed to load package setting from ${pkg.name}/${jsFile}.'${defaultSettingExport}`, err);\n    }\n  }\n  return jsFiles;\n}\nexport default (config as DrcpConfig);\n"]}