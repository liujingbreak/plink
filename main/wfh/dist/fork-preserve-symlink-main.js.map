{"version":3,"file":"fork-preserve-symlink-main.js","sourceRoot":"","sources":["../ts/fork-preserve-symlink-main.ts"],"names":[],"mappings":";;;;;AAAA;;;GAGG;AACH,gDAAwB;AAExB,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;AAClF,MAAM,IAAI,GAAG,cAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AAClC,IAAI,MAAc,CAAC;AACnB,OAAO,IAAI,EAAE;IACX,MAAM,GAAG,cAAI,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAkB,CAAC,CAAC;IAC3E,IAAI;QACF,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM;KACP;IAAC,OAAO,EAAE,EAAE;QACX,IAAI,GAAG,KAAK,IAAI,EAAE;YAChB,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAClB,MAAM;SACP;QACD,GAAG,GAAG,cAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACzB;CACF;AACD,OAAO,CAAC,MAAM,CAAC,CAAC","sourcesContent":["/**\n * Node option prever-symlink does not effect on \"main\" file, so this file acts as main file to call real file from\n * a symlink location\n */\nimport Path from 'path';\n\nlet dir = process.env.PLINK_WORK_DIR ? process.env.PLINK_WORK_DIR : process.cwd();\nconst root = Path.parse(dir).root;\nlet target: string;\nwhile (true) {\n  target = Path.resolve(dir, 'node_modules', process.env.__plink_fork_main!);\n  try {\n    require.resolve(target);\n    break;\n  } catch (ex) {\n    if (dir === root) {\n      console.error(ex);\n      break;\n    }\n    dir = Path.dirname(dir);\n  }\n}\nrequire(target);\n"]}