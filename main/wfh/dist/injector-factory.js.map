{"version":3,"file":"injector-factory.js","sourceRoot":"","sources":["../src/injector-factory.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as Path from 'path';\nimport RJ from 'require-injector';\nimport {FactoryMapCollection, FactoryMapInterf} from 'require-injector/dist/factory-map';\nimport * as _ from 'lodash';\nimport log4js from 'log4js';\nimport _config from './config';\nimport {PlinkSettings} from './config/config-slice';\nimport {getRootDir, getWorkDir} from './utils/misc';\nconst log = log4js.getLogger('plink.injector-factory');\n\nconst packageNamePathMap = new Map<string, {symlink?: string; realPath: string}>();\n\nconst emptyFactoryMap = {\n  factory: emptryChainableFunction,\n  substitute: emptryChainableFunction,\n  value: emptryChainableFunction,\n  alias: emptryChainableFunction\n};\n\nexport class DrPackageInjector extends RJ {\n  constructor(protected noNode = false) {\n    super({\n      basedir: getRootDir(),\n      // debug: config.devMode,\n      noNode\n    });\n  }\n\n  addPackage(name: string, dir: string, symlinkDir?: string) {\n    log.debug('add %s %s', name, dir);\n    packageNamePathMap.set(name, {symlink: symlinkDir, realPath: dir});\n  }\n\n  fromPlinkPackage(name: string | string[], dir?: string | string[]) {\n    const names = ([] as string[]).concat(name);\n    if (dir) {\n      const dirs = ([] as string[]).concat(dir);\n      let i = 0;\n      if (names.length !== dirs.length)\n        throw new Error('fromComponent(name, dir)\\'s be called with 2 Array of same length');\n      for (const nm of names ) {\n        this.addPackage(nm, dirs[i++]);\n      }\n    }\n    const factoryMaps: FactoryMapInterf[] = [];\n    for (const nm of names) {\n      const paths = packageNamePathMap.get(nm);\n      if (paths) {\n        factoryMaps.push(super.fromDir(paths.realPath));\n        if (paths.symlink) {\n          factoryMaps.push(super.fromDir(paths.symlink));\n        }\n      } else {\n        factoryMaps.push(super.fromPackage(nm));\n      }\n    }\n    return new FactoryMapCollection(factoryMaps);\n  }\n\n  fromAllComponents() {\n    const realpaths = Array.from(packageNamePathMap.values())\n      .map(item => item.realPath);\n    const symlinks = Array.from(packageNamePathMap.values())\n      .map(item => item.symlink).filter(dir => dir != null);\n    return super.fromDir(realpaths.concat(symlinks as string[]));\n  }\n\n  fromAllPackages() {\n    return this.fromAllComponents();\n  }\n\n  notFromPackages(...excludePackages: string[]) {\n    const names = _.difference([...packageNamePathMap.keys()], excludePackages);\n    const dirs = names.map(pkName => packageNamePathMap.get(pkName)!.realPath);\n    const symdirs = names.map(pkName => packageNamePathMap.get(pkName)!.symlink!);\n    log.debug('from ' + dirs);\n    return super.fromDir(dirs.concat(symdirs));\n  }\n\n  readInjectFile(fileNameWithoutExt?: string) {\n\n    if (!fileNameWithoutExt)\n      fileNameWithoutExt = 'module-resolve.server';\n    _.uniq([\n      Path.resolve(getRootDir(), fileNameWithoutExt),\n      Path.resolve(getWorkDir(), fileNameWithoutExt)\n    ]).forEach(file => {\n      const file1 = fs.existsSync(file + '.ts') ? file + '.ts' : file + '.js';\n      if (fs.existsSync(file1)) {\n        log.debug('execute internal ' + file1);\n        let exported = require(file1);\n        if (exported.default)\n          exported = exported.default;\n        exported(this);\n      } else {\n        log.debug(file1 + ' doesn\\'t exist, skip it.');\n      }\n    });\n\n    return doInjectorConfigSync(this, !this.noNode);\n  }\n}\n\nexport const nodeInjector = new DrPackageInjector(false);\n\nexport const webInjector = new DrPackageInjector(true);\n\nexport interface InjectorConfigHandler {\n  /** For Client framework build tool (React, Angular), replace module in \"require()\" or import syntax */\n  setupWebInjector?(factory: DrPackageInjector, allSetting: PlinkSettings): void;\n  /** For Node.js runtime, replace module in \"require()\" or import syntax */\n  setupNodeInjector?(factory: DrPackageInjector, allSetting: PlinkSettings): void;\n}\n\nexport function doInjectorConfigSync(factory: DrPackageInjector, isNode = false) {\n  const config: typeof _config = require('./config').default;\n  config.configHandlerMgrChanged(handler => {\n    handler.runEachSync<InjectorConfigHandler>((_file: string, _lastResult: any, handler) => {\n      if (isNode && handler.setupNodeInjector)\n        handler.setupNodeInjector(factory, config());\n      else if (!isNode && handler.setupWebInjector)\n        handler.setupWebInjector(factory, config());\n    }, 'Injector configuration for ' + (isNode ? 'Node.js runtime' : 'client side build tool'));\n  });\n}\n\nfunction emptryChainableFunction() {\n  return emptyFactoryMap;\n}\n\n/** @deprecated */\nexport function doInjectorConfig(factory: DrPackageInjector, isNode = false) {\n  const config: typeof _config = require('./config').default;\n  config.configHandlerMgrChanged(handler => {\n    void handler.runEach<InjectorConfigHandler>((_file: string, _lastResult: any, handler) => {\n      if (isNode && handler.setupNodeInjector)\n        handler.setupNodeInjector(factory, config());\n      else if (!isNode && handler.setupWebInjector)\n        handler.setupWebInjector(factory, config());\n    }, 'Injector configuration for ' + (isNode ? 'Node.js runtime' : 'client side build tool'));\n  });\n}\n"]}