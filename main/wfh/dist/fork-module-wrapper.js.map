{"version":3,"file":"fork-module-wrapper.js","sourceRoot":"","sources":["../ts/fork-module-wrapper.ts"],"names":[],"mappings":";;;AAAA,iEAAsD;AAEtD,IAAI,OAAO,CAAC,IAAI;IACd,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAI9B,SAAS,IAAI,CAAC,GAAW;;IACvB,IAAI,OAAO,GAAG,KAAK,QAAQ;QACzB,OAAO;IAET,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAY,CAAC;IAC1C,IAAI,MAAM,CAAC,IAAI,KAAK,oBAAoB,EAAE;QACxC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC7B,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,MAAA,MAAM,CAAC,IAAI,0CAAE,eAAe,CAAC,CAAC;KAC5D;AACH,CAAC;AAED,SAAgB,SAAS,CAAC,UAAkB,EAAE,eAA0C;IACtF,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC;IACjD,IAAA,+BAAW,EAAC,eAAe,IAAI,MAAM,CAAC,CAAC;IACvC,OAAO,CAAC,UAAU,CAAC,CAAC;AACtB,CAAC;AAJD,8BAIC","sourcesContent":["import {initProcess} from './utils/bootstrap-process';\n\nif (process.send)\n  process.on('message', init);\n\ntype ProcMsg = {type?: string, opts?: {stateExitAction?: 'save' | 'send' | 'none'}, moduleFile: string};\n\nfunction init(msg: string) {\n  if (typeof msg !== 'string')\n    return;\n\n  const msgObj = JSON.parse(msg) as ProcMsg;\n  if (msgObj.type === 'plink-fork-wrapper') {\n    process.off('message', init);\n    runModule(msgObj.moduleFile, msgObj.opts?.stateExitAction);\n  }\n}\n\nexport function runModule(moduleFile: string, stateExitAction?: 'save' | 'send' | 'none') {\n  process.env.__plinkLogMainPid = process.pid + '';\n  initProcess(stateExitAction || 'none');\n  require(moduleFile);\n}\n\n"]}