{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAAiC;AAGjC,wCAAiD;AAAzC,gHAAA,OAAO,OAAU;AACzB,uEAAqD;AACrD,mEAA2E;AAAnE,qIAAA,OAAO,OAAoB;AACnC,uDAAuG;AAAxE,qHAAA,iBAAiB,OAAA;AAAE,gHAAA,YAAY,OAAA;AAAE,+GAAA,WAAW,OAAA;AAC3E,8CAA4B;AAC5B,+DAAoE;AAA5D,kHAAA,YAAY,OAAA;AACpB,uCAA+C;AAAvC,uHAAA,OAAO,OAAa;AAC5B,qCAAmE;AAA3D,4GAAA,mBAAmB,OAAA;AAAE,0GAAA,iBAAiB,OAAA;AAC9C,iCAA4C;AAApC,wGAAA,iBAAiB,OAAA;AACzB,0CAAwB;AACxB,6EAA6E;AAC7E,4DAA0C;AAC1C,yEAAqH;AAA7G,mJAAA,OAAO,OAAyB;AAAE,uIAAA,QAAQ,OAA8B;AAChF,0BAA0B;AAC1B,mDAAiG;AAAzF,6HAAA,2BAA2B,OAAA;AAAE,yHAAA,uBAAuB,OAAA;AAAE,2GAAA,SAAS,OAAA;AACvE,qCAAwE;AAAhE,kGAAA,UAAU,OAAA;AAAE,4GAAA,oBAAoB,OAAA;AAAE,gGAAA,QAAQ,OAAA;AAElD,yEAA8E;AAAtE,kIAAA,2BAA2B,OAAA;AACnC,iDAAiC;AACjC,2CAAkD;AAA1C,wHAAA,OAAO,OAAa;AAC5B,mCAAkC;AAA1B,kGAAA,QAAQ,OAAA;AAChB,8DAA8D;AAC9D,+EAA0E;AAAlE,8HAAA,oBAAoB,OAAA","sourcesContent":["export * from './config-handler';\nexport {PlinkSettings, PlinkSettings as DrcpSettings} from './config/config-slice';\nexport {PackageSettingInterf} from './config/config.types';\nexport {default as config} from './config/index';\nexport * from '../../packages/require-injector/dist';\nexport {default as ExtensionContext} from './package-mgr/node-package-api';\nexport {InjectorConfigHandler, DrPackageInjector, nodeInjector, webInjector} from './injector-factory';\nexport * from './cmd/types';\nexport {PlinkCommand, CliExtension} from './cmd/override-commander';\nexport {default as commander} from 'commander';\nexport {findPackagesByNames, lookupPackageJson} from './cmd/utils';\nexport {cliPackageArgDesc} from './cmd/cli';\nexport * from './store';\n/** Plink's child process management: start/stop, log message handling ... */\nexport * from './utils/bootstrap-process';\nexport {default as forkAsPreserveSymlink, forkFile as forceForkAsPreserveSymlink} from './fork-for-preserve-symlink';\n/** Express HTTP server */\nexport {initInjectorForNodePackages, prepareLazyNodeInjector, runServer} from './package-runner';\nexport {getRootDir, getSymlinkForPackage, plinkEnv} from './utils/misc';\nexport {PackagesState, PackageInfo} from './package-mgr';\nexport {setTsCompilerOptForNodePath} from './package-mgr/package-list-helper';\nexport * as logger from 'log4js';\nexport {default as logConfig} from './log-config';\nexport {log4File} from './logger';\n/** Given a file path, find out which package it belongs to */\nexport {packageOfFileFactory} from './package-mgr/package-info-gathering';\n"]}