{"version":3,"file":"tsc-util.js","sourceRoot":"","sources":["../../ts/utils/tsc-util.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport Path from 'path';\n// import inspector from 'inspector';\nimport _ts from 'typescript';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport chokidar from 'chokidar';\nimport {createActionStreamByType} from '../../../packages/redux-toolkit-observable/dist/rx-utils';\n// import {createActionStream} from '../../../packages/redux-toolkit-observable/rx-utils';\nimport {parseConfigFileToJson} from '../ts-cmd-util';\nimport {plinkEnv} from './misc';\n// require('inspector').open(9229, '0.0.0.0', true);\n\ntype TscOptions = {\n  jsx?: boolean;\n  inlineSourceMap?: boolean;\n  emitDeclarationOnly?: boolean;\n  changeCompilerOptions?: (co: Record<string, any>) => void;\n  traceResolution?: boolean;\n  tsBuildInfoFile?: string;\n};\n\nfunction plinkNodeJsCompilerOptionJson(ts: typeof _ts, opts: TscOptions = {}) {\n  const {\n    jsx = false,\n    inlineSourceMap = false,\n    emitDeclarationOnly = false\n  } = opts;\n  let baseCompilerOptions: any;\n  if (jsx) {\n    const baseTsconfigFile2 = require.resolve('../../tsconfig-tsx.json');\n    // log.info('Use tsconfig file:', baseTsconfigFile2);\n    const tsxTsconfig = parseConfigFileToJson(ts, baseTsconfigFile2);\n    baseCompilerOptions = tsxTsconfig.compilerOptions;\n    // baseCompilerOptions = {...baseCompilerOptions, ...tsxTsconfig.config.compilerOptions};\n  } else {\n    const baseTsconfigFile = require.resolve('../../tsconfig-base.json');\n    const baseTsconfig = parseConfigFileToJson(ts, baseTsconfigFile);\n    // log.info('Use tsconfig file:', baseTsconfigFile);\n    baseCompilerOptions = baseTsconfig.compilerOptions;\n  }\n\n  const coRootDir = Path.parse(process.cwd()).root;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const compilerOptions = {\n    ...baseCompilerOptions,\n    target: 'ES2017',\n    importHelpers: true,\n    declaration: true,\n    tsBuildInfoFile: opts.tsBuildInfoFile,\n    // diagnostics: true,\n    // module: 'ESNext',\n    /**\n     * for gulp-sourcemaps usage:\n     *  If you set the outDir option to the same value as the directory in gulp.dest, you should set the sourceRoot to ./.\n     */\n    outDir: coRootDir, // must be same as rootDir\n    rootDir: coRootDir,\n    skipLibCheck: true,\n    inlineSourceMap,\n    sourceMap: !inlineSourceMap,\n    inlineSources: true,\n    emitDeclarationOnly,\n    traceResolution: opts.traceResolution,\n    preserveSymlinks: false\n  } as Record<keyof _ts.CompilerOptions, any>;\n  if (opts.changeCompilerOptions) opts.changeCompilerOptions(compilerOptions);\n\n  return compilerOptions;\n}\n\nfunction plinkNodeJsCompilerOption(\n  ts: typeof _ts,\n  opts: TscOptions & {basePath?: string} = {}\n) {\n  const json = plinkNodeJsCompilerOptionJson(ts, opts);\n  const basePath = (opts.basePath || process.cwd()).replace(/\\\\/g, '/');\n  const {options} = ts.parseJsonConfigFileContent(\n    {compilerOptions: json},\n    ts.sys,\n    basePath,\n    undefined,\n    Path.resolve(basePath, 'tsconfig-in-memory.json')\n  );\n  return options;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nexport function transpileSingleFile(content: string, ts: any = _ts) {\n  const {outputText, diagnostics, sourceMapText} = (\n    ts as typeof _ts\n  ).transpileModule(content, {\n    compilerOptions: {\n      ...plinkNodeJsCompilerOption(ts),\n      isolatedModules: true,\n      inlineSourceMap: false\n    }\n  });\n\n  return {\n    outputText,\n    sourceMapText,\n    diagnostics,\n    diagnosticsText: diagnostics\n  };\n}\n\nexport function createTranspileFileWithTsCheck(\n  ts: any = _ts,\n  opts?: NonNullable<Parameters<typeof languageServices>[1]>\n) {\n  const {action$, ofType, dispatcher} = languageServices(ts, opts);\n\n  return function(content: string, file: string) {\n    let destFile: string | undefined;\n    let sourceMap: string | undefined;\n    rx.merge(\n      action$.pipe(\n        ofType('emitFile'),\n        op.map(({payload: [outputFile, outputContent]}) => {\n          if (/\\.[mc]?js/.test(outputFile)) {\n            destFile = outputContent;\n          } else if (outputFile.endsWith('.map')) {\n            sourceMap = outputContent;\n          }\n        }),\n        op.takeWhile(() => destFile == null || sourceMap == null)\n      ),\n      action$.pipe(\n        ofType('onEmitFailure', 'onSuggest'),\n        op.map(({payload: [file, diagnostics]}) => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          console.error('[tsc-util]', diagnostics);\n        })\n      )\n    ).subscribe();\n    dispatcher.addSourceFile(file, true, content);\n\n    return {\n      code: destFile!,\n      map: sourceMap!\n    };\n  };\n}\n\nexport enum LogLevel {\n  trace,\n  log,\n  error\n}\n\ntype LangServiceActionCreator = {\n  watch(dirs: string[]): void;\n  addSourceFile(file: string, sync: boolean, content?: string): void;\n  changeSourceFile(file: string, content: string | undefined | null): void;\n  onCompilerOptions(co: _ts.CompilerOptions): void;\n  onEmitFailure(\n    file: string,\n    diagnostics: string,\n    type: 'compilerOptions' | 'syntactic' | 'semantic'\n  ): void;\n  onSuggest(file: string, msg: string): void;\n  emitFile(file: string, content: string): void;\n  log(level: LogLevel, msg: string): void;\n  /** stop watch */\n  stop(): void;\n};\n\ntype LangServiceState = {\n  versions: Map<string, number>;\n  /** root files */\n  files: Set<string>;\n  unemitted: Set<string>;\n  isStopped: boolean;\n  fileContentCache: Map<string, string>;\n};\n\nexport function languageServices( ts: any = _ts, opts: {\n  formatDiagnosticFileName?(path: string): string;\n  transformSourceFile?(path: string, content: string): string;\n  watcher?: chokidar.WatchOptions;\n  tscOpts?: NonNullable<Parameters<typeof plinkNodeJsCompilerOption>[1]>;\n} = {}\n) {\n  const ts0 = ts as typeof _ts;\n  const {dispatcher, dispatchFactory, action$, actionOfType, ofType} =\n    createActionStreamByType<LangServiceActionCreator>();\n  const store = new rx.BehaviorSubject<LangServiceState>({\n    versions: new Map(),\n    files: new Set(),\n    unemitted: new Set(),\n    isStopped: false,\n    fileContentCache: new Map()\n  });\n\n  function setState(cb: (curr: LangServiceState) => LangServiceState) {\n    store.next(cb(store.getValue()));\n  }\n\n  const formatHost: _ts.FormatDiagnosticsHost = {\n    getCanonicalFileName: opts.formatDiagnosticFileName || (path => path),\n    getCurrentDirectory: _ts.sys.getCurrentDirectory,\n    getNewLine: () => _ts.sys.newLine\n  };\n\n  const co = plinkNodeJsCompilerOption(ts0, opts.tscOpts);\n\n  const serviceHost: _ts.LanguageServiceHost = {\n    ...ts0.sys, // Important, default language service host does not implement methods like fileExists\n    getScriptFileNames() {\n      return Array.from(store.getValue().files.values());\n    },\n    getScriptVersion(fileName: string) {\n      return store.getValue().versions.get(fileName.replace(/\\\\/g, '/')) + '' || '-1';\n    },\n    getCompilationSettings() {\n      dispatcher.onCompilerOptions(co);\n      return co;\n    },\n    getScriptSnapshot(fileName: string) {\n      // console.log('getScriptSnapshot()', fileName);\n      if (!fs.existsSync(fileName)) {\n        return undefined;\n      }\n\n      const cached = store.getValue().fileContentCache.get(fileName.replace(/\\\\/g, '/'));\n      const originContent = cached != null ? cached : fs.readFileSync(fileName, 'utf8');\n      return ts0.ScriptSnapshot.fromString(\n        opts.transformSourceFile\n          ? opts.transformSourceFile(fileName, originContent)\n          : originContent\n      );\n    },\n    getCancellationToken() {\n      return {\n        isCancellationRequested() {\n          return store.getValue().isStopped;\n        }\n      };\n    },\n    useCaseSensitiveFileNames() {\n      return ts0.sys.useCaseSensitiveFileNames;\n    },\n    getDefaultLibFileName: options => ts0.getDefaultLibFilePath(options),\n\n    trace(s) {\n      dispatcher.log(LogLevel.log, s);\n      // console.log('[lang-service trace]', s);\n    },\n    error(s) {\n      dispatcher.log(LogLevel.error, s);\n      // eslint-disable-next-line no-console\n      console.log('[lang-service error]', s);\n    },\n    log(s) {\n      dispatcher.log(LogLevel.log, s);\n      // eslint-disable-next-line no-console\n      console.log('[lang-service log]', s);\n    }\n  };\n  const documentRegistry = ts0.createDocumentRegistry();\n  let services: _ts.LanguageService | undefined;\n  const stop$ = action$.pipe(ofType('stop'));\n\n  let watcher: ReturnType<typeof chokidar.watch>;\n\n  rx.merge(\n    actionOfType('watch').pipe(\n      op.exhaustMap(\n        ({payload: dirs}) =>\n          new rx.Observable<never>(() => {\n            if (watcher == null)\n              watcher = chokidar.watch(\n                dirs.map(dir => dir.replace(/\\\\/g, '/')),\n                opts.watcher\n              );\n\n            watcher.on('add', path =>\n              dispatcher.addSourceFile(path, false)\n            );\n            watcher.on('change', path => {\n              void fs.promises.readFile(path, 'utf8')\n                .then(content => {\n                  dispatcher.changeSourceFile(path, content);\n                });\n            });\n            return () => {\n              void watcher.close().then(() => {\n                // eslint-disable-next-line no-console\n                console.log('[tsc-util] chokidar watcher stops');\n              });\n            };\n          })\n      )\n    ),\n    actionOfType('addSourceFile').pipe(\n      op.filter(({payload: [file]}) => !file.endsWith('.d.ts') && /\\.(?:[mc]?tsx?|json)$/.test(file)),\n      op.map(({payload: [fileName, sync, content]}) => {\n        setState(s => {\n          s.files.add(fileName);\n          s.versions.set(fileName.replace(/\\\\/g, '/'), 0);\n          if (content != null)\n            s.fileContentCache.set(fileName.replace(/\\\\/g, '/'), content);\n          return s;\n        });\n        if (sync) getEmitFile(fileName);\n        else {\n          setState(s => {\n            s.unemitted.add(fileName);\n            return s;\n          });\n          return fileName;\n        }\n      }),\n      op.filter((file): file is string => file != null),\n      op.debounceTime(333),\n      op.map(() => {\n        for (const file of store.getValue().unemitted.values()) {\n          getEmitFile(file);\n        }\n        setState(s => {\n          s.unemitted.clear();\n          return s;\n        });\n      })\n    ),\n    actionOfType('changeSourceFile').pipe(\n      op.filter(({payload: [file]}) => !file.endsWith('.d.ts') && /\\.(?:tsx?|json)$/.test(file)),\n      // TODO: debounce on same file changes\n      op.map(({payload: [fileName, content]}) => {\n        setState(s => {\n          const normFile = fileName.replace(/\\\\/g, '/');\n          const version = s.versions.get(normFile);\n          s.versions.set(normFile, (version != null ? version : 0) + 1);\n          if (content != null) {\n            s.fileContentCache.set(normFile, content);\n          }\n          return s;\n        });\n        getEmitFile(fileName);\n      })\n    )\n  )\n    .pipe(\n      op.takeUntil(stop$),\n      op.catchError((err, src) => {\n        console.error('Language service error', err);\n        return src;\n      }),\n      op.finalize(() => {\n        setState(s => {\n          s.isStopped = true;\n          return s;\n        });\n      })\n    )\n    .subscribe();\n\n  function getEmitFile(fileName: string) {\n    if (services == null) {\n      services = ts0.createLanguageService(serviceHost, documentRegistry);\n      const coDiag = services.getCompilerOptionsDiagnostics();\n      if (coDiag.length > 0)\n        dispatcher.onEmitFailure(\n          fileName,\n          ts0.formatDiagnosticsWithColorAndContext(coDiag, formatHost),\n          'compilerOptions'\n        );\n    }\n    const output = services.getEmitOutput(fileName);\n    if (output.emitSkipped) {\n      // console.log(`Emitting ${fileName} failed`);\n    }\n\n    const syntDiag = services.getSyntacticDiagnostics(fileName);\n    if (syntDiag.length > 0) {\n      dispatcher.onEmitFailure(\n        fileName,\n        ts0.formatDiagnosticsWithColorAndContext(syntDiag, formatHost),\n        'syntactic'\n      );\n    }\n    const semanticDiag = services.getSemanticDiagnostics(fileName);\n\n    if (semanticDiag.length > 0) {\n      dispatcher.onEmitFailure(\n        fileName,\n        ts0.formatDiagnosticsWithColorAndContext(semanticDiag, formatHost),\n        'semantic'\n      );\n    }\n\n    const suggests = services.getSuggestionDiagnostics(fileName);\n\n    for (const sug of suggests) {\n      const {line, character} = sug.file.getLineAndCharacterOfPosition(\n        sug.start\n      );\n      dispatcher.onSuggest(\n        fileName,\n        `${fileName}:${line + 1}:${character + 1} ` +\n          ts0.flattenDiagnosticMessageText(sug.messageText, '\\n', 2)\n      );\n    }\n\n    output.outputFiles.forEach(o => {\n      dispatcher.emitFile(o.name, o.text);\n    });\n  }\n\n  return {\n    dispatcher,\n    dispatchFactory,\n    action$,\n    ofType,\n    store: store.pipe(op.map(s => s.files))\n  };\n}\n\nexport function registerNode() {\n  const compile = createTranspileFileWithTsCheck(_ts, {\n    tscOpts: {inlineSourceMap: true, basePath: plinkEnv.workDir}\n  });\n  const ext = '.ts';\n  const old = require.extensions[ext] || require.extensions['.js'];\n  require.extensions[ext] = function(m: any, filename) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const _compile = m._compile;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    m._compile = function(code: string, fileName: string) {\n      const {code: jscode} = compile(code, fileName);\n      // console.log(jscode);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      return _compile.call(this, jscode, fileName);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return old(m, filename);\n  };\n}\n\nexport function test(dir: string) {\n  const {action$, ofType} = languageServices([dir]);\n  action$\n    .pipe(\n      ofType('emitFile'),\n      // eslint-disable-next-line no-console\n      op.map(({payload: [file]}) => console.log('emit', file))\n    )\n    .subscribe();\n}\n"]}