{"version":3,"file":"symlinks.js","sourceRoot":"","sources":["../../ts/utils/symlinks.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\n// import {removeSync} from 'fs-extra';\nimport Path from 'path';\nimport util from 'util';\nimport os from 'os';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\n// import {getWorkDir} from './misc';\n\nexport const isWin32 = os.platform().indexOf('win32') >= 0;\n// export const readdirAsync = util.promisify(fs.readdir);\nexport const lstatAsync = util.promisify(fs.lstat);\n// export const _symlinkAsync = util.promisify(fs.symlink);\nexport const unlinkAsync = util.promisify(fs.unlink);\n\n/**\n * Return all deleted symlinks\n * @param deleteOption \n */\nexport default async function scanNodeModules(dir = process.cwd(), deleteOption: 'all' | 'invalid' = 'invalid') {\n  const deleteAll = deleteOption === 'all';\n  const deletedList: string[] = [];\n  await listModuleSymlinks(Path.join(dir, 'node_modules'),\n    async link => {\n      if (await validateLink(link, deleteAll)) {\n        deletedList.push(link);\n      }\n    });\n  return deletedList;\n}\n\nexport function listModuleSymlinks(\n  parentDir: string,\n  onFound: (link: string) => void | Promise<void>) {\n  // const level1Dirs = await readdirAsync(parentDir);\n  return rx.from(fs.promises.readdir(parentDir)).pipe(\n    op.concatMap(level1Dirs => level1Dirs),\n    op.mergeMap(dirname => {\n      const dir = Path.resolve(parentDir, dirname);\n      if (dirname.startsWith('@') && fs.statSync(dir).isDirectory()) {\n        // it is a scope package\n        return rx.from(fs.promises.readdir(dir))\n        .pipe(\n          op.mergeMap(subdirs => subdirs),\n          op.mergeMap(file => onEachFile(Path.resolve(dir, file)))\n        );\n      } else {\n        return onEachFile(dir);\n      }\n    })\n  ).toPromise();\n  // await Promise.all(level1Dirs.map(async dir => {\n  //   if (dir.startsWith('@')) {\n  //     // it is a scope package\n  //     const subdirs = await readdirAsync(Path.resolve(parentDir, dir));\n  //     await Promise.all(subdirs.map(file => onEachFile(Path.resolve(parentDir, dir, file))));\n  //   } else {\n  //     await onEachFile(Path.resolve(parentDir, dir));\n  //   }\n  // }));\n\n  async function onEachFile(file: string) {\n    let isSymlink = false;\n    try {\n      isSymlink = fs.lstatSync(file).isSymbolicLink();\n    } catch (e) {}\n    if (isSymlink) {\n      await Promise.resolve(onFound(file));\n    }\n  }\n}\n\n/**\n * Do check existing symlink, recreate a new one if existing one is invalid symlink\n * @param linkTarget \n * @param link \n */\nexport async function symlinkAsync(linkTarget: string, link: string) {\n  try {\n    if (fs.lstatSync(link).isSymbolicLink() && Path.resolve(Path.dirname(link), fs.readlinkSync(link)) === linkTarget) {\n      // console.log('exits', link);\n      return;\n    }\n     // eslint-disable-next-line no-console\n    console.log(`remove ${link}`);\n    fs.unlinkSync(link);\n  } catch (ex) {\n    // link does not exist\n    // console.log(ex);\n  }\n  // eslint-disable-next-line no-console\n  console.log(`create symlink ${link} --> ${linkTarget}`);\n  return fs.promises.symlink(\n    Path.relative(Path.dirname(link), linkTarget),\n    link, isWin32 ? 'junction' : 'dir'\n  );\n}\n\nexport async function validateLink(link: string, deleteAll = false): Promise<boolean> {\n  try {\n    if ((await lstatAsync(link)).isSymbolicLink() &&\n      (deleteAll || !fs.existsSync(Path.resolve(Path.dirname(link), fs.readlinkSync(link))))\n      ) {\n      // eslint-disable-next-line no-console\n      console.log(`[symlink check] Remove ${deleteAll ? '' : 'invalid'} symlink ${Path.relative('.', link)}`);\n      await unlinkAsync(link);\n      return false;\n    }\n    return true;\n  } catch (ex) {\n    return false;\n  }\n}\n\n/**\n * Delete symlink or file/directory if it is invalid symlink or pointing to nonexisting target\n * @param link the symlink\n * @param target \n * @returns true if needs to create a new symlink\n */\nexport async function recreateSymlink(link: string, target: string): Promise<boolean> {\n  try {\n    if ((await lstatAsync(link)).isSymbolicLink() &&\n      !fs.existsSync(Path.resolve(Path.dirname(link), fs.readlinkSync(link)))\n      ) {\n      await unlinkAsync(link);\n      return false;\n    }\n    return true;\n  } catch (ex) {\n    return false;\n  }\n}\n\n"]}