{"version":3,"file":"watch-dir-restart.js","sourceRoot":"","sources":["../../ts/utils/watch-dir-restart.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/indent */\nimport fs from 'fs';\nimport * as cp from 'child_process';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport chokida from 'chokidar';\n\ntype ChildProcessFactory = () => cp.ChildProcess;\n\nexport type Options = {\n  retryOnError?: number;\n};\n\nexport default function(dirOrFile: string[], forkJsFiles: string[] | ChildProcessFactory[], opts: Options = {}) {\n  const watcher = chokida.watch(dirOrFile, {ignoreInitial: true});\n  const change$ = rx.fromEventPattern<[path: string, stats?: fs.Stats]>(h => watcher.on('change', h), h => watcher.off('change', h))\n    .pipe(\n      op.map(event => ({fileChangeType: 'change', data: event}))\n    );\n  const add$ = rx.fromEventPattern<string>(h => watcher.on('add', h), h => watcher.off('add', h))\n    .pipe(\n      op.map(event => ({fileChangeType: 'add', data: event}))\n    );\n\n  const action$ = new rx.Subject<'stop' | 'restart' | 'start'>();\n  const serverState$ = new rx.BehaviorSubject<'stopped' | 'started' | 'starting' | 'stopping'>('stopped');\n\n  rx.merge(\n    action$.pipe(\n      // eslint-disable-next-line no-console\n      op.tap(type => console.log('[watch-dir-restart]:', type)),\n      op.ignoreElements()\n    ),\n    // restart after started\n    rx.merge( change$, add$).pipe(\n      op.debounceTime(500),\n      op.mapTo('request restart'),\n      op.exhaustMap(() => {\n        const wait = serverState$.pipe(\n          op.filter(type => type === 'started'),\n          op.take(1)\n        );\n        action$.next('restart');\n        return wait;\n      })\n    ),\n    // restart -> stop -> (after stopped) -> start\n    action$.pipe(\n      op.filter(type => type === 'restart'),\n      op.concatMap(() => {\n        const done = serverState$.pipe(\n          op.filter(type => type === 'stopped'),\n          op.take(1)\n        );\n        action$.next('stop');\n        return done;\n      }),\n      op.tap(() => action$.next('start'))\n    ),\n    // start -> started, stop -> stopped\n    action$.pipe(\n      op.filter(type => type === 'start'),\n      op.concatMap(() => {\n        const factories = (forkJsFiles.length > 0 && typeof forkJsFiles[0] === 'string') ?\n          (forkJsFiles as string[]).map(forkJsFile => () => cp.fork(forkJsFile))\n          :\n          (forkJsFiles as ChildProcessFactory[]);\n\n        serverState$.next('started');\n\n        return rx.merge(\n          rx.from(factories).pipe(\n            op.mergeMap(fac => new rx.Observable<cp.ChildProcess>(sub => {\n                const child = fac();\n                const subStop = action$.pipe(\n                  op.filter(type => type === 'stop'),\n                  op.take(1),\n                  op.takeUntil(serverState$.pipe(op.filter(s => s === 'stopped'))),\n                  op.tap(() => {\n                    child.kill('SIGINT');\n                    serverState$.next('stopping');\n                  })\n                ).subscribe();\n\n                child.on('exit', (code, signal) => {\n                  // Send antion to kill other child process\n                  if (serverState$.getValue() !== 'stopping') {\n                    const msg = `Unexpected exit signal ${code + ''} - ${signal?.toString() || ''}`;\n                    // eslint-disable-next-line no-console\n                    console.log(msg);\n                    sub.error(new Error(msg));\n                  }\n                  sub.complete();\n                });\n\n                child.on('error', (err) => {\n                  // eslint-disable-next-line no-console\n                  console.log('Child process encounters error:', err);\n                  sub.error(err);\n                });\n                sub.next(child);\n\n                return () => subStop.unsubscribe();\n              }).pipe(\n                op.retry(opts.retryOnError != null ? opts.retryOnError : 10)\n              )\n            ),\n            op.finalize(() => {\n              serverState$.next('stopped');\n            })\n          )\n        );\n      })\n    ),\n    rx.defer(() => {\n      // initial\n      action$.next('start');\n      return rx.EMPTY;\n    })\n  ).subscribe();\n  return {action$, serverState$};\n}\n"]}