{"version":3,"file":"logger.js","sourceRoot":"","sources":["../src/logger.ts"],"names":[],"mappings":";;;;;;AAAA,0DAA6B;AAC7B,mCAAiC;AACjC,iFAA0E;AAC1E;;;;;;;;;;;;;;;;GAgBG;AACH,SAAgB,QAAQ,CAAC,IAAY,EAAE,OAAgB;IACrD,MAAM,GAAG,GAAG,IAAA,6CAAoB,GAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,GAAG,EAAE;QACP,OAAO,IAAA,kBAAS,EAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,gBAAgB,CAAC,IAAI,CAAC,mBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACpH;SAAM;QACL,OAAO,IAAA,kBAAS,EAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACnG;AACH,CAAC;AAPD,4BAOC","sourcesContent":["import path from 'node:path';\nimport {getLogger} from 'log4js';\nimport {packageOfFileFactory} from './package-mgr/package-info-gathering';\n/**\n * Get log4js Logger for specific node.js file, the output log will have\n * category in form of \"<pkg name>.<file base name>\"\n *\n * How to configure Plink log inside a self controlled process in simplest way:\n   ```\n   initProcess('none');\n   logConfig(initConfig({})());\n   const log = log4File(__filename);\n   ```\n   If your script is not started with Plink's command line extension or app server plugin package, you have to configure Logger like above code snippet\n\n * Usage:\n * - Common JS module (cjs): loggerForFile(__filename);\n * - EJS module (mjs): loggerForFile(new URL(import.meta.url).pathname)\n * @param file \n */\nexport function log4File(file: string, subName?: string) {\n  const pkg = packageOfFileFactory().getPkgOfFile(file);\n  if (pkg) {\n    return getLogger(pkg.name + '.' + /^(.*?)\\.[^.]*$/.exec(path.basename(file))![1] + (subName ? '.' + subName : ''));\n  } else {\n    return getLogger(/^(.*?)\\.[^.]*$/.exec(path.basename(file))![1] + (subName ? '.' + subName : ''));\n  }\n}\n"]}