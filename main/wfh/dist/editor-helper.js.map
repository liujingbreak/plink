{"version":3,"file":"editor-helper.js","sourceRoot":"","sources":["../src/editor-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable max-len */\nimport Path from 'path';\nimport * as fs from 'fs-extra';\nimport _ from 'lodash';\nimport log4js from 'log4js';\nimport chalk from 'chalk';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport {ActionCreatorWithPayload, PayloadAction} from '@reduxjs/toolkit';\nimport ts from 'typescript';\nimport {setTsCompilerOptForNodePath, CompilerOptions, packages4WorkspaceKey} from './package-mgr/package-list-helper';\nimport {getProjectList, pathToProjKey, getState as getPkgState, updateGitIgnores, slice as pkgSlice,\n  isCwdWorkspace, workspaceDir} from './package-mgr';\nimport {stateFactory, ofPayloadAction as ofp, action$Of} from './store';\nimport * as _recp from './recipe-manager';\nimport {symbolicLinkPackages} from './rwPackageJson';\nimport {getPackageSettingFiles} from './config';\nimport {plinkEnv, closestCommonParentDir} from './utils/misc';\n// import isp from 'inspector';\n// if (process.send)\n//   isp.open(9222, '0.0.0.0', true);\n\nconst {workDir, rootDir: rootPath} = plinkEnv;\n\n\n// import Selector from './utils/ts-ast-query';\nconst log = log4js.getLogger('plink.editor-helper');\n// const {parse} = require('comment-json');\n\ninterface EditorHelperState {\n  /** tsconfig files should be changed according to linked packages state */\n  tsconfigByRelPath: Map<string, HookedTsconfig>;\n  /** Problematic symlinks which must be removed before running:\n   * \n   * When node_modules symlink is under source package directory (if there is only one source package in this project, and its parent directory\n   * is root directory directly, then Plink must create a symlink \"node_modules\" to linked to node_modules which is under current worktree space,\n   * and the symlink have to be inside source package), it will not work with \"--preserve-symlinks\",\n   * in which case, Node.js will regard a workspace node_module and its symlink inside source package as\n   * two different directory, and causes problem like same 3rd party module is loaded twice for the dependent source package\n   */\n  nodeModuleSymlinks?: Set<string>;\n}\n\ninterface HookedTsconfig {\n  /** absolute path or path relative to root path, any path that is stored in Redux store, the better it is in form of\n   * relative path of Root path\n   */\n  relPath: string;\n  baseUrl: string;\n  originJson: any;\n}\n\nconst initialState: EditorHelperState = {\n  tsconfigByRelPath: new Map()\n};\n\nconst slice = stateFactory.newSlice({\n  name: 'editor-helper',\n  initialState,\n  reducers: {\n    clearSymlinks() {},\n    hookTsconfig(s, {payload}: PayloadAction<string[]>) {},\n    unHookTsconfig(s, {payload}: PayloadAction<string[]>) {\n      for (const file of payload) {\n        const relPath = relativePath(file);\n        s.tsconfigByRelPath.delete(relPath);\n      }\n    },\n    unHookAll() {},\n    clearSymlinksDone(S) {}\n  }\n});\n\nexport const dispatcher = stateFactory.bindActionCreators(slice);\n\nstateFactory.addEpic<EditorHelperState>((action$, state$) => {\n  let noModuleSymlink: Set<string>;\n\n  function updateNodeModuleSymlinks(wsKey: string) {\n    if (noModuleSymlink == null) {\n      noModuleSymlink = new Set();\n      for (const projDir of getPkgState().project2Packages.keys()) {\n        const rootPkgJson = require(Path.resolve(plinkEnv.rootDir, projDir, 'package.json')) as {plink?: {noModuleSymlink?: string[]}};\n        for (const dir of (rootPkgJson.plink?.noModuleSymlink || []).map(item => Path.resolve(plinkEnv.rootDir, projDir, item))) {\n          noModuleSymlink.add(dir);\n        }\n      }\n    }\n\n    const currWorkspaceDir = workspaceDir(wsKey);\n    const srcPkgSet = new Set(Array.from(packages4WorkspaceKey(wsKey, false)).map(pkg => pkg.realPath));\n    const srcDirs = Array.from(_recp.allSrcDirs())\n      .map(item => item.projDir ? Path.resolve(item.projDir, item.srcDir) : item.srcDir);\n    return rx.from(srcDirs).pipe(\n      op.filter(dir => !noModuleSymlink.has(dir)),\n      op.tap(srcDir => {\n        rx.of({name: 'node_modules', realPath: Path.join(currWorkspaceDir, 'node_modules')}).pipe(\n          symbolicLinkPackages(srcDir)\n        ).subscribe();\n      }),\n      // only those \"node_modules\" symlink which are inside source package need to be remove\n      // otherwise it will mess up Node.js module lookup algorithm\n      op.filter(srcDir => srcPkgSet.has(srcDir)),\n      op.reduce<string, string[]>((acc, item) => {\n        acc.push(item);\n        return acc;\n      }, []),\n      op.mergeMap(dirs => {\n        dispatcher._change(s => {\n          s.nodeModuleSymlinks = new Set();\n          for (const destDir of dirs) {\n            s.nodeModuleSymlinks.add(Path.join(destDir, 'node_modules'));\n          }\n        });\n        return dirs;\n      }),\n      rx.catchError(err => {\n        console.error(err);\n        log.error('failed to create symlinks for srcSet directories', err);\n        return rx.throwError(() => err as Error);\n      })\n    );\n  }\n\n  return rx.merge(\n    action$.pipe(ofp(slice.actions.clearSymlinks),\n      op.concatMap(() => {\n        return rx.from(_recp.allSrcDirs()).pipe(\n          op.map(item => item.projDir ? Path.resolve(item.projDir, item.srcDir, 'node_modules') :\n            Path.resolve(item.srcDir, 'node_modules')),\n          op.mergeMap(dir => {\n            return rx.from(fs.promises.lstat(dir)).pipe(\n              op.filter(stat => stat.isSymbolicLink()),\n              op.mergeMap(stat => {\n                log.info('remove symlink ' + dir);\n                return fs.promises.unlink(dir);\n              }),\n              op.catchError((err, src) => rx.EMPTY)\n            );\n          }),\n          op.finalize(() => dispatcher.clearSymlinksDone())\n        );\n      })\n    ),\n    action$.pipe(ofp(pkgSlice.actions.workspaceChanged),\n      op.concatMap(async ({payload: wsKeys}) => {\n        const wsDir = isCwdWorkspace() ?\n          workDir :\n          getPkgState().currWorkspace ?\n            Path.resolve(rootPath, getPkgState().currWorkspace!) :\n            undefined;\n        await writePackageSettingType();\n        const lastWsKey = wsKeys[wsKeys.length - 1];\n        updateTsconfigFileForProjects(lastWsKey);\n        await Promise.all(Array.from(getState().tsconfigByRelPath.values())\n          .map(data => updateHookedTsconfig(data, wsDir)));\n        // updateNodeModuleSymlinks might be empty, to ensure lastValueFrom() work, concat an abitrary observable at the end\n        return rx.lastValueFrom(rx.concat(updateNodeModuleSymlinks(lastWsKey), rx.of(1)));\n      })\n    ),\n    action$.pipe(ofp(slice.actions.hookTsconfig),\n      op.mergeMap(action => {\n        return action.payload;\n      }),\n      op.mergeMap((file) => {\n        const relPath = Path.relative(rootPath, file).replace(/\\\\/g, '/');\n        const backupFile = backupTsConfigOf(file);\n        const isBackupExists = fs.existsSync(backupFile);\n        const fileContent = isBackupExists ? fs.readFileSync(backupFile, 'utf8') : fs.readFileSync(file, 'utf8');\n        const json = JSON.parse(fileContent) as {compilerOptions: CompilerOptions};\n        const data: HookedTsconfig = {\n          relPath,\n          baseUrl: json.compilerOptions.baseUrl,\n          originJson: json\n        };\n        dispatcher._change(s => {\n          s.tsconfigByRelPath.set(relPath, data);\n        });\n\n        if (!isBackupExists) {\n          fs.writeFileSync(backupFile, fileContent);\n        }\n        const wsDir = isCwdWorkspace() ? workDir :\n          getPkgState().currWorkspace ? Path.resolve(rootPath, getPkgState().currWorkspace!)\n          : undefined;\n        return updateHookedTsconfig(data, wsDir);\n      })\n    ),\n    action$.pipe(ofp(slice.actions.unHookTsconfig),\n      op.mergeMap(({payload}) => payload),\n      op.mergeMap(file => {\n        const absFile = Path.resolve(rootPath, file);\n        const backup = backupTsConfigOf(absFile);\n        if (fs.existsSync(backup)) {\n          log.info('Roll back:', absFile);\n          return fs.promises.copyFile(backup, absFile);\n        }\n        return Promise.resolve();\n      })\n    ),\n    action$.pipe(ofp(slice.actions.unHookAll),\n      op.tap(() => {\n        dispatcher.unHookTsconfig(Array.from(getState().tsconfigByRelPath.keys()));\n      })\n    )\n  ).pipe(\n    op.ignoreElements(),\n    op.catchError((err, caught) => {\n      log.error(err);\n      return caught;\n    })\n  );\n});\n\nexport function getAction$(type: keyof (typeof slice)['caseReducers']) {\n  return action$Of(stateFactory, slice.actions[type] as ActionCreatorWithPayload<any, any>);\n}\n\nexport function getState() {\n  return stateFactory.sliceState(slice);\n}\n\nexport function getStore() {\n  return stateFactory.sliceStore(slice);\n}\n\nfunction relativePath(file: string) {\n  return Path.relative(rootPath, file).replace(/\\\\/g, '/');\n}\n\nfunction updateTsconfigFileForProjects(wsKey: string, includeProject?: string) {\n  const ws = getPkgState().workspaces.get(wsKey);\n  if (ws == null)\n    return;\n\n  const projectDirs = getProjectList();\n  const workspaceDir = Path.resolve(rootPath, wsKey);\n\n  const recipeManager = require('./recipe-manager') as typeof _recp;\n\n  const srcRootDir = closestCommonParentDir(projectDirs);\n\n  if (includeProject) {\n    writeTsConfigForProj(includeProject);\n  } else {\n    for (const proj of projectDirs) {\n      writeTsConfigForProj(proj);\n    }\n  }\n\n  function writeTsConfigForProj(proj: string) {\n    const include: string[] = [];\n    recipeManager.eachRecipeSrc(proj, (srcDir: string) => {\n      let includeDir = Path.relative(proj, srcDir).replace(/\\\\/g, '/');\n      if (includeDir && includeDir !== '/')\n        includeDir += '/';\n      include.push(includeDir + '**/*.ts');\n      include.push(includeDir + '**/*.tsx');\n    });\n\n    if (pathToProjKey(proj) === getPkgState().linkedDrcpProject) {\n      include.push('main/wfh/**/*.ts');\n    }\n    // include.push('dist/*.package-settings.d.ts');\n    const tsconfigFile = createTsConfig(proj, srcRootDir, workspaceDir, {},\n      // {'_package-settings': [Path.relative(proj, packageSettingDtsFileOf(workspaceDir))\n      //   .replace(/\\\\/g, '/')\n      //   .replace(/\\.d\\.ts$/, '')]\n      // },\n      include\n    );\n    const projDir = Path.resolve(proj);\n    updateGitIgnores({file: Path.resolve(proj, '.gitignore'),\n      lines: [\n        Path.relative(projDir, tsconfigFile).replace(/\\\\/g, '/')\n      ]\n    });\n    updateGitIgnores({\n      file: Path.resolve(rootPath, '.gitignore'),\n      lines: [Path.relative(rootPath, Path.resolve(workspaceDir, 'types')).replace(/\\\\/g, '/')]\n    });\n  }\n}\n\nfunction writePackageSettingType() {\n  const done = new Array<Promise<unknown>>(getPkgState().workspaces.size);\n  let i = 0;\n  for (const wsKey of getPkgState().workspaces.keys()) {\n    let header = '';\n    // let body = 'export interface PackagesConfig {\\n';\n    let interfaceBody = 'declare module \\'@wfh/plink\\' {\\n';\n    interfaceBody += '  interface PlinkSettings {\\n';\n    for (const [typeFile, typeExport, _defaultFile, _defaultExport, pkg] of getPackageSettingFiles(wsKey)) {\n      const varName = pkg.shortName.replace(/-([^])/g, (match, g1: string) => g1.toUpperCase());\n      const typeName = varName.charAt(0).toUpperCase() + varName.slice(1);\n      header += `import {${typeExport} as ${typeName}} from '${pkg.name}/${typeFile}';\\n`;\n      // body += `  '${pkg.name}': ${typeName};\\n`;\n      interfaceBody += `    '${pkg.name}': ${typeName};\\n`;\n    }\n    // body += '}\\n';\n    interfaceBody += '  }\\n}\\n';\n    const typeFile = Path.resolve(rootPath, wsKey, 'node_modules/@types/plink-settings/index.d.ts');\n    const typeFileContent = header + interfaceBody;\n    fs.mkdirpSync(Path.dirname(typeFile));\n    if (!fs.existsSync(typeFile) || fs.readFileSync(typeFile, 'utf8') !== typeFileContent) {\n      done[i++] = fs.promises.writeFile(typeFile, typeFileContent);\n      log.info('write package setting definition file', chalk.blue(typeFile));\n    }\n\n    // const file = Path.join(distDir, wsKey + '.package-settings.d.ts');\n    // log.info(`write setting file: ${chalk.blue(file)}`);\n    // done[i++] = fs.promises.writeFile(file, header + body);\n  }\n  return Promise.all(done);\n}\n\n/**\n * \n * @param pkgName \n * @param dir \n * @param workspace \n * @param drcpDir \n * @param include \n * @return tsconfig file path\n */\nfunction createTsConfig(proj: string, srcRootDir: string, workspace: string,\n  extraPathMapping: {[path: string]: string[]},\n  include = ['**/*.ts']) {\n  const tsjson: {extends?: string; include: string[]; exclude: string[]; compilerOptions?: Partial<CompilerOptions>} = {\n    extends: undefined,\n    include,\n    exclude: ['**/node_modules', '**/node_modules.*']\n  };\n  const drcpDir = (getPkgState().linkedDrcp || getPkgState().installedDrcp)!.realPath;\n  // tsjson.include = [];\n  tsjson.extends = Path.relative(proj, Path.resolve(drcpDir, 'wfh/tsconfig-base.json'));\n  if (!Path.isAbsolute(tsjson.extends) && !tsjson.extends.startsWith('..')) {\n    tsjson.extends = './' + tsjson.extends;\n  }\n  tsjson.extends = tsjson.extends.replace(/\\\\/g, '/');\n\n  const rootDir = Path.relative(proj, srcRootDir).replace(/\\\\/g, '/') || '.';\n  tsjson.compilerOptions = {\n    rootDir,\n    // noResolve: true, // Do not add this, VC will not be able to understand rxjs module\n    skipLibCheck: false,\n    jsx: 'preserve',\n    target: 'es2015',\n    module: 'nodenext',\n    strict: true,\n    declaration: false, // Important: to avoid https://github.com/microsoft/TypeScript/issues/29808#issuecomment-487811832\n    paths: extraPathMapping\n  };\n  setTsCompilerOptForNodePath(proj, proj, tsjson.compilerOptions, {\n    workspaceDir: workspace,\n    enableTypeRoots: true,\n    realPackagePaths: true\n  });\n  const tsconfigFile = Path.resolve(proj, 'tsconfig.json');\n  writeTsConfigFile(tsconfigFile, tsjson);\n  return tsconfigFile;\n}\n\nfunction backupTsConfigOf(file: string) {\n  // const tsconfigDir = Path.dirname(file);\n  const m = /([^/\\\\.]+)(\\.[^/\\\\.]+)?$/.exec(file);\n  const backupFile = Path.resolve(file.slice(0, file.length - m![0].length) + m![1] + '.orig' + m![2]);\n  return backupFile;\n}\n\n\nasync function updateHookedTsconfig(data: HookedTsconfig, workspaceDir?: string) {\n  const file = Path.isAbsolute(data.relPath)\n    ? data.relPath :\n    Path.resolve(rootPath, data.relPath);\n  const tsconfigDir = Path.dirname(file);\n  const backup = backupTsConfigOf(file);\n\n  const json = (fs.existsSync(backup) ?\n    JSON.parse(await fs.promises.readFile(backup, 'utf8'))\n    : _.cloneDeep(data.originJson) ) as  {compilerOptions?: CompilerOptions};\n\n  // if (json.compilerOptions?.paths && json.compilerOptions.paths['_package-settings'] != null) {\n  //   delete json.compilerOptions.paths['_package-settings'];\n  // }\n  const newCo = setTsCompilerOptForNodePath(tsconfigDir, data.baseUrl,\n    json.compilerOptions as any, {\n      workspaceDir, enableTypeRoots: true, realPackagePaths: true\n    });\n  json.compilerOptions = newCo;\n  log.info('update:', chalk.blue(file));\n  return fs.promises.writeFile(file, JSON.stringify(json, null, '  '));\n}\n\nfunction overrideTsConfig(src: any, target: any) {\n  for (const key of Object.keys(src)) {\n    if (key === 'compilerOptions') {\n      if (target.compilerOptions)\n        Object.assign(target.compilerOptions, src.compilerOptions);\n    } else {\n      target[key] = src[key];\n    }\n  }\n}\n\nfunction writeTsConfigFile(tsconfigFile: string, tsconfigOverrideSrc: any) {\n  if (fs.existsSync(tsconfigFile)) {\n    const existing = fs.readFileSync(tsconfigFile, 'utf8');\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const existingJson = ts.readConfigFile(tsconfigFile,\n      (file) => {\n        if (Path.resolve(file) === tsconfigFile)\n          return existing;\n        else\n          return fs.readFileSync(file, 'utf-8');\n      }).config;\n    overrideTsConfig(tsconfigOverrideSrc, existingJson);\n    const newJsonStr = JSON.stringify(existingJson, null, '  ');\n    if (newJsonStr !== existing) {\n      log.info('Write tsconfig: ' + chalk.blue(tsconfigFile));\n      fs.writeFileSync(tsconfigFile, JSON.stringify(existingJson, null, '  '));\n    } else {\n      log.debug(`${tsconfigFile} is not changed.`);\n    }\n  } else {\n    log.info('Create tsconfig: ' + chalk.blue(tsconfigFile));\n    fs.writeFileSync(tsconfigFile, JSON.stringify(tsconfigOverrideSrc, null, '  '));\n  }\n}\n\n"]}