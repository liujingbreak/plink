{"version":3,"file":"node-package-api.js","sourceRoot":"","sources":["../../ts/package-mgr/node-package-api.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable  max-len\nimport {EventEmitter} from 'events';\n\nimport npmimportCssLoader from 'require-injector/dist/css-loader';\nimport Inject from 'require-injector';\nimport _ from 'lodash';\nimport {Logger, getLogger} from 'log4js';\nimport PackageInstance from '../packageNodeInstance';\nimport * as assetsUrl from '../share/assets-url';\nimport config from '../config';\nimport {PackageInfo} from './package-info-gathering';\n\nconst moduleNameReg = /^(?:@([^/]+)\\/)?(\\S+)/;\n\nfunction parseName(longName: string) {\n  const ret = {name: longName, scope: ''};\n  const match = moduleNameReg.exec(longName);\n  if (match) {\n    ret.scope = match[1];\n    ret.name = match[2];\n  }\n  return ret;\n}\n// module.exports = NodeApi;\n// module.exports.default = NodeApi; // To be available for ES6/TS import syntax \n\n// var suppressWarn4Urls = config.get('suppressWarning.assetsUrl', []).map(line => new RegExp(line));\n\nclass NodeApi implements assetsUrl.PackageApi, assetsUrl.ExtendedApi {\n  eventBus: EventEmitter | undefined;\n  packageShortName: string;\n  // packageUtils = packageUitls;\n  // compileNodePath = [config().nodePath];\n  config = config;\n  argv: any;\n  packageInfo: PackageInfo | undefined;\n  default: NodeApi | undefined;\n  logger: Logger;\n\n  browserInjector: Inject | undefined;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  findPackageByFile: (file: string) => PackageInstance | undefined;\n  getNodeApiForPackage: ((pkInstance: PackageInstance) => NodeApi) | undefined;\n\n  assetsUrl = assetsUrl.assetsUrl;\n  serverUrl = assetsUrl.serverUrl;\n  /** @deprecated */\n  entryPageUrl = assetsUrl.entryPageUrl;\n\n  get contextPath() {\n    return this._contextPath();\n  }\n\n\n  constructor(public packageName: string, public packageInstance: PackageInstance) {\n    this.packageShortName = parseName(packageName).name;\n    // this.contextPath = this._contextPath();\n    this.logger = getLogger(this.packageName);\n  }\n\n  /**\n   * return A log witch catgory name \"<package name>.<nameAfterPackageName>\"\n   * @param nameAfterPackageName \n   */\n  getLogger(nameAfterPackageName: string) {\n    return getLogger(this.packageName + '.' + nameAfterPackageName);\n  }\n\n  isBrowser() {\n    return false;\n  }\n\n  isNode() {\n    return true;\n  }\n\n  addBrowserSideConfig(path: string, value: any) {\n    this.config.set(path, value);\n    this.config().browserSideConfigProp.push(path);\n  }\n\n  /**\n\t * @param {string} url\n\t * @param {string} sourceFile\n\t * @return {string} | {packageName: string, path: string, isTilde: boolean, isPage: boolean}, returns string if it is a relative path, or object if\n\t * it is in format of /^(?:assets:\\/\\/|~|page(?:-([^:]+))?:\\/\\/)((?:@[^\\/]+\\/)?[^\\/]+)?\\/(.*)$/\n\t */\n  normalizeAssetsUrl(url: string, sourceFile: string) {\n    const match = /^(?:assets:\\/\\/|~|page(?:-([^:]+))?:\\/\\/)((?:@[^/]+\\/)?[^/@][^/]*)?(?:\\/([^@].*)?)?$/.exec(url);\n    if (match) {\n      let packageName = match[2];\n      const relPath = match[3] || '';\n      if (!packageName || packageName === '') {\n        const compPackage = this.findPackageByFile(sourceFile);\n        if (compPackage == null)\n          throw new Error(`${sourceFile} does not belong to any known package`);\n        packageName = compPackage.longName;\n      }\n      const injectedPackageName = npmimportCssLoader.getInjectedPackage(packageName, sourceFile, this.browserInjector);\n      if (injectedPackageName)\n        packageName = injectedPackageName;\n\n      return {\n        packageName,\n        path: relPath,\n        isTilde: url.charAt(0) === '~',\n        isPage: match[1] != null || _.startsWith(url, 'page://'),\n        locale: match[1]\n      };\n    } else {\n      return url;\n    }\n  }\n  /**\n\t * join contextPath\n\t * @param {string} path\n\t * @return {[type]} [description]\n\t */\n  joinContextPath(path: string) {\n    return (this.contextPath + '/' + path).replace(/\\/\\//g, '/');\n  }\n\n  _contextPath(packageName?: string): string {\n    // let packageShortName;\n    // if (!packageName) {\n    //   packageName = this.packageName;\n    //   packageShortName = this.parsePackageName(packageName).name;\n    // } else {\n    //   packageShortName = this.packageShortName;\n    // }\n    let path: string = config.get('packageContextPathMapping[' + this.packageShortName + ']') ||\n      config.get(['packageContextPathMapping', packageName || this.packageName]);\n    path = path != null ? path : '/' + this.packageShortName;\n    if (this.config().nodeRoutePath) {\n      path = this.config().nodeRoutePath + '/' + path;\n    }\n    return path.replace(/\\/\\/+/g, '/');\n  }\n\n  parsePackageName(packageName: string) {\n    return parseName(packageName);\n  }\n\n  /** @deprecated */\n  isDefaultLocale() {\n    return this.config.get('locales[0]') === this.getBuildLocale();\n  }\n  /** @deprecated */\n  getBuildLocale() {\n    return this.argv.locale || this.config.get('locales[0]');\n  }\n}\n\nNodeApi.prototype.eventBus = new EventEmitter();\n\n// assetsUrl.patchToApi(NodeApi.prototype);\n\nexport default NodeApi;\n"]}