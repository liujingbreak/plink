{"version":3,"file":"index.js","sourceRoot":"","sources":["../../ts/package-mgr/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Unfortunately, this file is very long, you need to fold by indention for better view of source code in Editor\n */\n\nimport fs from 'fs';\nimport Path from 'path';\nimport { EOL } from 'os';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport chalk from 'chalk';\nimport fsext from 'fs-extra';\nimport _ from 'lodash';\nimport {from, merge, Observable, of, defer, throwError, EMPTY} from 'rxjs';\nimport { distinctUntilChanged, filter, map, debounceTime, takeWhile,\n  take, concatMap, ignoreElements, scan, catchError, tap, finalize } from 'rxjs/operators';\nimport {getLogger} from 'log4js';\nimport { listCompDependency, PackageJsonInterf, DependentInfo } from '../transitive-dep-hoister';\nimport { exe } from '../process-utils';\nimport { setProjectList, setLinkPatterns} from '../recipe-manager';\nimport { stateFactory, ofPayloadAction } from '../store';\nimport {isActionOfCreator, castByActionType} from '../../../packages/redux-toolkit-observable/dist/helper';\n// import { getRootDir } from '../utils/misc';\nimport cleanInvalidSymlinks, { isWin32, listModuleSymlinks, unlinkAsync } from '../utils/symlinks';\nimport {symbolicLinkPackages} from '../rwPackageJson';\nimport { plinkEnv } from '../utils/misc';\nconst log = getLogger('plink.package-mgr');\nexport interface PackageInfo {\n  name: string;\n  scope: string;\n  shortName: string;\n  json: {\n    plink?: PlinkJsonType;\n    dr?: PlinkJsonType;\n    [p: string]: any;\n  } & PackageJsonInterf;\n  /** Be aware: If this property is not same as \"realPath\",\n   * then it is a symlink whose path is relative to workspace directory */\n  path: string;\n  realPath: string;\n  isInstalled: boolean;\n}\n\nexport type PlinkJsonType = {\n  typeRoot?: string;\n  type?: 'server' | string[] | string;\n  serverPriority?: string | number;\n  serverEntry?: string;\n  setting?: {\n    /** In form of \"<path>#<export-name>\" */\n    type: string;\n    /** In form of \"<module-path>#<export-name>\" */\n    value: string;\n  };\n  [p: string]: any;\n};\n\nexport interface PackagesState {\n  npmInstallOpt: NpmOptions;\n  inited: boolean;\n  srcPackages: Map<string, PackageInfo>;\n  /** Key is relative path to root workspace */\n  workspaces: Map<string, WorkspaceState>;\n  /** key of current \"workspaces\" */\n  currWorkspace?: string | null;\n  project2Packages: Map<string, string[]>;\n  srcDir2Packages: Map<string, string[]>;\n  /** Drcp is the original name of Plink project */\n  linkedDrcp?: PackageInfo | null;\n  linkedDrcpProject?: string | null;\n  installedDrcp?: PackageInfo | null;\n  gitIgnores: {[file: string]: string[]};\n  isInChina?: boolean;\n  /** Everytime a hoist workspace state calculation is basically done, it is increased by 1 */\n  workspaceUpdateChecksum: number;\n  packagesUpdateChecksum: number;\n  /** workspace key */\n  lastCreatedWorkspace?: string;\n}\n\nconst {distDir, rootDir, plinkDir, isDrcpSymlink, symlinkDirName} = plinkEnv;\n\nconst NS = 'packages';\nconst moduleNameReg = /^(?:@([^/]+)\\/)?(\\S+)/;\n\nconst state: PackagesState = {\n  inited: false,\n  workspaces: new Map(),\n  project2Packages: new Map(),\n  srcDir2Packages: new Map(),\n  srcPackages: new Map(),\n  gitIgnores: {},\n  workspaceUpdateChecksum: 0,\n  packagesUpdateChecksum: 0,\n  npmInstallOpt: {isForce: false}\n};\n\nexport interface WorkspaceState {\n  id: string;\n  originInstallJson: PackageJsonInterf;\n  originInstallJsonStr: string;\n  installJson: PackageJsonInterf;\n  installJsonStr: string;\n  /** names of those linked source packages */\n  linkedDependencies: [string, string][];\n  /** names of those linked source packages */\n  linkedDevDependencies: [string, string][];\n\n  /** installed Plink component packages [name, version]*/\n  installedComponents?: Map<string, PackageInfo>;\n\n  hoistInfo: Map<string, DependentInfo>;\n  hoistPeerDepInfo: Map<string, DependentInfo>;\n\n  hoistDevInfo: Map<string, DependentInfo>;\n  hoistDevPeerDepInfo: Map<string, DependentInfo>;\n\n  hoistInfoSummary?: {\n    /** User should manully add them as dependencies of workspace */\n    missingDeps: {[name: string]: string};\n    /** User should manully add them as devDependencies of workspace */\n    missingDevDeps: {[name: string]: string};\n    /** versions are conflict */\n    conflictDeps: string[];\n  };\n}\n\nexport interface NpmOptions {\n  useYarn?: boolean;\n  cache?: string;\n  isForce: boolean;\n  useNpmCi?: boolean;\n  prune?: boolean;\n  dedupe?: boolean;\n  offline?: boolean;\n}\n\nexport const slice = stateFactory.newSlice({\n  name: NS,\n  initialState: state,\n  reducers: {\n    /** Do this action after any linked package is removed or added  */\n    initRootDir(d, {payload}: PayloadAction<NpmOptions>) {\n      d.npmInstallOpt.cache = payload.cache;\n      d.npmInstallOpt.useNpmCi = payload.useNpmCi;\n      d.npmInstallOpt.useYarn = payload.useYarn;\n    },\n\n    /** \n     * - Create initial files in root directory\n     * - Scan linked packages and install transitive dependency\n     * - Switch to different workspace\n     * - Delete nonexisting workspace\n     * - If \"packageJsonFiles\" is provided, it should skip step of scanning linked packages\n     * - TODO: if there is linked package used in more than one workspace, hoist and install for them all?\n     */\n    updateWorkspace(d, {payload}: PayloadAction<{\n      dir: string;\n      // createHook: boolean;\n      packageJsonFiles?: string[];\n    } & NpmOptions>) {\n      d.npmInstallOpt.cache = payload.cache;\n      d.npmInstallOpt.useYarn = payload.useYarn;\n      d.npmInstallOpt.useNpmCi = payload.useNpmCi;\n    },\n    scanAndSyncPackages(d: PackagesState, action: PayloadAction<{packageJsonFiles?: string[]}>) {\n    },\n\n    updateDir() {},\n    _updatePlinkPackageInfo(d) {\n      const plinkPkg = createPackageInfo(Path.resolve(plinkDir, 'package.json'), false);\n      if (isDrcpSymlink) {\n        d.linkedDrcp = plinkPkg;\n        d.installedDrcp = null;\n        d.linkedDrcpProject = pathToProjKey(Path.dirname(d.linkedDrcp.realPath));\n      } else {\n        d.linkedDrcp = null;\n        d.installedDrcp = plinkPkg;\n        d.linkedDrcpProject = null;\n      }\n    },\n    _syncLinkedPackages(d, {payload}: PayloadAction<[pkgs: PackageInfo[], operator: 'update' | 'clean']>) {\n      d.inited = true;\n      let map = d.srcPackages;\n      if (payload[1] === 'clean') {\n        map = d.srcPackages = new Map<string, PackageInfo>();\n      }\n      for (const pkInfo of payload[0]) {\n        map.set(pkInfo.name, pkInfo);\n      }\n    },\n    onLinkedPackageAdded(d, action: PayloadAction<string[]>) {},\n    addProject(d, action: PayloadAction<string[]>) {\n      for (const rawDir of action.payload) {\n        const dir = pathToProjKey(rawDir);\n        if (!d.project2Packages.has(dir)) {\n          d.project2Packages.set(dir, []);\n        }\n      }\n    },\n    deleteProject(d, action: PayloadAction<string[]>) {\n      for (const rawDir of action.payload) {\n        const dir = pathToProjKey(rawDir);\n        d.project2Packages.delete(dir);\n      }\n    },\n    addSrcDirs(d, action: PayloadAction<string[]>) {\n      for (const rawDir of action.payload) {\n        const dir = pathToProjKey(rawDir);\n        if (!d.srcDir2Packages.has(dir)) {\n          d.srcDir2Packages.set(dir, []);\n        }\n      }\n    },\n    deleteSrcDirs(d, action: PayloadAction<string[]>) {\n      for (const rawDir of action.payload) {\n        const dir = pathToProjKey(rawDir);\n        d.srcDir2Packages.delete(dir);\n      }\n    },\n    /** payload: workspace keys, happens as debounced workspace change event */\n    _workspaceBatchChanged(d, action: PayloadAction<string[]>) {},\n    /** workspaceChanged is safe for external module to watch, it serialize actions like \"_installWorkspace\" and \"_workspaceBatchChanged\" */\n    workspaceChanged(d, action: PayloadAction<string[]>) {},\n    updateGitIgnores(d, {payload: {file, lines}}: PayloadAction<{file: string; lines: string[]}>) {\n      let rel = file, abs = file;\n      if (Path.isAbsolute(file)) {\n        rel = Path.relative(rootDir, file).replace(/\\\\/g, '/');\n        abs = file;\n      } else {\n        abs = Path.resolve(rootDir, file);\n      }\n      if (d.gitIgnores[abs]) {\n        delete d.gitIgnores[abs];\n      }\n      d.gitIgnores[rel] = lines.map(line => line.startsWith('/') ? line : '/' + line);\n    },\n    packagesUpdated(d) {\n      d.packagesUpdateChecksum++;\n    },\n    setInChina(d, {payload}: PayloadAction<boolean>) {\n      d.isInChina = payload;\n    },\n    _setCurrentWorkspace(d, {payload: dir}: PayloadAction<string | null>) {\n      if (dir != null)\n        d.currWorkspace = workspaceKey(dir);\n      else\n        d.currWorkspace = null;\n    },\n    /** paramter: workspace key */\n    workspaceStateUpdated(d, {payload}: PayloadAction<string>) {\n      d.workspaceUpdateChecksum += 1;\n    },\n    // onWorkspacePackageUpdated(d, {payload: workspaceKey}: PayloadAction<string>) {},\n    _hoistWorkspaceDeps(state, {payload: {dir}}: PayloadAction<{dir: string}>) {\n      if (state.srcPackages == null) {\n        throw new Error('\"srcPackages\" is null, need to run `init` command first');\n      }\n\n      let pkjsonStr: string;\n      const pkgjsonFile = Path.resolve(dir, 'package.json');\n      const lockFile = Path.resolve(dir, 'plink.install.lock');\n      if (fs.existsSync(lockFile)) {\n        log.warn('Plink init/sync process was interrupted last time, recover content of ' + pkgjsonFile);\n        pkjsonStr = fs.readFileSync(lockFile, 'utf8');\n        fs.unlinkSync(lockFile);\n      } else {\n        pkjsonStr = fs.readFileSync(pkgjsonFile, 'utf8');\n      }\n      const pkjson = JSON.parse(pkjsonStr) as PackageJsonInterf;\n      // for (const deps of [pkjson.dependencies, pkjson.devDependencies] as {[name: string]: string}[] ) {\n      //   Object.entries(deps);\n      // }\n      const deps = Object.entries<string>(pkjson.dependencies || {});\n\n      // const updatingDeps = {...pkjson.dependencies || {}};\n      const linkedDependencies: typeof deps = [];\n      deps.forEach(dep => {\n        if (state.srcPackages.has(dep[0])) {\n          linkedDependencies.push(dep);\n        }\n      });\n      const devDeps = Object.entries<string>(pkjson.devDependencies || {});\n      // const updatingDevDeps = {...pkjson.devDependencies || {}};\n      const linkedDevDependencies: typeof devDeps = [];\n      devDeps.forEach(dep => {\n        if (state.srcPackages.has(dep[0])) {\n          linkedDevDependencies.push(dep);\n        }\n      });\n\n      const wsKey = workspaceKey(dir);\n      const {hoisted: hoistedDeps, hoistedPeers: hoistPeerDepInfo,\n        hoistedDev: hoistedDevDeps, hoistedDevPeers: devHoistPeerDepInfo\n      } =\n        listCompDependency(\n          state.srcPackages, wsKey, pkjson.dependencies || {}, pkjson.devDependencies\n      );\n\n      const installJson: PackageJsonInterf = {\n        ...pkjson,\n        dependencies: Array.from(hoistedDeps.entries())\n        .concat(Array.from(hoistPeerDepInfo.entries()).filter(item => !item[1].missing))\n        .filter(([name]) => !isDrcpSymlink || name !== '@wfh/plink')\n        .reduce((dic, [name, info]) => {\n          dic[name] = info.by[0].ver;\n          return dic;\n        }, {} as {[key: string]: string}),\n\n        devDependencies: Array.from(hoistedDevDeps.entries())\n        .concat(Array.from(devHoistPeerDepInfo.entries()).filter(item => !item[1].missing))\n        .filter(([name]) => !isDrcpSymlink || name !== '@wfh/plink')\n        .reduce((dic, [name, info]) => {\n          dic[name] = info.by[0].ver;\n          return dic;\n        }, {} as {[key: string]: string})\n      };\n\n      // log.warn(installJson);\n      // const installedComp = scanInstalledPackage4Workspace(state.workspaces, state.srcPackages, wsKey);\n\n      const existing = state.workspaces.get(wsKey);\n\n      const hoistInfoSummary: WorkspaceState['hoistInfoSummary'] = {\n        conflictDeps: [], missingDeps: {}, missingDevDeps: {}\n      };\n\n      for (const depsInfo of [hoistedDeps, hoistPeerDepInfo]) {\n        for (const [dep, info] of depsInfo.entries()) {\n          if (info.missing) {\n            hoistInfoSummary.missingDeps[dep] = info.by[0].ver;\n          }\n          if (!info.sameVer && !info.direct) {\n            hoistInfoSummary.conflictDeps.push(dep);\n          }\n        }\n      }\n      for (const depsInfo of [hoistedDevDeps, devHoistPeerDepInfo]) {\n        for (const [dep, info] of depsInfo.entries()) {\n          if (info.missing) {\n            hoistInfoSummary.missingDevDeps[dep] = info.by[0].ver;\n          }\n          if (!info.sameVer && !info.direct) {\n            hoistInfoSummary.conflictDeps.push(dep);\n          }\n        }\n      }\n\n      const wp: WorkspaceState = {\n        id: wsKey,\n        originInstallJson: pkjson,\n        originInstallJsonStr: pkjsonStr,\n        installJson,\n        installJsonStr: JSON.stringify(installJson, null, '  '),\n        linkedDependencies,\n        linkedDevDependencies,\n        hoistInfo: hoistedDeps,\n        hoistPeerDepInfo,\n        hoistDevInfo: hoistedDevDeps,\n        hoistDevPeerDepInfo: devHoistPeerDepInfo,\n        hoistInfoSummary\n      };\n      state.lastCreatedWorkspace = wsKey;\n      state.workspaces.set(wsKey, existing ? Object.assign(existing, wp) : wp);\n    },\n    _installWorkspace(d, {payload: {workspaceKey}}: PayloadAction<{workspaceKey: string}>) {},\n    // _createSymlinksForWorkspace(d, action: PayloadAction<string>) {},\n    _associatePackageToPrj(d, {payload: {prj, pkgs}}: PayloadAction<{prj: string; pkgs: {name: string}[]}>) {\n      d.project2Packages.set(pathToProjKey(prj), pkgs.map(pkgs => pkgs.name));\n    },\n    _associatePackageToSrcDir(d,\n      {payload: {pattern, pkgs}}: PayloadAction<{pattern: string; pkgs: {name: string}[]}>) {\n      d.srcDir2Packages.set(pathToProjKey(pattern), pkgs.map(pkgs => pkgs.name));\n    },\n    _clearProjAndSrcDirPkgs(d) {\n      for (const key of d.project2Packages.keys()) {\n        d.project2Packages.set(key, []);\n      }\n      for (const key of d.srcDir2Packages.keys()) {\n        d.srcDir2Packages.set(key, []);\n      }\n    }\n  }\n});\n\nexport const actionDispatcher = stateFactory.bindActionCreators(slice);\nexport const {updateGitIgnores, onLinkedPackageAdded} = actionDispatcher;\n\n/**\n * Carefully access any property on config, since config setting probably hasn't been set yet at this momment\n */\nstateFactory.addEpic((action$, state$) => {\n  const updatedWorkspaceSet = new Set<string>();\n  const packageAddedList = new Array<string>();\n\n  const gitIgnoreFilesWaiting = new Set<string>();\n\n  if (getState().srcDir2Packages == null) {\n    // Because srcDir2Packages is newly added, to avoid existing project\n    // being broken for missing it in previously stored state file\n    actionDispatcher._change(s => s.srcDir2Packages = new Map());\n  }\n  const actionByTypes = castByActionType(slice.actions, action$);\n  return merge(\n    // To override stored state. \n    // Do not put following logic in initialState! It will be overridden by previously saved state\n\n    defer(() => {\n      process.nextTick(() => actionDispatcher._updatePlinkPackageInfo());\n      return EMPTY;\n    }),\n    getStore().pipe(map(s => s.project2Packages),\n      distinctUntilChanged(),\n      map(pks => {\n        setProjectList(getProjectList());\n        return pks;\n      }),\n      ignoreElements()\n    ),\n\n    getStore().pipe(map(s => s.srcDir2Packages),\n      distinctUntilChanged(),\n      filter(v => v != null),\n      map((linkPatternMap) => {\n        setLinkPatterns(linkPatternMap.keys());\n      })),\n\n    getStore().pipe(map(s => s.srcPackages),\n      distinctUntilChanged(),\n      scan<PackagesState['srcPackages']>((prevMap, currMap) => {\n        packageAddedList.splice(0);\n        for (const nm of currMap.keys()) {\n          if (!prevMap.has(nm)) {\n            packageAddedList.push(nm);\n          }\n        }\n        if (packageAddedList.length > 0)\n          onLinkedPackageAdded(packageAddedList);\n        return currMap;\n      })\n    ),\n    //  updateWorkspace\n    actionByTypes.updateWorkspace.pipe(\n      concatMap(({payload: {dir, isForce, useNpmCi, packageJsonFiles}}) => {\n        dir = Path.resolve(dir);\n        actionDispatcher._setCurrentWorkspace(dir);\n        maybeCopyTemplate(Path.resolve(__dirname, '../../templates/app-template.js'), Path.resolve(dir, 'app.js'));\n        checkAllWorkspaces();\n        const lockFile = Path.resolve(dir, 'plink.install.lock');\n        if (fs.existsSync(lockFile) || isForce || useNpmCi) {\n          // Chaning installJsonStr to force action _installWorkspace being dispatched later\n          const wsKey = workspaceKey(dir);\n          if (getState().workspaces.has(wsKey)) {\n            actionDispatcher._change(d => {\n              // clean to trigger install action\n              const ws = d.workspaces.get(wsKey)!;\n              ws.installJsonStr = '';\n              ws.installJson.dependencies = {};\n              ws.installJson.devDependencies = {};\n              // eslint-disable-next-line no-console\n              log.debug('force npm install in', wsKey);\n            });\n          }\n        }\n        // call initRootDirectory() and wait for it finished by observing action '_syncLinkedPackages',\n        // then call _hoistWorkspaceDeps\n        return merge(\n          packageJsonFiles != null ? scanAndSyncPackages(packageJsonFiles) :\n            defer(() => of(initRootDirectory())),\n          action$.pipe(\n            ofPayloadAction(slice.actions._syncLinkedPackages),\n            take(1),\n            map(() => actionDispatcher._hoistWorkspaceDeps({dir}))\n          )\n        );\n      })\n    ),\n    actionByTypes.scanAndSyncPackages.pipe(\n      concatMap(({payload}) => {\n        return merge(\n          scanAndSyncPackages(payload.packageJsonFiles),\n          action$.pipe(\n            ofPayloadAction(slice.actions._syncLinkedPackages),\n            take(1),\n            tap(() => {\n              const currWs = getState().currWorkspace;\n              for (const wsKey of getState().workspaces.keys()) {\n                if (wsKey !== currWs)\n                  actionDispatcher._hoistWorkspaceDeps({dir: Path.resolve(rootDir, wsKey)});\n              }\n              if (currWs != null) {\n                // Make sure \"current workspace\" is the last one being updated, so that it remains \"current\"\n                actionDispatcher._hoistWorkspaceDeps({dir: Path.resolve(rootDir, currWs)});\n              }\n            })\n          )\n        );\n      })\n    ),\n\n    // initRootDir\n    actionByTypes.initRootDir.pipe(\n      map(({payload}) => {\n        checkAllWorkspaces();\n        if (getState().workspaces.has(workspaceKey(plinkEnv.workDir))) {\n          actionDispatcher.updateWorkspace({dir: plinkEnv.workDir,\n            ...payload});\n        } else {\n          const curr = getState().currWorkspace;\n          if (curr != null) {\n            if (getState().workspaces.has(curr)) {\n              const path = Path.resolve(rootDir, curr);\n              actionDispatcher.updateWorkspace({dir: path, ...payload});\n            } else {\n              actionDispatcher._setCurrentWorkspace(null);\n            }\n          }\n        }\n      })\n    ),\n\n    actionByTypes._hoistWorkspaceDeps.pipe(\n      map(({payload}) => {\n        const wsKey = workspaceKey(payload.dir);\n        // actionDispatcher.onWorkspacePackageUpdated(wsKey);\n        deleteDuplicatedInstalledPkg(wsKey);\n        setImmediate(() => actionDispatcher.workspaceStateUpdated(wsKey));\n      })\n    ),\n\n    actionByTypes.updateDir.pipe(\n      tap(() => actionDispatcher._updatePlinkPackageInfo()),\n      concatMap(() => scanAndSyncPackages()),\n      tap(() => {\n        for (const key of getState().workspaces.keys()) {\n          updateInstalledPackageForWorkspace(key);\n        }\n      })\n    ),\n    // Handle newly added workspace\n    getStore().pipe(map(s => s.workspaces),\n      distinctUntilChanged(),\n      map(ws => {\n        const keys = Array.from(ws.keys());\n        return keys;\n      }),\n      scan<string[]>((prev, curr) => {\n        if (prev.length < curr.length) {\n          const newAdded = _.difference(curr, prev);\n          // eslint-disable-next-line no-console\n          log.info('New workspace: ', newAdded);\n          for (const ws of newAdded) {\n            actionDispatcher._installWorkspace({workspaceKey: ws});\n          }\n        }\n        return curr;\n      })\n    ),\n    // observe all existing Workspaces for dependency hoisting result \n    ...Array.from(getState().workspaces.keys()).map(key => {\n      return getStore().pipe(\n        // filter(s => s.workspaces.has(key)),\n        takeWhile(s => s.workspaces.has(key)),\n        map(s => s.workspaces.get(key)!),\n        distinctUntilChanged((s1, s2) => s1.installJson === s2.installJson),\n        scan<WorkspaceState>((old, newWs) => {\n          /* eslint-disable max-len */\n          const newDeps = Object.entries(newWs.installJson.dependencies || [])\n            .concat(Object.entries(newWs.installJson.devDependencies || []))\n            .map(entry => entry.join(': '));\n          if (newDeps.length === 0) {\n            // forcing install workspace, therefore dependencies is cleared at this moment\n            return newWs;\n          }\n          const oldDeps = Object.entries(old.installJson.dependencies || [])\n            .concat(Object.entries(old.installJson.devDependencies || []))\n            .map(entry => entry.join(': '));\n\n          if (newDeps.length !== oldDeps.length) {\n            log.debug('newDeps.length', newDeps.length, ' !== oldDeps.length', oldDeps.length);\n            actionDispatcher._installWorkspace({workspaceKey: key});\n            return newWs;\n          }\n          newDeps.sort();\n          oldDeps.sort();\n          for (let i = 0, l = newDeps.length; i < l; i++) {\n            if (newDeps[i] !== oldDeps[i]) {\n              actionDispatcher._installWorkspace({workspaceKey: key});\n              break;\n            }\n          }\n          return newWs;\n        })\n      );\n    }),\n    // _workspaceBatchChanged will trigger creating symlinks, but meanwhile _installWorkspace will delete symlinks\n    // I don't want to seem them running simultaneously.\n    merge(actionByTypes._workspaceBatchChanged, actionByTypes._installWorkspace).pipe(\n      concatMap(action => {\n        if (isActionOfCreator(action, slice.actions._installWorkspace)) {\n          const wsKey = action.payload.workspaceKey;\n          return getStore().pipe(\n            map(s => s.workspaces.get(wsKey)),\n            distinctUntilChanged(),\n            filter(ws => ws != null),\n            take(1),\n            concatMap(ws => {\n              return installWorkspace(ws!, getState().npmInstallOpt);\n            }),\n            map(() => {\n              updateInstalledPackageForWorkspace(wsKey);\n            }),\n            ignoreElements()\n          );\n        } else if (isActionOfCreator(action, slice.actions._workspaceBatchChanged)) {\n          const wsKeys = action.payload;\n          return merge(...wsKeys.map(_createSymlinksForWorkspace)).pipe(\n            finalize(() => actionDispatcher.workspaceChanged(wsKeys))\n          );\n        } else {\n          return EMPTY;\n        }\n      })\n    ),\n    // something is newly installed or changed in workspace node_modules\n    actionByTypes.workspaceStateUpdated.pipe(\n      map(action => updatedWorkspaceSet.add(action.payload)),\n      debounceTime(800),\n      tap(() => {\n        actionDispatcher._workspaceBatchChanged(Array.from(updatedWorkspaceSet.values()));\n        updatedWorkspaceSet.clear();\n      }),\n      map(() => {\n        actionDispatcher.packagesUpdated();\n      })\n    ),\n    actionByTypes.updateGitIgnores.pipe(\n      tap(action => {\n        let rel = action.payload.file;\n        if (Path.isAbsolute(rel)) {\n          rel = Path.relative(rootDir, rel).replace(/\\\\/g, '/');\n        }\n        gitIgnoreFilesWaiting.add(rel);\n      }),\n      debounceTime(500),\n      map(() => {\n        const changedFiles = [...gitIgnoreFilesWaiting.values()];\n        gitIgnoreFilesWaiting.clear();\n        return changedFiles;\n      }),\n      concatMap((changedFiles) => {\n        return merge(...changedFiles.map(async rel => {\n          const file = Path.resolve(rootDir, rel);\n          const lines = getState().gitIgnores[file];\n          if (fs.existsSync(file)) {\n            const data = await fs.promises.readFile(file, 'utf8');\n            const existingLines = data.split(/\\n\\r?/).map(line => line.trim());\n            const newLines = _.difference(lines, existingLines);\n            if (newLines.length === 0)\n              return;\n            fs.writeFile(file, data + EOL + newLines.join(EOL), () => {\n              // eslint-disable-next-line no-console\n              log.info('Modify', file);\n            });\n          }\n        }));\n      }),\n      ignoreElements()\n    ),\n    action$.pipe(ofPayloadAction(slice.actions.addProject, slice.actions.deleteProject),\n      concatMap(() => scanAndSyncPackages())\n    ),\n    action$.pipe(ofPayloadAction(slice.actions.addSrcDirs, slice.actions.deleteSrcDirs),\n      concatMap(() => scanAndSyncPackages())\n    )\n  ).pipe(\n    ignoreElements(),\n    catchError(err => {\n      log.error(err.stack ? err.stack : err);\n      return throwError(err);\n    })\n  );\n});\n\nexport function getState() {\n  return stateFactory.sliceState(slice);\n}\n\nexport function getStore(): Observable<PackagesState> {\n  return stateFactory.sliceStore(slice);\n}\n\nexport function pathToProjKey(path: string) {\n  const relPath = Path.relative(rootDir, path);\n  return relPath.startsWith('..') ? Path.resolve(path) : relPath;\n}\nexport function projKeyToPath(key: string) {\n  return Path.isAbsolute(key) ? key : Path.resolve(rootDir, key);\n}\n\nexport function workspaceKey(path: string) {\n  let rel = Path.relative(rootDir, Path.resolve(path));\n  if (Path.sep === '\\\\')\n    rel = rel.replace(/\\\\/g, '/');\n  return rel;\n}\n\nexport function workspaceDir(key: string) {\n  return Path.resolve(rootDir, key);\n}\n\nexport function* getPackagesOfProjects(projects: string[]) {\n  for (const prj of projects) {\n    const pkgNames = getState().project2Packages.get(pathToProjKey(prj));\n    if (pkgNames) {\n      for (const pkgName of pkgNames) {\n        const pk = getState().srcPackages.get(pkgName);\n        if (pk)\n          yield pk;\n      }\n    }\n  }\n}\n\nexport function getProjectList() {\n  return Array.from(getState().project2Packages.keys()).map(pj => Path.resolve(rootDir, pj));\n}\n\nexport function isCwdWorkspace() {\n  const wsKey = workspaceKey(plinkEnv.workDir);\n  const ws = getState().workspaces.get(wsKey);\n  if (ws == null)\n    return false;\n  return true;\n}\n\n/**\n * This method is meant to trigger editor-helper to update tsconfig files, so\n * editor-helper must be import at first\n * @param dir \n */\nexport function switchCurrentWorkspace(dir: string) {\n  actionDispatcher._setCurrentWorkspace(dir);\n  actionDispatcher._workspaceBatchChanged([workspaceKey(dir)]);\n}\n\nfunction updateInstalledPackageForWorkspace(wsKey: string) {\n  const pkgEntry = scanInstalledPackage4Workspace(getState(), wsKey);\n\n  const installed = new Map((function*(): Generator<[string, PackageInfo]> {\n    for (const pk of pkgEntry) {\n      yield [pk.name, pk];\n    }\n  })());\n  actionDispatcher._change(d => d.workspaces.get(wsKey)!.installedComponents = installed);\n  actionDispatcher.workspaceStateUpdated(wsKey);\n}\n\n/**\n * Delete workspace state if its directory does not exist\n */\nfunction checkAllWorkspaces() {\n  for (const key of getState().workspaces.keys()) {\n    const dir = Path.resolve(rootDir, key);\n    if (!fs.existsSync(dir)) {\n      // eslint-disable-next-line no-console\n      log.info(`Workspace ${key} does not exist anymore.`);\n      actionDispatcher._change(d => d.workspaces.delete(key));\n    }\n  }\n}\n\nasync function initRootDirectory() {\n  log.debug('initRootDirectory');\n  const rootPath = rootDir;\n  fsext.mkdirpSync(distDir);\n  // maybeCopyTemplate(Path.resolve(__dirname, '../../templates/config.local-template.yaml'), Path.join(distDir, 'config.local.yaml'));\n  maybeCopyTemplate(Path.resolve(__dirname, '../../templates/log4js.js'), rootPath + '/log4js.js');\n  maybeCopyTemplate(Path.resolve(__dirname, '../../templates',\n      'gitignore.txt'), rootDir + '/.gitignore');\n  await cleanInvalidSymlinks();\n  await scanAndSyncPackages();\n  // await _deleteUselessSymlink(Path.resolve(rootDir, 'node_modules'), new Set<string>());\n}\n\nasync function installWorkspace(ws: WorkspaceState, npmOpt: NpmOptions) {\n  const dir = Path.resolve(rootDir, ws.id);\n  try {\n    await installInDir(dir, npmOpt, ws.originInstallJsonStr, ws.installJsonStr);\n  } catch (ex) {\n    actionDispatcher._change(d => {\n      const wsd = d.workspaces.get(ws.id)!;\n      wsd.installJsonStr = '';\n      wsd.installJson.dependencies = {};\n      wsd.installJson.devDependencies = {};\n      const lockFile = Path.resolve(dir, 'package-lock.json');\n      if (fs.existsSync(lockFile)) {\n        // eslint-disable-next-line no-console\n        log.info(`Problematic ${lockFile} is deleted, please try again`);\n        fs.unlinkSync(lockFile);\n      }\n    });\n    throw ex;\n  }\n}\n\nexport async function installInDir(dir: string, npmOpt: NpmOptions, originPkgJsonStr: string, toInstallPkgJsonStr: string) {\n  // eslint-disable-next-line no-console\n  log.info('Install dependencies in ' + dir);\n  try {\n    await copyNpmrcToWorkspace(dir);\n  } catch (e) {\n    console.error(e);\n  }\n  const symlinksInModuleDir = [] as {content: string; link: string}[];\n\n  const target = Path.resolve(dir, 'node_modules');\n  if (!fs.existsSync(target)) {\n    fsext.mkdirpSync(target);\n  }\n\n  // NPM v7.20.x can not install dependencies if there is any file with name prefix '_' exists in directory node_modules\n  const legacyPkgSettingFile = Path.resolve(dir, 'node_modules', '_package-settings.d.ts');\n  if (fs.existsSync(legacyPkgSettingFile)) {\n    fs.unlinkSync(legacyPkgSettingFile);\n  }\n\n  // 1. Temoprarily remove all symlinks under `node_modules/` and `node_modules/@*/`\n  // backup them for late recovery\n  await listModuleSymlinks(target, link => {\n    log.debug('Remove symlink', link);\n    const linkContent = fs.readlinkSync(link);\n    symlinksInModuleDir.push({content: linkContent, link});\n    return unlinkAsync(link);\n  });\n  // 2. Run `npm install`\n  const installJsonFile = Path.resolve(dir, 'package.json');\n  // eslint-disable-next-line no-console\n  log.info('write', installJsonFile);\n  fs.writeFileSync(installJsonFile, toInstallPkgJsonStr, 'utf8');\n  // save a lock file to indicate in-process of installing, once installation is completed without interruption, delete it.\n  // check if there is existing lock file, meaning a previous installation is interrupted.\n  const lockFile = Path.resolve(dir, 'plink.install.lock');\n  void fs.promises.writeFile(lockFile, originPkgJsonStr);\n\n  await new Promise(resolve => setImmediate(resolve));\n  // await new Promise(resolve => setTimeout(resolve, 5000));\n  try {\n    const env = {\n      ...process.env,\n      NODE_ENV: 'development'\n    } as NodeJS.ProcessEnv;\n\n    if (npmOpt.cache)\n      env.npm_config_cache = npmOpt.cache;\n    if (npmOpt.offline)\n      env.npm_config_offline = 'true';\n\n    const exeName = npmOpt.useYarn ? 'yarn' : 'npm';\n    const cmdArgs = [npmOpt.useYarn !== true && npmOpt.useNpmCi ? 'ci' : 'install'];\n\n    await exe(exeName, ...cmdArgs, {cwd: dir, env}).done;\n    await new Promise(resolve => setImmediate(resolve));\n    if (npmOpt.useYarn !== true && npmOpt.prune) {\n      await exe(exeName, 'prune', {cwd: dir, env}).done;\n      // \"npm ddp\" right after \"npm install\" will cause devDependencies being removed somehow, don't known\n      // why, I have to add a setImmediate() between them to workaround\n      await new Promise(resolve => setImmediate(resolve));\n    }\n    if (npmOpt.dedupe) {\n      try {\n        await exe(exeName, 'dedupe',\n          ...[npmOpt.useYarn === true ? '--immutable' : ''],\n          {cwd: dir, env}).promise;\n      } catch (ddpErr) {\n        log.warn('Failed to dedupe dependencies, but it is OK', ddpErr);\n      }\n    }\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    log.error('Failed to install dependencies', (e as Error).stack);\n    throw e;\n  } finally {\n    // eslint-disable-next-line no-console\n    log.info('Recover ' + installJsonFile);\n    // 3. Recover package.json and symlinks deleted in Step.1.\n    fs.writeFileSync(installJsonFile, originPkgJsonStr, 'utf8');\n    await recoverSymlinks();\n    if (fs.existsSync(lockFile))\n      await fs.promises.unlink(lockFile);\n  }\n\n  function recoverSymlinks() {\n    return Promise.all(symlinksInModuleDir.map(({content, link}) => {\n      if (!fs.existsSync(link)) {\n        fsext.mkdirpSync(Path.dirname(link));\n        return fs.promises.symlink(content, link, isWin32 ? 'junction' : 'dir');\n      }\n      return Promise.resolve();\n    }));\n  }\n}\n\nasync function copyNpmrcToWorkspace(workspaceDir: string) {\n  const target = Path.resolve(workspaceDir, '.npmrc');\n  if (fs.existsSync(target))\n    return;\n  const isChina = await getStore().pipe(\n    map(s => s.isInChina), distinctUntilChanged(),\n      filter(cn => cn != null),\n      take(1)\n    ).toPromise();\n\n  if (isChina) {\n    // eslint-disable-next-line no-console\n    log.info('create .npmrc to', target);\n    fs.copyFileSync(Path.resolve(__dirname, '../../templates/npmrc-for-cn.txt'), target);\n  }\n}\n\nasync function scanAndSyncPackages(includePackageJsonFiles?: string[]) {\n  const projPkgMap: Map<string, PackageInfo[]> = new Map();\n  const srcPkgMap: Map<string, PackageInfo[]> = new Map();\n  let pkgList: PackageInfo[];\n\n  if (includePackageJsonFiles) {\n    const prjKeys = Array.from(getState().project2Packages.keys());\n    const prjDirs = prjKeys.map(prjKey => projKeyToPath(prjKey));\n    pkgList = includePackageJsonFiles.map(jsonFile => {\n      const info = createPackageInfo(jsonFile, false);\n      const prjIdx = prjDirs.findIndex(dir => info.realPath.startsWith(dir + Path.sep));\n      if (prjIdx >= 0) {\n        const prjPackageNames = getState().project2Packages.get(prjKeys[prjIdx])!;\n        if (!prjPackageNames.includes(info.name)) {\n          actionDispatcher._associatePackageToPrj({\n            prj: prjKeys[prjIdx],\n            pkgs: [...prjPackageNames.map(name => ({name})), info]\n          });\n        }\n      } else {\n        const keys = [...getState().srcDir2Packages.keys()];\n        const linkedSrcDirs = keys.map(key => projKeyToPath(key));\n        const idx = linkedSrcDirs.findIndex(dir => info.realPath === dir ||  info.realPath.startsWith(dir + Path.sep));\n        if (idx >= 0) {\n          const pkgs = getState().srcDir2Packages.get(keys[idx])!;\n          if (!pkgs.includes(info.name)) {\n            actionDispatcher._associatePackageToSrcDir({\n              pattern: keys[idx],\n              pkgs: [...pkgs.map(name => ({name})), info]\n            });\n          }\n        } else {\n          throw new Error(`${info.realPath} is not under any known Project directorys: ${prjDirs.concat(linkedSrcDirs).join(', ')}`);\n        }\n      }\n      return info;\n    });\n    actionDispatcher._syncLinkedPackages([pkgList, 'update']);\n  } else {\n    const rm = (await import('../recipe-manager'));\n    pkgList = [];\n    actionDispatcher._clearProjAndSrcDirPkgs();\n    await rm.scanPackages().pipe(\n      tap(([proj, jsonFile, srcDir]) => {\n        if (proj && !projPkgMap.has(proj))\n          projPkgMap.set(proj, []);\n        if (proj == null && srcDir && !srcPkgMap.has(srcDir))\n          srcPkgMap.set(srcDir, []);\n\n        log.debug('scan package.json', jsonFile);\n        const info = createPackageInfo(jsonFile, false);\n        if (info.json.dr || info.json.plink) {\n          pkgList.push(info);\n          if (proj)\n            projPkgMap.get(proj)!.push(info);\n          else if (srcDir)\n            srcPkgMap.get(srcDir)!.push(info);\n          else\n            log.error(`Orphan ${jsonFile}`);\n        } else {\n          log.debug(`Package of ${jsonFile} is skipped (due to no \"dr\" or \"plink\" property)`, info.json);\n        }\n      })\n    ).toPromise();\n    // log.warn(projPkgMap, srcPkgMap);\n    for (const [prj, pkgs] of projPkgMap.entries()) {\n      actionDispatcher._associatePackageToPrj({prj, pkgs});\n    }\n    for (const [srcDir, pkgs] of srcPkgMap.entries()) {\n      actionDispatcher._associatePackageToSrcDir({pattern: srcDir, pkgs});\n    }\n\n    actionDispatcher._syncLinkedPackages([pkgList, 'clean']);\n  }\n}\n\nfunction _createSymlinksForWorkspace(wsKey: string) {\n  if (symlinkDirName !== '.links' && fs.existsSync(Path.resolve(rootDir, wsKey, '.links'))) {\n    fsext.remove(Path.resolve(rootDir, wsKey, '.links'))\n    .catch(ex => log.info(ex));\n  }\n  const symlinkDir = Path.resolve(rootDir, wsKey, symlinkDirName || 'node_modules');\n  fsext.mkdirpSync(symlinkDir);\n  const ws = getState().workspaces.get(wsKey)!;\n\n  const pkgNames = ws.linkedDependencies.map(item => item[0])\n  .concat(ws.linkedDevDependencies.map(item => item[0]));\n\n  const pkgNameSet = new Set(pkgNames);\n\n  if (symlinkDirName !== 'node_modules') {\n    if (ws.installedComponents) {\n      for (const pname of ws.installedComponents.keys())\n        pkgNameSet.add(pname);\n    }\n    actionDispatcher.updateGitIgnores({\n      file: Path.resolve(rootDir, '.gitignore'),\n      lines: [Path.relative(rootDir, symlinkDir).replace(/\\\\/g, '/')]});\n  }\n\n  let symlinksToCreate = from(Array.from(pkgNameSet.values())) // Important, do not use pkgNameSet iterable, it will be changed before subscription\n  .pipe(\n    map(name => {\n      const pkg = getState().srcPackages.get(name) || ws.installedComponents!.get(name)!;\n      if (pkg == null) {\n        log.warn(`Missing package information of ${name}, please run \"Plink sync ${wsKey}\" again to sync Plink state`);\n      }\n      return pkg;\n    }),\n    filter(pkg => pkg != null)\n  );\n\n  if (rootDir === workspaceDir(wsKey)) {\n    const plinkPkg = getState().linkedDrcp || getState().installedDrcp;\n    if (plinkPkg) {\n      pkgNameSet.add(plinkPkg.name);\n    }\n  }\n\n  return merge(\n    symlinksToCreate.pipe(\n      symbolicLinkPackages(symlinkDir)\n    ),\n    _deleteUselessSymlink(symlinkDir, pkgNameSet)\n  );\n}\n\nasync function _deleteUselessSymlink(checkDir: string, excludeSet: Set<string>) {\n  const dones: Promise<void>[] = [];\n  const done1 = listModuleSymlinks(checkDir, link => {\n\n    const pkgName = Path.relative(checkDir, link).replace(/\\\\/g, '/');\n    if (!excludeSet.has(pkgName)) {\n      // eslint-disable-next-line no-console\n      log.info(`Delete extraneous symlink: ${link}`);\n      dones.push(fs.promises.unlink(link));\n    }\n  });\n  await done1;\n  await Promise.all(dones);\n}\n\n/**\n * \n * @param pkJsonFile package.json file path\n * @param isInstalled \n * @param symLink symlink path of package\n * @param realPath real path of package\n */\nexport function createPackageInfo(pkJsonFile: string, isInstalled = false): PackageInfo {\n  const json = JSON.parse(fs.readFileSync(pkJsonFile, 'utf8')) as PackageInfo['json'];\n  return createPackageInfoWithJson(pkJsonFile, json, isInstalled);\n}\n/**\n * List those installed packages which are referenced by workspace package.json file,\n * those packages must have \"dr\" property in package.json \n * @param workspaceKey \n */\nfunction* scanInstalledPackage4Workspace(state: PackagesState, workspaceKey: string) {\n  const originInstallJson = state.workspaces.get(workspaceKey)!.originInstallJson;\n  // const depJson = process.env.NODE_ENV === 'production' ? [originInstallJson.dependencies] :\n  //   [originInstallJson.dependencies, originInstallJson.devDependencies];\n  for (const deps of [originInstallJson.dependencies, originInstallJson.devDependencies]) {\n    if (deps == null)\n      continue;\n    for (const dep of Object.keys(deps)) {\n      if (!state.srcPackages.has(dep) && dep !== '@wfh/plink') {\n        const pkjsonFile = Path.resolve(rootDir, workspaceKey, 'node_modules', dep, 'package.json');\n        if (fs.existsSync(pkjsonFile)) {\n          const pk = createPackageInfo(\n            Path.resolve(rootDir, workspaceKey, 'node_modules', dep, 'package.json'), true\n          );\n          if (pk.json.dr || pk.json.plink) {\n            yield pk;\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * \n * @param pkJsonFile package.json file path\n * @param isInstalled \n * @param symLink symlink path of package\n * @param realPath real path of package\n */\nfunction createPackageInfoWithJson(pkJsonFile: string, json: PackageInfo['json'], isInstalled = false): PackageInfo {\n  const m = moduleNameReg.exec(json.name);\n  const pkInfo: PackageInfo = {\n    shortName: m![2],\n    name: json.name,\n    scope: m![1],\n    path: Path.join(symlinkDirName, json.name),\n    json,\n    realPath: fs.realpathSync(Path.dirname(pkJsonFile)),\n    isInstalled\n  };\n  return pkInfo;\n}\n\nfunction cp(from: string, to: string) {\n  if (from.startsWith('-')) {\n    from = arguments[1];\n    to = arguments[2];\n  }\n  fsext.copySync(from, to);\n  // shell.cp(...arguments);\n  if (/[/\\\\]$/.test(to))\n    to = Path.basename(from); // to is a folder\n  else\n    to = Path.relative(plinkEnv.workDir, to);\n  // eslint-disable-next-line no-console\n  log.info('Copy to %s', chalk.cyan(to));\n}\n\n/**\n * \n * @param from absolute path\n * @param {string} to relative to rootPath \n */\nfunction maybeCopyTemplate(from: string, to: string) {\n  if (!fs.existsSync(Path.resolve(rootDir, to)))\n    cp(Path.resolve(__dirname, from), to);\n}\n\nfunction deleteDuplicatedInstalledPkg(workspaceKey: string) {\n  const wsState = getState().workspaces.get(workspaceKey)!;\n  const doNothing = () => {};\n  wsState.linkedDependencies.concat(wsState.linkedDevDependencies).map(([pkgName]) => {\n    const dir = Path.resolve(rootDir, workspaceKey, 'node_modules', pkgName);\n    return fs.promises.lstat(dir)\n    .then((stat) => {\n      if (!stat.isSymbolicLink()) {\n        // eslint-disable-next-line no-console\n        log.info(`Previous installed ${Path.relative(rootDir, dir)} is deleted, due to linked package ${pkgName}`);\n        return fs.promises.unlink(dir);\n      }\n    })\n    .catch(doNothing);\n  });\n}\n\n"]}