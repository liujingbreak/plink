{"version":3,"file":"assets-url.js","sourceRoot":"","sources":["../../ts/share/assets-url.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA2B;AAsB3B,SAAgB,UAAU,CAAC,YAAiB;IAE1C,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;IAEnC,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC;IAEzC,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;AACrC,CAAC;AAPD,gCAOC;AAED,SAAgB,YAAY,CAAmB,WAAmB,EAAE,IAAY,EAAE,MAAc;IAC9F,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;QAC1B,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACpB,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;KAChC;IACD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,+BAA+B,EAAE,UAAU,CAAC,CAAC;IACjE,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,aAAa,EACzE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;AAClG,CAAC;AARD,oCAQC;AAED,qEAAqE;AACrE,SAAgB,SAAS,CAAmB,WAA0B,EAAE,IAAa;IACnF,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACpB,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;KAChC;IACD,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,aAAa,EAAE,IAAI,EAC/E,WAAW,EAAE,IAAK,CAAC,CAAC;AACxB,CAAC;AAPD,8BAOC;AACD;;;;;;;;;GASG;AACH,SAAgB,SAAS,CAAC,eAAuB,EAAE,aAAuC,EACxF,SAAwB,EAAE,WAA0B,EAAE,IAAY;IAClE,IAAI,CAAC,GAAG,6FAA6F,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjH,IAAI,CAAC,EAAE;QACL,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,sCAAsC,IAAI,GAAG,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,CAAC,CAAC,CAAC;YACN,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACb;IACD,6BAA6B;IAC7B,oEAAoE;IACpE,IAAI;IACJ,IAAI,QAAgB,CAAC;IACrB,IAAI,WAAW,EAAE;QACf,IAAI,UAAU,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,UAAU,GAAG,eAAe,CAAC,IAAI,CAAC,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAA,2BAA2B;SAC9E;aAAM;YACL,CAAC,GAAG,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7C,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;SACrC;QACD,QAAQ,GAAG,OAAO,CAAC,eAAe,EAAE,SAAS,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;KACxE;SAAM;QACL,QAAQ,GAAG,OAAO,CAAC,eAAe,EAAE,SAAS,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;KAC5D;IAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;QAC9D,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC;IAC5B,OAAO,QAAQ,CAAC;AAClB,CAAC;AA/BD,8BA+BC;AAED,SAAS,OAAO,CAAC,GAAG,OAAiB;IACnC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;QACzB,gBAAgB;QAChB,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC;YACzD,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IACH,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC9C,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC;YAC/C,SAAS;QACX,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG;YAC/D,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;YAC1C,MAAM,IAAI,GAAG,CAAC;QAChB,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;KACtB;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAgB,SAAS,CAAmB,iBAAyB,EAAE,IAAa;IAClF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;QAClB,2BAA2B;QAC7B,MAAM,IAAI,KAAK,CAAC,wGAAwG,iBAAiB,OAAO,IAAI,aAAa,CAAE,CAAC;KACnK;IACD,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,IAAI,GAAG,iBAAiB,CAAC;QACzB,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC;KACtC;IACD,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;AAC7E,CAAC;AAVD,8BAUC","sourcesContent":["import * as Url from 'url';\n\ninterface ConfigSetting {\n  staticAssetsURL: string;\n  outputPathMap: {[name: string]: string};\n}\n\nexport interface PackageApi {\n  packageName: string;\n  config(): ConfigSetting;\n  isDefaultLocale(): boolean;\n  getBuildLocale(): string;\n  isNode(): boolean;\n  _contextPath(packageName?: string): string;\n}\n\nexport interface ExtendedApi {\n  assetsUrl: typeof assetsUrl;\n  entryPageUrl: typeof entryPageUrl;\n  serverUrl: typeof serverUrl;\n}\n\nexport function patchToApi(apiPrototype: any) {\n  \n  apiPrototype.assetsUrl = assetsUrl;\n\n  apiPrototype.entryPageUrl = entryPageUrl;\n\n  apiPrototype.serverUrl = serverUrl;\n}\n\nexport function entryPageUrl(this: PackageApi, packageName: string, path: string, locale: string): string {\n  if (arguments.length === 1) {\n    path = arguments[0];\n    packageName = this.packageName;\n  }\n  path = path.replace(/([^./\\\\]+\\.)[^?./\\\\]+(\\?.*)?$/, '$1html$2');\n  return publicUrl(this.config().staticAssetsURL, this.config().outputPathMap,\n    locale ? locale : (this.isDefaultLocale() ? null : this.getBuildLocale()), packageName, path);\n}\n\n// export function assetsUrl(this: PackageApi, path: string): string;\nexport function assetsUrl(this: PackageApi, packageName: string | null, path?: string): string {\n  if (path === undefined) {\n    path = arguments[0];\n    packageName = this.packageName;\n  }\n  return publicUrl(this.config().staticAssetsURL, this.config().outputPathMap, null,\n    packageName, path!);\n}\n/**\n * Helper for dealing with url like \"npm://<package>/<path>\", \"assets://<package>/<path>\"\n * @param {string} staticAssetsURL, like Webpack's output.publicPath\n * @param {object} outputPathMap\n * @param {string} useLocale the final URL will includes locale path (for entry page URL) \"zh\" or \"us\",\n * use `null` or \"\" denotes default locale\n * @param {string} packageName if null, the package name will be extracted from url\n * @param {string} path\n * @return {string}\n */\nexport function publicUrl(staticAssetsURL: string, outputPathMap: {[name: string]: string},\n  useLocale: string | null, packageName: string | null, path: string) {\n  var m = /^(assets:\\/\\/|~|npm:\\/\\/|page(?:-([^:]+))?:\\/\\/)((?:@[^/]+\\/)?[^/@][^/]*)?(?:\\/([^@].*)?)?$/.exec(path);\n  if (m) {\n    if (m[1] && !m[3]) {\n      throw new Error(`Can not resolve package name from \"${path}\"`);\n    }\n    if (m[3])\n      packageName = m[3];\n    path = m[4];\n  }\n  // if (packageName == null) {\n  //   throw new Error(`Can not resolve package name from \"${path}\"`);\n  // }\n  let finalUrl: string;\n  if (packageName) {\n    let outputPath = outputPathMap[packageName];\n    if (outputPath != null) {\n      outputPath = /^\\/*(.*?)\\/*$/.exec(outputPath)![1];// _.trim(outputPath, '/');\n    } else {\n      m = /(?:@([^/]+)\\/)?(\\S+)/.exec(packageName);\n      outputPath = m ? m[2] : packageName;\n    }\n    finalUrl = joinUrl(staticAssetsURL, useLocale || '', outputPath, path);\n  } else {\n    finalUrl = joinUrl(staticAssetsURL, useLocale || '', path);\n  }\n\n  if (!/^https?:\\/\\//.test(finalUrl) && finalUrl.charAt(0) !== '/')\n    finalUrl = '/' + finalUrl;\n  return finalUrl;\n}\n\nfunction joinUrl(...pathEls: string[]) {\n  pathEls = pathEls.map(el => {\n    // Trim last '/'\n    if (el && el.charAt(el.length - 1) === '/' && el.length > 1)\n      return el.substring(0, el.length - 1);\n    return el;\n  });\n  var joined = pathEls[0];\n  for (var i = 1, l = pathEls.length; i < l; i++) {\n    if (pathEls[i] == null || pathEls[i].length === 0)\n      continue;\n    if (joined.length > 0 && joined.charAt(joined.length - 1) !== '/' &&\n      pathEls[i] && pathEls[i].charAt(0) !== '/')\n      joined += '/';\n    joined += pathEls[i];\n  }\n  return joined;\n}\n\nexport function serverUrl(this: PackageApi, packageNameOrPath: string, path?: string): string {\n  if (!this.isNode()) {\n    // tslint:disable-next-line\n\t\tthrow new Error(`api.serverUrl() only available at server side during compile-time and runtime, use \"__api.serverUrl('${packageNameOrPath}', '${path}')\" instead` );\n  }\n  if (path == null) {\n    path = packageNameOrPath;\n    packageNameOrPath = this.packageName;\n  }\n  return Url.resolve('/', this._contextPath(packageNameOrPath) + '/' + path);\n}\n"]}