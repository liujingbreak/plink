{"version":3,"file":"transitive-dep-hoister.js","sourceRoot":"","sources":["../ts/transitive-dep-hoister.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable  max-len */\n// import {mkdirpSync} from 'fs-extra';\nimport * as _ from 'lodash';\nimport {getLogger} from 'log4js';\nimport semver from 'semver';\nimport {SimpleLinkedList, SimpleLinkedListNode} from './utils/misc';\n\nconst log = getLogger('plink.transitive-dep-hoister');\n\nexport interface PackageJsonInterf {\n  version: string;\n  name: string;\n  devDependencies?: {[nm: string]: string};\n  peerDependencies?: {[nm: string]: string};\n  dependencies?: {[nm: string]: string};\n}\n/**\n * \n * @param pkJsonFiles json map of linked package\n * @param workspace \n * @param workspaceDeps \n * @param workspaceDevDeps \n */\nexport function listCompDependency(\n  pkJsonFiles: Map<string, {json: PackageJsonInterf}>,\n  workspace: string,\n  workspaceDeps: {[name: string]: string},\n  workspaceDevDeps?: {[name: string]: string}\n) {\n  const jsons = Array.from(pkJsonFiles.values()).map(item => item.json);\n  const allDeps = {...workspaceDeps, ...(workspaceDevDeps ? workspaceDevDeps : {})};\n  let scanner = new TransitiveDepScanner(allDeps, workspace, pkJsonFiles);\n  scanner.scanFor(jsons.filter(item => _.has(workspaceDeps, item.name)));\n  const [HoistedDepInfo, HoistedPeerDepInfo] = scanner.hoistDeps();\n  const devDeps = scanner.devDeps;\n  // let hoistedDev: Map<string, DependentInfo>;\n  // let hoistedDevPeers: Map<string, DependentInfo>;\n\n  scanner = new TransitiveDepScanner(allDeps, workspace, pkJsonFiles);\n  scanner.initExistingDeps(devDeps);\n  if (workspaceDevDeps)\n    scanner.scanFor(jsons.filter(item => _.has(workspaceDevDeps, item.name)), true);\n  const [hoistedDev, hoistedDevPeers] = scanner.hoistDeps(HoistedDepInfo);\n  // TODO: devDependencies might contains transitive dependency which duplicates to \"dependencies\"\n  return {\n    hoisted: HoistedDepInfo,\n    hoistedPeers: HoistedPeerDepInfo,\n    hoistedDev,\n    hoistedDevPeers\n  };\n}\n\ninterface DepInfo {\n  ver: string;\n  verNum?: string;\n  pre: string;\n  by: string;\n}\n\nexport interface DependentInfo {\n  /** Is all dependents on same version */\n  sameVer: boolean;\n  /** Is a direct dependency of space package.json */\n  direct: boolean;\n  /** In case a transitive peer dependency, it should not\n   * be installed automatically, unless it is also a direct dependency of current space,\n   * setting to `true` to remind user to install manually \n   */\n  missing: boolean;\n  /** Same trasitive dependency in both normal and peer dependencies list\n   * actual version should be the one selected from normal transitive dependency\n   */\n  duplicatePeer: boolean;\n  by: Array<{\n    /** dependency version (not dependent's) */\n    ver: string;\n    /** dependent name */\n    name: string;\n  }>;\n}\n\n\n\nconst versionReg = /^(\\D*)(\\d.*?)(?:\\.tgz)?$/;\n\nexport class TransitiveDepScanner {\n  verbosMessage: string | undefined;\n  devDeps: Map<string, DepInfo[]> = new Map();\n  /** key is dependency module name */\n  private directDeps: Map<string, SimpleLinkedListNode<[string, DepInfo]>> = new Map();\n  private srcDeps: Map<string, DepInfo[]> = new Map();\n\n  private peerDeps: Map<string, DepInfo[]> = new Map();\n  private directDepsList: SimpleLinkedList<[string, DepInfo]> = new SimpleLinkedList<[string, DepInfo]>();\n\n  /**\n   * \n   * @param workspaceDeps should include \"dependencies\" and \"devDependencies\"\n   * @param workspaceName \n   * @param excludeLinkedDeps \n   */\n  constructor(workspaceDeps: {[name: string]: string}, workspaceName: string, private excludeLinkedDeps: Map<string, any> | Set<string>) {\n    for (const [name, version] of Object.entries(workspaceDeps)) {\n      if (this.excludeLinkedDeps.has(name))\n        continue;\n      const m = versionReg.exec(version);\n      const currNode = this.directDepsList.push([\n        name, {\n          ver: version === '*' ? '' : version,\n          verNum: m ? m[2] : undefined,\n          pre: m ? m[1] : '',\n          by: `(${workspaceName || '<root directory>'})`\n        }\n      ]);\n      this.directDeps.set(name, currNode);\n    }\n  }\n\n  scanFor(pkJsons: Iterable<PackageJsonInterf>, combineDevDeps = false) {\n    for (const json of pkJsons) {\n      let deps = json.dependencies;\n      if (deps) {\n        for (const name of Object.keys(deps)) {\n          const version = deps[name];\n          this._trackSrcDependency(name, version, json.name);\n        }\n      }\n      deps = json.devDependencies;\n      if (deps) {\n        for (const name of Object.keys(deps)) {\n          const version = deps[name];\n          if (combineDevDeps)\n            this._trackSrcDependency(name, version, json.name);\n          else\n            this._trackDevDependency(name, version, json.name);\n        }\n      }\n      if (json.peerDependencies) {\n        for (const name of Object.keys(json.peerDependencies)) {\n          const version = json.peerDependencies[name];\n          this._trackPeerDependency(name, version, json.name);\n        }\n      }\n    }\n  }\n\n  initExistingDeps(deps: Map<string, DepInfo[]>) {\n    for (const [key, info] of deps) {\n      this.srcDeps.set(key, info);\n    }\n  }\n\n  /**\n   * The base algorithm: \"new dependencies\" = \"direct dependencies of workspace\" + \"transive dependencies\"\n   * @param duplicateDepsToCheck extra dependent information to check if they are duplicate.\n   */\n  hoistDeps(duplicateDepsToCheck?: Map<string, DependentInfo>) {\n    const dependentInfo = this.collectDependencyInfo(this.srcDeps);\n    const peerDependentInfo = this.collectDependencyInfo(this.peerDeps, true);\n    // In case peer dependency duplicates to existing transitive dependency, set \"missing\" to `false`\n\n    for (const [peerDep, peerInfo] of peerDependentInfo.entries()) {\n      if (!peerInfo.missing)\n        continue;\n\n      let normInfo = dependentInfo.get(peerDep);\n      if (normInfo) {\n        peerInfo.duplicatePeer = true;\n        peerInfo.missing = false;\n        peerInfo.by.unshift(normInfo.by[0]);\n      }\n      if (duplicateDepsToCheck) {\n        normInfo = duplicateDepsToCheck.get(peerDep);\n        if (normInfo) {\n          peerInfo.duplicatePeer = true;\n          peerInfo.missing = false;\n          peerInfo.by.unshift(normInfo.by[0]);\n        }\n      }\n    }\n\n    // merge directDepsList (direct dependencies of workspace) into dependentInfo (transive dependencies)\n    for (const [depName, item] of this.directDepsList.traverse()) {\n      const info: DependentInfo = {\n        sameVer: true,\n        direct: true,\n        missing: false,\n        duplicatePeer: false,\n        by: [{ver: item.ver, name: item.by}]\n      };\n      dependentInfo.set(depName, info);\n    }\n\n    return [dependentInfo, peerDependentInfo];\n  }\n\n  /**\n   * - If there is a direct dependency of workspace, move its version to the top of the version list,\n   * - If it is peer dependency and it is not a direct dependency of workspace,\n   * mark it \"missing\" so that reminds user to manual install it.\n   * @param trackedRaw \n   * @param isPeerDeps \n   */\n  protected collectDependencyInfo(trackedRaw: Map<string, DepInfo[]>, isPeerDeps = false) {\n    const dependentInfos: Map<string, DependentInfo> = new Map();\n\n    for (const [depName, versionList] of trackedRaw.entries()) {\n      // If there is a direct dependency of workspace, move its version to the top of the version list\n      const directVer = this.directDeps.get(depName);\n      const versions = sortByVersion(versionList, depName);\n      if (directVer) {\n        versions.unshift(directVer.value[1]);\n        if (!isPeerDeps) {\n          this.directDepsList.removeNode(directVer);\n        }\n      }\n      const hasDiffVersion = _containsDiffVersion(versionList);\n\n      const info: DependentInfo = {\n        sameVer: !hasDiffVersion,\n        direct: directVer != null,\n        // If it is peer dependency and it is not a direct dependency of workspace,\n        // then mark it \"missing\" so that reminds user to manual install it.\n        missing: isPeerDeps && directVer == null,\n        duplicatePeer: false,\n        by: versions.map(item => ({ver: item.ver, name: item.by}))\n      };\n      dependentInfos.set(depName, info);\n    }\n\n    return dependentInfos;\n  }\n\n  protected _trackSrcDependency(name: string, version: string, byWhom: string) {\n    this._trackDependency(this.srcDeps, name, version, byWhom);\n  }\n\n  protected _trackDevDependency(name: string, version: string, byWhom: string) {\n    this._trackDependency(this.devDeps, name, version, byWhom);\n  }\n\n  private _trackDependency(deps: Map<string, DepInfo[]>, name: string, version: string, byWhom: string) {\n    if (this.excludeLinkedDeps.has(name))\n      return;\n    if (!deps.has(name)) {\n      deps.set(name, []);\n    }\n    const m = versionReg.exec(version);\n    deps.get(name)!.push({\n      ver: version === '*' ? '' : version,\n      verNum: m ? m[2] : undefined,\n      pre: m ? m[1] : '',\n      by: byWhom\n    });\n  }\n\n  protected _trackPeerDependency(name: string, version: string, byWhom: string) {\n    if (this.excludeLinkedDeps.has(name))\n      return;\n    if (!this.peerDeps.has(name)) {\n      this.peerDeps.set(name, []);\n    }\n    const m = versionReg.exec(version);\n    this.peerDeps.get(name)!.push({\n      ver: version === '*' ? '' : version,\n      verNum: m ? m[2] : undefined,\n      pre: m ? m[1] : '',\n      by: byWhom\n    });\n  }\n}\n\nfunction _containsDiffVersion(sortedVersions: DepInfo[]) {\n  if (sortedVersions.length <= 1)\n    return false;\n  for (let i = 0, l = sortedVersions.length - 1; i < l; i++) {\n    const a = sortedVersions[i].ver;\n    const b = sortedVersions[i + 1].ver;\n\n    if (b === '*' || b === '')\n      continue;\n    if (a !== b)\n      return true;\n  }\n  return false;\n}\n/**\n * Sort by descending\n * @param verInfoList {ver: string, by: string, name: string}\n */\nfunction sortByVersion(verInfoList: DepInfo[], name: string) {\n  if (verInfoList == null || verInfoList.length === 1)\n    return verInfoList;\n  try {\n    verInfoList.sort((info1, info2) => {\n      if (info1.verNum != null && info2.verNum != null) {\n        try {\n          const res = semver.rcompare(info1.verNum, info2.verNum);\n          if (res === 0)\n            return info1.pre === '' && info2.pre !== ''\n              ? -1 :\n              (info1.pre !== '' && info2.pre === '' ? 1 : 0);\n          else\n            return res;\n        } catch (e) {\n          log.warn(info1, info2);\n          return 0;\n        }\n      } else if (info1.verNum != null && info2.verNum == null)\n        return -1;\n      else if (info2.verNum != null && info1.verNum == null)\n        return 1;\n      else if (info1.ver > info2.ver)\n        return -1;\n      else if (info1.ver < info2.ver)\n        return 1;\n      else\n        return 0;\n    });\n  } catch (e) {\n    log.error(`Invalid semver format for ${name || ''}: ` + JSON.stringify(verInfoList, null, '  '));\n    throw e;\n  }\n  return verInfoList;\n}\n\n\n"]}