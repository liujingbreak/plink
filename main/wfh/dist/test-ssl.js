"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable no-console */
const https_1 = __importDefault(require("https"));
const fs_1 = __importDefault(require("fs"));
function testSSL(endPoint, caFile) {
    let ca;
    if (caFile && fs_1.default.existsSync(caFile)) {
        ca = fs_1.default.readFileSync(caFile);
    }
    return new Promise((resolve, rej) => {
        https_1.default.get('https://' + endPoint, { ca }, res => {
            res.setEncoding('utf8');
            res.on('data', data => {
                console.log(data);
            });
            res.on('end', () => resolve());
        }).on('error', err => {
            console.error(`Failed to connect ${endPoint},\n` + err);
            rej(err);
            // process.exit(1);
        }).end();
    });
}
void Promise.all([
    testSSL('www.baidu.com', process.argv[2]).catch(() => { }),
    testSSL('www.bing.com', process.argv[2]).catch((() => { }))
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC1zc2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi90cy90ZXN0LXNzbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtCQUErQjtBQUMvQixrREFBMEI7QUFDMUIsNENBQW9CO0FBRXBCLFNBQVMsT0FBTyxDQUFDLFFBQWdCLEVBQUUsTUFBZTtJQUNoRCxJQUFJLEVBQXNCLENBQUM7SUFDM0IsSUFBSSxNQUFNLElBQUksWUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNuQyxFQUFFLEdBQUcsWUFBRSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUM5QjtJQUVELE9BQU8sSUFBSSxPQUFPLENBQU8sQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDeEMsZUFBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEdBQUcsUUFBUSxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7WUFDM0MsR0FBRyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4QixHQUFHLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsRUFBRTtnQkFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNwQixDQUFDLENBQUMsQ0FBQztZQUNILEdBQUcsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsRUFBRTtZQUNuQixPQUFPLENBQUMsS0FBSyxDQUFDLHFCQUFxQixRQUFRLEtBQUssR0FBRyxHQUFHLENBQUMsQ0FBQztZQUN4RCxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDVCxtQkFBbUI7UUFDckIsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDWCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxLQUFLLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDZixPQUFPLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO0lBQ3pELE9BQU8sQ0FBQyxjQUFjLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFFLENBQUMsQ0FBQyxDQUFDO0NBQzNELENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbmltcG9ydCBodHRwcyBmcm9tICdodHRwcyc7XG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuXG5mdW5jdGlvbiB0ZXN0U1NMKGVuZFBvaW50OiBzdHJpbmcsIGNhRmlsZT86IHN0cmluZykge1xuICBsZXQgY2E6IEJ1ZmZlciB8IHVuZGVmaW5lZDtcbiAgaWYgKGNhRmlsZSAmJiBmcy5leGlzdHNTeW5jKGNhRmlsZSkpIHtcbiAgICBjYSA9IGZzLnJlYWRGaWxlU3luYyhjYUZpbGUpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KChyZXNvbHZlLCByZWopID0+IHtcbiAgICBodHRwcy5nZXQoJ2h0dHBzOi8vJyArIGVuZFBvaW50LCB7Y2F9LCByZXMgPT4ge1xuICAgICAgcmVzLnNldEVuY29kaW5nKCd1dGY4Jyk7XG4gICAgICByZXMub24oJ2RhdGEnLCBkYXRhID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICB9KTtcbiAgICAgIHJlcy5vbignZW5kJywgKCkgPT4gcmVzb2x2ZSgpKTtcbiAgICB9KS5vbignZXJyb3InLCBlcnIgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihgRmFpbGVkIHRvIGNvbm5lY3QgJHtlbmRQb2ludH0sXFxuYCArIGVycik7XG4gICAgICByZWooZXJyKTtcbiAgICAgIC8vIHByb2Nlc3MuZXhpdCgxKTtcbiAgICB9KS5lbmQoKTtcbiAgfSk7XG59XG5cbnZvaWQgUHJvbWlzZS5hbGwoW1xuICB0ZXN0U1NMKCd3d3cuYmFpZHUuY29tJywgcHJvY2Vzcy5hcmd2WzJdKS5jYXRjaCgoKSA9PiB7fSksXG4gIHRlc3RTU0woJ3d3dy5iaW5nLmNvbScsIHByb2Nlc3MuYXJndlsyXSkuY2F0Y2goKCgpID0+IHt9KSlcbl0pO1xuIl19