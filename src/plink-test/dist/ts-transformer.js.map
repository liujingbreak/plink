{"version":3,"file":"ts-transformer.js","sourceRoot":"","sources":["ts-transformer.ts"],"names":[],"mappings":";;;AAIA,iEAAkF;AAClF,0DAA0D;AAC1D,oEAA4B;AAC5B,2CAA2C;AAE3C,MAAM,sBAAsB,GAAG,IAAA,yCAA8B,EAAC,oBAAE,EAAE,EAAE,CAAC,CAAC;AAEtE,MAAM,iBAAiB,GAA0F,CAAC,OAAO,EAAE,EAAE;IAC3H,MAAM,WAAW,GAA6C;QAC5D,OAAO,CAAC,UAAU,EAAE,UAAU,EAAE,QAAQ;YACtC,OAAO,sBAAsB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YACtD,wDAAwD;YACxD,kCAAkC;YAClC,6CAA6C;YAC7C,IAAI;YACJ,WAAW;YACX,+BAA+B;YAC/B,gCAAgC;YAChC,KAAK;QACP,CAAC;KACF,CAAC;IAEF,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,kBAAe,EAAC,iBAAiB,EAAC,CAAC","sourcesContent":["// import * as op from 'rxjs/operators';\n// import * as rx from 'rxjs';\n// import inspector from 'inspector';\nimport {TransformerCreator, SyncTransformer} from '@jest/transform';\nimport {createTranspileFileWithTsCheck} from '@wfh/plink/wfh/dist/utils/tsc-util';\n// import logConfig from '@wfh/plink/wfh/dist/log-config';\nimport ts from 'typescript';\n// inspector.open(9222, 'localhost', true);\n\nconst transformerWithTsCheck = createTranspileFileWithTsCheck(ts, {});\n\nconst createTransformer: TransformerCreator<SyncTransformer<Record<string, unknown>>, Record<string, unknown>> = (_config) => {\n  const transformer: SyncTransformer<Record<string, unknown>> = {\n    process(sourceText, sourcePath, _options) {\n      return transformerWithTsCheck(sourceText, sourcePath);\n      // const compiled = transpileSingleFile(sourceText, ts);\n      // if (compiled.diagnosticsText) {\n      //   console.error(compiled.diagnosticsText);\n      // }\n      // return {\n      //   code: compiled.outputText,\n      //   map: compiled.sourceMapText\n      // };\n    }\n  };\n\n  return transformer;\n};\n\nexport default {createTransformer};\n"]}