{"version":3,"file":"ts-transformer.js","sourceRoot":"","sources":["ts-transformer.ts"],"names":[],"mappings":";;;AACA,iEAAkF;AAClF,0DAA0D;AAC1D,oEAA4B;AAC5B,2CAA2C;AAE3C,MAAM,sBAAsB,GAAG,IAAA,yCAA8B,EAAC,oBAAE,EAAE,EAAC,OAAO,EAAE,EAAC,eAAe,EAAE,IAAI,EAAC,EAAC,CAAC,CAAC;AAEtG,MAAM,iBAAiB,GAA0F,CAAC,OAAO,EAAE,EAAE;IAC3H,MAAM,WAAW,GAA6C;QAC5D,OAAO,CAAC,UAAU,EAAE,UAAU,EAAE,QAAQ;YACtC,MAAM,IAAI,GAAG,sBAAsB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAC5D,sCAAsC;YACtC,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,UAAU,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC;QACd,CAAC;KACF,CAAC;IAEF,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,kBAAe,EAAC,iBAAiB,EAAC,CAAC","sourcesContent":["import {TransformerCreator, SyncTransformer} from '@jest/transform';\nimport {createTranspileFileWithTsCheck} from '@wfh/plink/wfh/dist/utils/tsc-util';\n// import logConfig from '@wfh/plink/wfh/dist/log-config';\nimport ts from 'typescript';\n// inspector.open(9222, 'localhost', true);\n\nconst transformerWithTsCheck = createTranspileFileWithTsCheck(ts, {tscOpts: {inlineSourceMap: true}});\n\nconst createTransformer: TransformerCreator<SyncTransformer<Record<string, unknown>>, Record<string, unknown>> = (_config) => {\n  const transformer: SyncTransformer<Record<string, unknown>> = {\n    process(sourceText, sourcePath, _options) {\n      const done = transformerWithTsCheck(sourceText, sourcePath);\n      // eslint-disable-next-line no-console\n      console.log('[ts-transformer] transpile', sourcePath);\n      return done;\n    }\n  };\n\n  return transformer;\n};\n\nexport default {createTransformer};\n"]}