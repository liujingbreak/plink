{"version":3,"file":"server.js","sourceRoot":"","sources":["server.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/indent */\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as fs from 'fs';\nimport * as Path from 'path';\nimport * as rx from 'rxjs';\nimport api from '__api';\nimport {getLanIPv4} from '@wfh/plink/wfh/dist/utils/network-util';\nimport {log4File, config} from '@wfh/plink';\n\nconst log = log4File(__filename);\nlet server: https.Server | http.Server | undefined;\n\nexport const serverCreated$ = new rx.ReplaySubject<http.Server | https.Server>();\n\nexport function activate() {\n  const rootPath: string = config().rootPath;\n\n  const multiServerSetting = config()['@wfh/http-server'].servers;\n\n  if (multiServerSetting) {\n    for (const serverCfg of multiServerSetting) {\n      if (serverCfg.ssl) {\n        const key = fs.readFileSync(Path.resolve(rootPath, serverCfg.ssl.key));\n        const cert = fs.readFileSync(Path.resolve(rootPath, serverCfg.ssl.cert));\n        api.eventBus?.once('appCreated', (app) => startHttpsServer(app, serverCfg.port, key, cert));\n      } else {\n        api.eventBus?.once('appCreated', (app) => startHttpServer(app, serverCfg.port));\n      }\n    }\n  } else {\n    const sslSetting = config()['@wfh/http-server'].ssl;\n\n    if (sslSetting && sslSetting.enabled) {\n      if (!sslSetting.key) {\n        sslSetting.key = 'key.pem';\n      }\n      if (!sslSetting.cert) {\n        sslSetting.cert = 'cert.pem';\n      }\n      if (!fileAccessable(Path.resolve(rootPath, sslSetting.key))) {\n        log.error('There is no file available referenced by config.yaml property \"ssl\".\"key\" ' + Path.resolve(rootPath, sslSetting.key));\n        return;\n      }\n      if (!fileAccessable(Path.resolve(rootPath, sslSetting.cert))) {\n        log.error('There is no file available referenced by config.yaml property \"ssl\".\"cert\" ' + Path.resolve(rootPath, sslSetting.cert));\n        return;\n      }\n      log.debug('SSL enabled');\n      const key = fs.readFileSync(Path.resolve(rootPath, sslSetting.key));\n      const cert = fs.readFileSync(Path.resolve(rootPath, sslSetting.cert));\n      api.eventBus?.once('appCreated', (app) => startHttpsServer(\n        app, Number(sslSetting.port ? sslSetting.port : 433),\n        key, cert\n      ));\n    } else {\n      api.eventBus?.once('appCreated', (app) => startHttpServer(app, Number(config().port ? config().port : 80)));\n    }\n  }\n\n  function startHttpServer(app: any, port: number) {\n    log.info('start HTTP');\n    const server = http.createServer(app);\n    // Node 8 has a keepAliveTimeout bug which doesn't respect active connections.\n    // Connections will end after ~5 seconds (arbitrary), often not letting the full download\n    // of large pieces of content, such as a vendor javascript file.  This results in browsers\n    // throwing a \"net::ERR_CONTENT_LENGTH_MISMATCH\" error.\n    // https://github.com/angular/angular-cli/issues/7197\n    // https://github.com/nodejs/node/issues/13391\n    // https://github.com/nodejs/node/commit/2cb6f2b281eb96a7abe16d58af6ebc9ce23d2e96\n    if (/^v8.\\d.\\d+$/.test(process.version)) {\n      server.keepAliveTimeout = 30000; // 30 seconds\n    }\n    serverCreated$.next(server);\n    server.listen(port);\n    server.on('error', (err: Error) => {\n      onError(server, port, err);\n    });\n    server.on('clientError', (err, socket) => {\n      const nErr = err as NodeJS.ErrnoException;\n      if (nErr.code === 'ECONNRESET' || !socket.writable) {\n        log.info('Client error', nErr.message);\n        return;\n      }\n      log.info('Client error', nErr.message);\n      socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n    });\n    server.on('listening', () => {\n      onListening(server, 'HTTP server', port);\n      api.eventBus?.emit('serverStarted', {});\n    });\n\n    for (const hostname of config()['@wfh/http-server'].hostnames) {\n      log.info('listen on additional host name:', hostname);\n      const server = http.createServer(app);\n      serverCreated$.next(server);\n      server.listen(port, hostname);\n      server.on('error', (err: Error) => {\n        onError(server, port, err);\n      });\n      server.on('listening', () => {\n        onListening(server, 'HTTP server', port);\n        api.eventBus?.emit('serverStarted', {});\n      });\n    }\n  }\n\n  function startHttpsServer(app: any, port: number, key: Buffer, cert: Buffer) {\n    log.info('start HTTPS');\n    const startPromises = [];\n    // let port: number = Number(sslSetting.port ? sslSetting.port : 433);\n    const httpPort = config().port ? config().port : 80;\n\n    const server = https.createServer({key, cert}, app);\n    serverCreated$.next(server);\n\n    server.listen(port);\n    if (/^v8.\\d.\\d+$/.test(process.version)) {\n      (server as any).keepAliveTimeout = 30000; // 30 seconds\n    }\n    server.on('error', (error: Error) => {\n      onError(server, port, error);\n    });\n    startPromises.push(new Promise(resolve => {\n      server.on('listening', () => resolve(server));\n    }));\n\n    for (const hostname of config()['@wfh/http-server'].hostnames) {\n      log.info('listen on additional host name:', hostname);\n      const server = https.createServer({key, cert}, app);\n      serverCreated$.next(server);\n      server.listen(port, hostname);\n      server.on('error', (error: Error) => {\n        onError(server, port, error);\n      });\n      startPromises.push(new Promise(resolve => {\n        server.on('listening', () => resolve(server));\n      }));\n\n    }\n\n    // if (sslSetting.httpForward !== false) {\n    //   const redirectHttpServer = http.createServer((req: any, res: any) => {\n    //     log.debug('req.headers.host: %j', req.headers.host);\n    //     const url = 'https://' + /([^:]+)(:[0-9]+)?/.exec(req.headers.host)![1] + ':' + port;\n    //     log.debug('redirect to ' + url);\n    //     res.writeHead(307, {\n    //       Location: url,\n    //       'Content-Type': 'text/plain'\n    //     });\n    //     res.end('');\n    //   });\n\n    //   redirectHttpServer.listen(httpPort);\n    //   redirectHttpServer.on('error', (error: Error) => {\n    //     onError(server, httpPort, error);\n    //   });\n\n    //   startPromises.push(new Promise(resolve => {\n    //     redirectHttpServer.on('listening', () => resolve(redirectHttpServer));\n    //   }));\n    // }\n\n    void Promise.all(startPromises)\n      .then((servers: any[]) => {\n        onListening(servers[0], 'HTTPS server', port);\n        if (servers.length > 1)\n          onListening(servers[1], 'HTTP Forwarding server', httpPort);\n        api.eventBus?.emit('serverStarted', {});\n      });\n  }\n\n  /**\n\t * Event listener for HTTP server \"listening\" event.\n\t */\n  function onListening(server: http.Server | https.Server, title: string, port: number | string) {\n    const addr = getLanIPv4();\n    log.info(`${title} is listening on ${addr}:${port}`);\n  }\n\n  /**\n\t * Event listener for HTTP server \"error\" event.\n\t */\n  function onError(server: http.Server | https.Server, port: number | string, error: any) {\n    log.error(error);\n    if (error.syscall !== 'listen') {\n      throw error;\n    }\n\n    const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;\n\n    // handle specific listen errors with friendly messages\n    switch (error.code) {\n    case 'EACCES':\n      log.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      log.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n    }\n  }\n}\n\nexport function deactivate() {\n  api.eventBus?.emit('serverStopped', {});\n  if (server)\n    server.close();\n  log.info('HTTP server is shut');\n}\n\nfunction fileAccessable(file: string) {\n  try {\n    fs.accessSync(file, fs.constants.R_OK);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"]}