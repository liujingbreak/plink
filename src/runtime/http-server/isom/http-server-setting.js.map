{"version":3,"file":"http-server-setting.js","sourceRoot":"","sources":["http-server-setting.ts"],"names":[],"mappings":";;;AAAA,sCAAkC;AA6BlC;;GAEG;AACH,SAAgB,cAAc;;IAC5B,MAAM,YAAY,GAAsB;QACtC,GAAG,EAAE;YACH,OAAO,EAAE,KAAK;YACd,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,GAAG;YACT,WAAW,EAAE,IAAI;SAClB;QACD,aAAa,EAAE,KAAK;QACpB,SAAS,EAAE,EAAE;KACd,CAAC;IACF,qDAAqD;IACrD,IAAI,MAAA,IAAA,cAAM,GAAE,CAAC,UAAU,0CAAE,GAAG,EAAE;QAC5B,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC;KACnC;IAED,MAAM,GAAG,GAAG,MAAA,IAAA,cAAM,GAAE,CAAC,UAAU,0CAAE,GAAG,CAAC;IACrC,qDAAqD;IACrD,IAAI,GAAG,KAAK,OAAO,EAAE;QACnB,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC;KACnC;IAED,OAAO,YAAY,CAAC;AACtB,CAAC;AAxBD,wCAwBC;AAED;;;GAGG;AACH,SAAgB,UAAU;IACxB,iEAAiE;IACjE,OAAO,IAAA,cAAM,GAAE,CAAC,kBAAkB,CAAE,CAAC;AACvC,CAAC;AAHD,gCAGC","sourcesContent":["import {config} from '@wfh/plink';\n\n/**\n * Package setting type\n */\nexport interface HttpServerSetting {\n  /** Deprecated */\n  noHealthCheck: boolean;\n  ssl: {\n    enabled: boolean;\n    key: string;\n    cert: string;\n    port: number;\n    httpForward: boolean;\n  };\n  /** Additional host names (other than default host)\n  * that HTTP/HTTPS server needs to listened */\n  hostnames: string[];\n  /** starts with multiple servers\n  * if this property is provided, property \"ssl\" will be ignored */\n  servers?: {\n    ssl?: {\n      key: string;\n      cert: string;\n    };\n    port: number;\n  }[];\n}\n\n/**\n * Plink runs this funtion to get package level setting value\n */\nexport function defaultSetting(): HttpServerSetting {\n  const defaultValue: HttpServerSetting = {\n    ssl: {\n      enabled: false,\n      key: 'key.pem',\n      cert: 'cert.pem',\n      port: 443,\n      httpForward: true\n    },\n    noHealthCheck: false,\n    hostnames: []\n  };\n  // Return settings based on command line option \"dev\"\n  if (config().cliOptions?.dev) {\n    defaultValue.noHealthCheck = true;\n  }\n\n  const env = config().cliOptions?.env;\n  // Return settings based on command line option \"env\"\n  if (env === 'local') {\n    defaultValue.noHealthCheck = true;\n  }\n\n  return defaultValue;\n}\n\n/**\n * The return setting value is merged with files specified by command line options \"--prop\" and \"-c\"\n * @return setting of current package\n */\nexport function getSetting(): HttpServerSetting {\n  /* eslint-disable dot-notation,@typescript-eslint/dot-notation */\n  return config()['@wfh/http-server']!;\n}\n"]}