{"version":3,"file":"cd-server.js","sourceRoot":"","sources":["cd-server.ts"],"names":[],"mappings":"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","sourcesContent":["import os from 'os';\nimport * as util from 'util';\nimport Path from 'path';\nimport crypto, {Hash} from 'crypto';\nimport fs from 'fs-extra';\nimport _ from 'lodash';\nimport memstat from '@wfh/plink/wfh/dist/utils/mem-stats';\nimport {Application, Request} from 'express';\nimport api from '__api';\nimport {log4File, config} from '@wfh/plink';\nimport {ImapManager} from '../fetch-remote-imap';\nimport {getPm2Info, zipDownloadDir, forkExtractExstingZip, retry} from '../fetch-remote';\nimport {Checksum} from '../fetch-types';\nconst log = log4File(__filename);\n// import {stringifyListAllVersions} from '@wfh/prebuild/dist/artifacts';\n\n// const log = require('log4js').getLogger(api.packageName + '.cd-server');\n\ninterface Pm2Packet {\n  type: 'process:msg';\n  data: {\n    pid: number;\n    'cd-server:checksum updating'?: ChecksumItem;\n    'cd-server:check mail'?: string;\n    extractZip?: boolean;\n  };\n}\n\ninterface Pm2Bus {\n  on(event: 'process:msg', cb: (packet: Pm2Packet) => void): void;\n}\n\ntype ChecksumItem = Checksum extends Array<infer I> ? I : unknown;\n\ninterface RecievedData {\n  hash?: string; content: Buffer; length: number;\n}\n\nconst requireToken = config()['@wfh/assets-processer'].requireToken;\nconst mailSetting = config()['@wfh/assets-processer'].fetchMailServer;\n\n\nexport function activate(app: Application, imap: ImapManager) {\n  let writingFile: string | undefined;\n\n  const filesHash = readChecksumFile();\n\n  const {isPm2, isMainProcess} = getPm2Info();\n  if (isPm2) {\n    void initPm2();\n  }\n\n  void imap.appendMail(`server ${os.hostname()} ${process.pid} activates`, new Date() + '');\n\n  app.use('/_stat', (req, res, next) => {\n    if (requireToken && req.query.whisper !== generateToken()) {\n      res.header('Connection', 'close');\n      res.status(401).send(`REJECT from ${os.hostname()} pid: ${process.pid}: Not allowed to push artifact in this environment.`);\n      req.socket.end();\n      if (res.connection)\n        res.connection.end();\n      return;\n    }\n\n\n    if (req.method === 'GET' && /^\\/_stat([#?/]|$)/.test(req.originalUrl)) {\n      res.contentType('json');\n      res.send(JSON.stringify({\n        isMainProcess,\n        filesHash: Array.from(filesHash.values()),\n        is_pm2_slave: isPm2,\n        hostname: os.hostname(),\n        pid: process.pid,\n        mem: memstat(),\n        cpus: os.cpus(),\n        arch: os.arch(),\n        platform: os.platform(),\n        loadavg: os.loadavg()\n      }, null, '  '));\n    } else {\n      next();\n    }\n  });\n\n  let checkedSeq = '';\n\n  app.use('/_checkmail/:seq', (req, res, next) => {\n    log.info('force check mail for:', req.params.seq);\n    if (checkedSeq === req.params.seq)\n      return;\n    if (isPm2 && !isMainProcess) {\n      process.send!({\n        type: 'process:msg',\n        data: {\n          'cd-server:check mail': req.params.seq,\n          pid: process.pid\n        }\n      });\n    } else {\n      void imap.checkMailForUpdate();\n    }\n  });\n\n  app.use('/_time', (req, res) => {\n    res.send(generateToken());\n  });\n\n\n  const router = api.express.Router();\n  // router.get('/_githash', async (req, res) => {\n  //   res.setHeader('content-type', 'text/plain');\n  //   res.send(await stringifyListAllVersions());\n  // });\n\n  router.put<{file: string; hash: string}>('/_install_force/:file/:hash', (req, res, next) => {\n    (req as unknown as {_installForce: boolean})._installForce = true;\n    next();\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  router.put<{file: string; hash: string}>('/_install/:file/:hash', async (req, res) => {\n    const isForce = (req as unknown as {_installForce: boolean})._installForce === true;\n\n    if (requireToken && req.query.whisper !== generateToken()) {\n      res.header('Connection', 'close');\n      res.status(401).send(`REJECT from ${os.hostname()} pid: ${process.pid}: Not allowed to push artifact in this environment.`);\n      req.socket.end();\n      if (res.connection)\n        res.connection.end();\n      return;\n    }\n    const existing = filesHash.get(req.params.file);\n    log.info(`${req.method} [${os.hostname()}]file: ${req.params.file}, hash: ${req.params.hash},\\nexisting file: ${existing ? existing.file + ' / ' + existing.sha256 : '<NO>'}` +\n      `\\n${util.inspect(req.headers)}`);\n\n    if (requireToken && req.query.whisper !== generateToken()) {\n      res.header('Connection', 'close');\n      res.status(401).send(`REJECT from ${os.hostname()} pid: ${process.pid}: Not allowed to push artifact in this environment.`);\n      req.socket.end();\n      if (res.connection)\n        res.connection.end();\n      return;\n    }\n\n    log.info('recieving data');\n    if (isPm2 && !isMainProcess) {\n      await new Promise(resolve => setTimeout(resolve, 800));\n    }\n    if (!isForce && existing && existing.sha256 === req.params.hash) {\n      // I want to cancel recieving request body asap\n      // https://stackoverflow.com/questions/18367824/how-to-cancel-http-upload-from-data-events\n      res.header('Connection', 'close');\n      res.status(409).send(`[REJECT] ${os.hostname()} pid: ${process.pid}:` +\n      `- found existing: ${JSON.stringify(existing, null, '  ')}\\n` +\n      `- hashs:\\n  ${JSON.stringify(filesHash, null, '  ')}`);\n      req.socket.end();\n      if (res.connection)\n        res.connection.end();\n      return;\n    }\n\n    const now = new Date();\n    const newChecksumItem: ChecksumItem = {\n      file: req.params.file,\n      sha256: req.params.hash,\n      created: now.toLocaleString(),\n      createdTime: now.getTime()\n    };\n\n    const contentLen = req.headers['content-length'];\n    let recieved: RecievedData;\n    // checksum.versions![req.params.app] = {version: parseInt(req.params.version, 10)};\n    try {\n      recieved = await readResponseToBuffer(req, req.params.hash, contentLen ? parseInt(contentLen, 10) : 10 * 1024 * 1024);\n    } catch (e) {\n      if ((e as Error).message === 'sha256 not match') {\n        res.send(`[WARN] ${os.hostname()} pid: ${process.pid}: ${JSON.stringify(newChecksumItem, null, '  ')}\\n` +\n          `Recieved file is corrupted with hash ${(e as {sha256?: string}).sha256 || '<unknown>'},\\nwhile expecting file hash is ${newChecksumItem.sha256}`);\n      } else {\n        res.status(500);\n        res.send((e as Error).stack);\n      }\n    }\n    res.send(`[ACCEPT] ${os.hostname()} pid: ${process.pid}: ${JSON.stringify(newChecksumItem, null, '  ')}`);\n\n    let fileBaseName = Path.basename(req.params.file);\n    const dot = fileBaseName.lastIndexOf('.');\n    if (dot >= 0 )\n      fileBaseName = fileBaseName.slice(0, dot);\n    writingFile = Path.resolve(zipDownloadDir, `${fileBaseName.slice(0, fileBaseName.lastIndexOf('.'))}.${process.pid}.zip`);\n    fs.mkdirpSync(Path.dirname(writingFile));\n    fs.writeFile(writingFile, recieved!.content, onZipFileWritten);\n    filesHash.set(newChecksumItem.file, newChecksumItem);\n    writeChecksumFile(filesHash);\n    if (isPm2) {\n      const msg: Pm2Packet = {\n        type: 'process:msg',\n        data: {\n          'cd-server:checksum updating': newChecksumItem,\n          pid: process.pid\n        }\n      };\n      process.send!(msg);\n    }\n  });\n\n\n  app.use('/', router);\n\n  function onZipFileWritten() {\n    if (isPm2 && !isMainProcess) {\n      const msg: Pm2Packet = {\n        type: 'process:msg',\n        data: {extractZip: true, pid: process.pid}\n      };\n      process.send!(msg);\n    } else\n      retry(2, forkExtractExstingZip).then(() => api.eventBus!.emit(api.packageName + '.downloaded'))\n        .catch(e => {log.error(e); });\n  }\n\n  async function initPm2() {\n    const pm2 = require('pm2');\n    const pm2connect = util.promisify(pm2.connect.bind(pm2));\n    const pm2launchBus = util.promisify<Pm2Bus>(pm2.launchBus.bind(pm2));\n\n    await pm2connect();\n    const bus = await pm2launchBus();\n    bus.on('process:msg', packet => {\n      if (!packet.data) {\n        return;\n      }\n      const updatedChecksumItem = packet.data['cd-server:checksum updating'];\n      if (updatedChecksumItem && packet.data.pid !== process.pid) {\n        const recievedChecksum = updatedChecksumItem;\n        filesHash.set(recievedChecksum.file, recievedChecksum);\n        log.info('Other process recieved updating checksum %s from id: %s',\n          util.inspect(recievedChecksum), _.get(packet, 'process.pm_id'));\n      }\n      const checkMailProp = packet.data['cd-server:check mail'];\n      if (checkMailProp && packet.data.pid !== process.pid) {\n        checkedSeq = checkMailProp;\n        log.info('Other process triggers \"check mail\" from id:', _.get(packet, 'process.pm_id'));\n        // imap.checkMailForUpdate();\n      }\n\n      if (packet.data.extractZip && packet.data.pid !== process.pid) {\n        log.info('Other process triggers \"extractZip\" from id:', _.get(packet, 'process.pm_id'));\n        retry(2, forkExtractExstingZip)\n          .then(() => api.eventBus!.emit(api.packageName + '.downloaded'))\n          .catch(e => {log.error(e); });\n      }\n    });\n  }\n}\n\nexport function generateToken() {\n  const date = new Date();\n  const token = date.getDate() + '' + date.getHours();\n  // eslint-disable-next-line no-console\n  console.log(token);\n  return token;\n}\n\nfunction readResponseToBuffer(req: Request<{file: string; hash: string}>, expectSha256: string, length: number)\n  : Promise<RecievedData> {\n  // let countBytes = 0;\n\n  let hash: Hash;\n  let hashDone: Promise<string>;\n\n  const buf = Buffer.alloc(length);\n  let bufOffset = 0;\n\n  req.on('data', (data: Buffer) => {\n    bufOffset += data.copy(buf, bufOffset, 0);\n    log.debug(`Recieving, ${bufOffset} bytes`);\n    if (hash == null) {\n      hash = crypto.createHash('sha256');\n      hashDone = new Promise(resolve => {\n        hash.on('readable', () => {\n          const data = hash.read() as Buffer;\n          if (data) {\n            resolve(data.toString('hex'));\n          }\n        });\n      });\n    }\n    hash.write(data);\n\n    // if (fwriter == null) {\n    //   let fileBaseName = Path.basename(req.params.file);\n    //   const dot = fileBaseName.lastIndexOf('.');\n    //   if (dot >=0 )\n    //     fileBaseName = fileBaseName.slice(0, dot);\n    //   writingFile = Path.resolve(zipDownloadDir, `${fileBaseName.slice(0, fileBaseName.lastIndexOf('.'))}.${process.pid}.zip`);\n    //   fs.mkdirpSync(Path.dirname(writingFile));\n    //   fwriter = fs.createWriteStream(writingFile);\n    // }\n    // fwriter.write(data);\n  });\n  return new Promise((resolve, rej) => {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    req.on('end', async () => {\n      log.info(`Total recieved ${bufOffset} bytes`);\n      if (bufOffset > length) {\n        return rej(new Error(`Recieved data length ${bufOffset} is greater than expecred content length ${length}`));\n      }\n      let sha: string | undefined;\n      if (hash) {\n        hash.end();\n        sha = await hashDone;\n      }\n\n      if (sha !== expectSha256) {\n        const err = new Error('sha256 not match');\n        (err as any).sha256 = sha;\n        // TODO:\n        // res.send(`[WARN] ${os.hostname()} pid: ${process.pid}: ${JSON.stringify(newChecksumItem, null, '  ')}\\n` +\n        //   `Recieved file is corrupted with hash ${sha},\\nwhile expecting file hash is ${newChecksumItem.sha256}`);\n        // fwriter!.end(onZipFileWritten);\n        // fwriter = undefined;\n        return rej(err);\n      }\n      resolve({\n        hash: sha,\n        content: buf.slice(0, bufOffset),\n        length: bufOffset\n      });\n\n      // fwriter!.end(onZipFileWritten);\n      // fwriter = undefined;\n      // res.send(`[ACCEPT] ${os.hostname()} pid: ${process.pid}: ${JSON.stringify(newChecksumItem, null, '  ')}`);\n\n      // filesHash.set(newChecksumItem.file, newChecksumItem);\n      // writeChecksumFile(filesHash);\n      // if (isPm2) {\n      //   const msg: Pm2Packet = {\n      //     type : 'process:msg',\n      //     data: {\n      //       'cd-server:checksum updating': newChecksumItem,\n      //       pid: process.pid\n      //     }\n      //   };\n      //   process.send!(msg);\n      // }\n    });\n  });\n}\n\nfunction readChecksumFile(): Map<string, ChecksumItem> {\n  const env = mailSetting ? mailSetting.env : 'local';\n  const checksumFile = Path.resolve('checksum.' + env + '.json');\n  let checksum: Checksum;\n  if (fs.existsSync(checksumFile)) {\n    try {\n      checksum = JSON.parse(fs.readFileSync(checksumFile, 'utf8')) as Checksum;\n    } catch (e) {\n      log.warn(e);\n      checksum = [];\n    }\n  } else {\n    checksum = [];\n  }\n  return checksum.reduce((map, val) => map.set(val.file, val), new Map<string, ChecksumItem>());\n}\n\nfunction writeChecksumFile(checksum: ReturnType<typeof readChecksumFile>) {\n  const env = mailSetting ? mailSetting.env : 'local';\n  fs.writeFile(Path.resolve('checksum.' + env + '.json'), JSON.stringify(Array.from(checksum.values()), null, '  '), (err) => {\n    if (err) {\n      log.error(err);\n    }\n  });\n}\n"]}