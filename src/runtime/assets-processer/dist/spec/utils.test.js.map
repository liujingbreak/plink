{"version":3,"file":"utils.test.js","sourceRoot":"","sources":["utils.test.ts"],"names":[],"mappings":";;;;AAAA,+BAA+B;AAC/B,uDAAiC;AACjC,oCAAqD;AAErD,SAAgB,IAAI;IAClB,IAAI,UAAU,GAAG,KAAK,CAAC;IACvB,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,KAAK;YACR,IAAI,UAAU,EAAE;gBACd,OAAO;aACR;YACD,UAAU,GAAG,IAAI,CAAC;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC3B,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1C;YACD,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,EAAE,EAAE,CAAC,CAAC;QACT,CAAC;KACF,CAAC,CAAC;IACH,MAAM,GAAG,GAAG,IAAA,mCAA2B,EAAC,KAAK,CAAC,CAAC;IAE/C,SAAS,QAAQ;QACf,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC;YACzC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;gBACjB,EAAE,EAAE,CAAC;gBACL,QAAQ,IAAI,GAAG,CAAC;YAClB,CAAC;YACD,KAAK,CAAC,EAAE;gBACN,EAAE,EAAE,CAAC;gBACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACxB,CAAC;SAAC,CACH,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACf,CAAC;IACD,QAAQ,EAAE,CAAC;IACX,QAAQ,EAAE,CAAC;IACX,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC1B,CAAC;AAnCD,oBAmCC;AACD,qCAAqC;AAErC,4BAA4B;AAC5B,6BAA6B;AAC7B,2BAA2B;AAC3B,0DAA0D;AAC1D,yCAAyC;AACzC,QAAQ;AACR,MAAM","sourcesContent":["/* eslint-disable no-console */\nimport * as stream from 'stream';\nimport {createReplayReadableFactory} from '../utils';\n\nexport function test() {\n  let readStarts = false;\n  const input = new stream.Readable({\n    read(_size) {\n      if (readStarts) {\n        return;\n      }\n      readStarts = true;\n      for (let i = 0; i < 10; i++) {\n        setTimeout(() => this.push(i + ', '), 0);\n      }\n      setTimeout(() => {\n        this.push('over');\n        this.push(null);\n      }, 50);\n    }\n  });\n  const fac = createReplayReadableFactory(input);\n\n  function readOnce() {\n    let sentance = '';\n    stream.pipeline(fac(), new stream.Writable({\n      write(str, _enc, cb) {\n        cb();\n        sentance += str;\n      },\n      final(cb) {\n        cb();\n        console.log(sentance);\n      }}\n    ), () => {});\n  }\n  readOnce();\n  readOnce();\n  setTimeout(readOnce, 0);\n}\n// import {testable} from '../utils';\n\n// describe('Utils', () => {\n//   test('keyOfUri', () => {\n//     console.log('here');\n//     const key = testable.keyOfUri('GET', '/foobar/it');\n//     expect(key).toBe('GET/foobar/it');\n//   });\n// });\n\n"]}