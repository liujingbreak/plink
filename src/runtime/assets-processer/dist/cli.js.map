{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAM,MAAM,GAAiB,CAAC,OAAO,EAAE,EAAE;IACvC,sBAAsB;IACtB,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,4BAA4B,CAAC;SACxD,WAAW,CAAC,gCAAgC,CAAC;SAC7C,MAAM,CAAC,uBAAuB,EAAE,eAAe,CAAC;SAChD,MAAM,CAAC,KAAK,EAAE,MAAc,EAAE,WAAmB,EAAE,EAAE;QACpD,6BAA6B;QAC7B,MAAM,EAAC,MAAM,EAAC,GAAG,wDAAa,iBAAiB,GAAC,CAAC;QACjD,MAAM,MAAM,CAAC,MAAM,EAAE,WAAW,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,4BAA4B;IAC5B,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC;SAChC,WAAW,CAAC,gCAAgC,CAAC;SAC7C,MAAM,CAAC,KAAK,EAAC,IAAI,EAAC,EAAE;QACnB,MAAM,EAAC,OAAO,EAAC,GAAG,OAAO,CAAC,aAAa,CAAkB,CAAC;QAC1D,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,0BAA0B;IAC1B,OAAO,CAAC,OAAO,CAAC,mCAAmC,CAAC;SACnD,WAAW,CAAC,yCAAyC,CAAC;QACvD,8DAA8D;SAC7D,MAAM,CAAC,KAAK,EAAE,OAAe,EAAE,OAAgB,EAAE,EAAE;QAClD,6BAA6B;QAC7B,MAAM,EAAC,KAAK,EAAC,GAAG,wDAAa,aAAa,GAAC,CAAC;QAC5C,MAAM,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["import {CliExtension} from '@wfh/plink';\n// import Path from 'path';\nimport * as _unzip from './cli-unzip';\n\nconst cliExt: CliExtension = (program) => {\n  // ------- zip -------\n  const cmd = program.command('zip <srcDir> <destZipFile>')\n  .description('Create zip file in 64 zip mode')\n  .option('-e, --exclude <regex>', 'exclude files')\n  .action(async (srcDir: string, destZipFile: string) => {\n    // prepareLazyNodeInjector();\n    const {zipDir} = await import('./remote-deploy');\n    await zipDir(srcDir, destZipFile, cmd.opts().exclude);\n  });\n\n  // -------- listzip --------\n  program.command('listzip <file>')\n  .description('List zip file content and size')\n  .action(async file => {\n    const {listZip} = require('./cli-unzip') as typeof _unzip;\n    await listZip(file);\n  });\n\n  // -------- unzip --------\n  program.command('unzip <zipFile> [destination_dir]')\n  .description('Extract zip files to specific directory')\n  // .requiredOption('-d,--dest <dir>', 'destination directory')\n  .action(async (zipFile: string, destDir?: string) => {\n    // prepareLazyNodeInjector();\n    const {unZip} = await import('./cli-unzip');\n    await unZip(zipFile, destDir);\n  });\n\n};\n\nexport default cliExt;\n"]}