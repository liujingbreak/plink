{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;AAAA,wDAAwB;AACxB,0DAA0B;AAC1B,gEAA0B;AAC1B,4DAAuB;AACvB,8BAA8B;AAC9B,wCAAwC;AACxC,sEAAqC;AACrC,sCAAiG;AACjG,+EAA4D;AAC5D,4DAAoE;AACpE,oEAA8C;AAC9C,2DAAgD;AAEhD,yDAAuE;AACvE,2DAAsD;AACtD,oEAAoE;AACpE,kFAAkF;AAClF,mCAAuC;AAEvC,MAAM,GAAG,GAAG,IAAA,gBAAQ,EAAC,UAAU,CAAC,CAAC;AACjC,4DAA4D;AAC5D,MAAM,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC/C,kFAAkF;AAElF,SAAgB,UAAU;IACxB,WAAW,CAAC,IAAI,EAAE,CAAC;IACnB,8BAA8B;IAC9B,wDAAwD;IACxD,iBAAiB;AACnB,CAAC;AALD,gCAKC;AACD,SAAgB,QAAQ,CAAC,GAAqB;;IAC5C,MAAM,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACrD,GAAG,CAAC,KAAK,CAAC,uBAAuB,GAAG,YAAY,CAAC,CAAC;IAGlD,MAAM,OAAO,GAAG,WAAW,EAAE,CAAC;IAC9B,IAAI,OAAO;QACT,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;IAElC,MAAM,SAAS,GAAG,IAAA,qCAAU,GAAE,CAAC,kBAAkB,CAAC;IAClD,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;IAE3C,yCAAyC;IACzC,IAAA,mCAAgB,EAAC,GAAG,CAAC,CAAC;IAEtB,MAAM,YAAY,GAAG,IAAA,qCAAU,GAAE,CAAC,SAAS,CAAC;IAC5C,IAAI,YAAY,EAAE;QAChB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACjD,GAAG,CAAC,IAAI,CAAC,qBAAqB,SAAS,OAAO,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACzE,IAAA,sBAAc,EAAC,SAAS,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;SACpD;KACF;IAED,MAAM,qBAAqB,GAAG,IAAA,qCAAU,GAAE,CAAC,kBAAkB,CAAC;IAC9D,IAAI,qBAAqB,EAAE;QACzB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE;YAC1D,MAAM,GAAG,GAAG,cAAI,CAAC,IAAI,CAAC,IAAA,cAAM,GAAE,CAAC,OAAO,EAAE,kBAAkB,EAAE,gBAAC,CAAC,SAAS,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;YACzF,MAAM,QAAQ,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;YAClD,GAAG,CAAC,IAAI,CAAC,qBAAqB,SAAS,QAAQ,QAAQ,sBAAsB,GAAG,EAAE,CAAC,CAAC;YACpF,4DAA4D;SAC7D;KACF;IAED,wDAAwD;IACxD,uBAAuB;IACvB,0CAA0C;IAE1C,6BAA6B;IAC7B,MAAM,aAAa,GAAG,IAAA,qCAAiB,EAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACjE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;IAC5B,gFAAgF;IAEhF,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,EAAE;QACnD,MAAM,UAAU,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;QACjE,OAAO,CAAC,KAAK,GAAG,iBAAiB,GAAG,YAAY,CAAC;QACjD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAA,qBAAU,EAAC,YAAY,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC,CAAC;KACnE;SAAM;QACL,GAAG,CAAC,IAAI,CAAC,eAAK,CAAC,UAAU,CAAC,+EAA+E,YAAY,IAAI;YACvH,+BAA+B,GAAG,CAAC,WAAW,wDAAwD,CAAC,CAAC,CAAC;KAC5G;IACD,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,IAAA,oBAAU,EAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IAChD,IAAA,oCAAiB,EAAC,GAAG,CAAC,CAAC;IACvB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,yCAAyC;IAEtE,MAAM,WAAW,GAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAA0B,CAAC,eAAe,CAAC;IAC9F,MAAM,IAAI,GAAG,IAAI,+BAAW,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAEtE,MAAA,GAAG,CAAC,QAAQ,0CAAE,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACpC,6CAA6C;QAC7C,KAAK,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,6BAA6B;AAC/B,CAAC;AAhED,4BAgEC;AAGD,SAAS,WAAW;IAClB,OAAO,oBAAoB,CAAC,2BAA2B,CAAC,IAAI,oBAAoB,CAAC,eAAe,CAAC,CAAC;AACpG,CAAC;AAED,SAAS,oBAAoB,CAAC,QAA4B;IACxD,IAAI,CAAC,IAAA,cAAM,GAAE,CAAC,QAAQ,CAAC,EAAE;QACvB,OAAO,IAAI,CAAC;KACb;IACD,IAAI,WAA+B,CAAC;IACpC,IAAI,cAAsB,CAAC;IAC3B,gBAAC,CAAC,IAAI,CAAC,IAAA,cAAM,GAAE,CAAC,QAAQ,CAAQ,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE;;QACjD,IAAI,IAAI,KAAK,GAAG,EAAE;YAChB,MAAM,GAAG,GAAG,CAAC,GAAG,IAAA,2BAAmB,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,GAAG,EAAE;gBACP,MAAM,YAAY,GAAG,CAAA,MAAA,GAAG,CAAC,IAAI,CAAC,KAAK,0CAAE,SAAS,MAAI,MAAA,GAAG,CAAC,IAAI,CAAC,EAAE,0CAAE,SAAS,CAAA,IAAI,QAAQ,CAAC;gBACrF,MAAM,OAAO,GAAG,cAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;gBACrE,IAAI,kBAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;oBAC1B,IAAI,WAAW,EAAE;wBACf,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,cAAc,CAAC,CAAC;qBACnF;oBACD,WAAW,GAAG,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBACpC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC;iBAC3B;aACF;SAEF;IACH,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["import Path from 'path';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport _ from 'lodash';\n// import * as rx from 'rxjs';\n// import * as op from 'rxjs/operators';\nimport serveIndex from 'serve-index';\nimport {log4File, config, DrcpSettings, findPackagesByNames, ExtensionContext} from '@wfh/plink';\nimport {getSetting} from '../isom/assets-processer-setting';\nimport {activate as activateCd} from './content-deployer/cd-server';\nimport * as fetchRemote from './fetch-remote';\nimport {ImapManager} from './fetch-remote-imap';\nimport {WithMailServerConfig} from './fetch-types';\nimport {fallbackIndexHtml, proxyToDevServer} from './index-html-route';\nimport {createStaticRoute} from './static-middleware';\n// import {createProxyWithCache} from './proxy-cache/cache-service';\n// import createNpmRegistryServer from './proxy-cache/npm-registry-cache-service';\nimport {setupHttpProxy} from './utils';\n\nconst log = log4File(__filename);\n// const log = require('log4js').getLogger(api.packageName);\nconst serverFavicon = require('serve-favicon');\n// const deactivateSubj = new rx.ReplaySubject<() => (PromiseLike<any> | void)>();\n\nexport function deactivate() {\n  fetchRemote.stop();\n  // return deactivateSubj.pipe(\n  //   op.mergeMap(shutdown => rx.defer(() => shutdown()))\n  // ).toPromise();\n}\nexport function activate(api: ExtensionContext) {\n  const staticFolder = api.config.resolve('staticDir');\n  log.debug('express static path: ' + staticFolder);\n\n\n  const favicon = findFavicon();\n  if (favicon)\n    api.use(serverFavicon(favicon));\n\n  const maxAgeMap = getSetting().cacheControlMaxAge;\n  log.info('cache control', maxAgeMap);\n  log.info('Serve static dir', staticFolder);\n\n  // api.use('/', createResponseTimestamp);\n  proxyToDevServer(api);\n\n  const httpProxySet = getSetting().httpProxy;\n  if (httpProxySet) {\n    for (const proxyPath of Object.keys(httpProxySet)) {\n      log.info(`Enable HTTP proxy ${proxyPath} -> ${httpProxySet[proxyPath]}`);\n      setupHttpProxy(proxyPath, httpProxySet[proxyPath]);\n    }\n  }\n\n  const httpProxyWithCacheSet = getSetting().httpProxyWithCache;\n  if (httpProxyWithCacheSet) {\n    for (const proxyPath of Object.keys(httpProxyWithCacheSet)) {\n      const dir = Path.join(config().destDir, 'http-proxy-cache', _.trimStart(proxyPath, '/'));\n      const endPoint = httpProxyWithCacheSet[proxyPath];\n      log.info(`Enable HTTP proxy ${proxyPath} --> ${endPoint}, cache directory: ${dir}`);\n      // createProxyWithCache(proxyPath, {target: endPoint}, dir);\n    }\n  }\n\n  // const saveNpmRegistry = createNpmRegistryServer(api);\n  // if (saveNpmRegistry)\n  //   deactivateSubj.next(saveNpmRegistry);\n\n  // api.use('/', zss.handler);\n  const staticHandler = createStaticRoute(staticFolder, maxAgeMap);\n  api.use('/', staticHandler);\n  // api.use('/', createStaticRoute(api.config.resolve('dllDestDir'), maxAgeMap));\n\n  if (api.config.get([api.packageName, 'serveIndex'])) {\n    const stylesheet = Path.resolve(__dirname, '../serve-index.css');\n    process.title = 'File server on ' + staticFolder;\n    api.use('/', serveIndex(staticFolder, {icons: true, stylesheet}));\n  } else {\n    log.info(chalk.blueBright(`If you want to serve directory index page for resource directory other than ${staticFolder}\\n` +\n      ` start command with \"--prop ${api.packageName}.serveIndex=true --prop staticDir=<resource directory>`));\n  }\n  api.expressAppSet(app => activateCd(app, imap));\n  fallbackIndexHtml(api);\n  api.use('/', staticHandler); // Serve fallbacked request to index.html\n\n  const mailSetting = (api.config.get(api.packageName) as WithMailServerConfig).fetchMailServer;\n  const imap = new ImapManager(mailSetting ? mailSetting.env : 'local');\n\n  api.eventBus?.once('appCreated', () => {\n    // appCreated event is emitted by express-app\n    void fetchRemote.start(imap);\n  });\n\n  // deactivateSubj.complete();\n}\n\n\nfunction findFavicon() {\n  return _findFaviconInConfig('packageContextPathMapping') || _findFaviconInConfig('outputPathMap');\n}\n\nfunction _findFaviconInConfig(property: keyof DrcpSettings) {\n  if (!config()[property]) {\n    return null;\n  }\n  let faviconFile: string | undefined;\n  let faviconPackage: string;\n  _.each(config()[property] as any, (path, pkName) => {\n    if (path === '/') {\n      const pkg = [...findPackagesByNames([pkName])][0];\n      if (pkg) {\n        const assetsFolder = pkg.json.plink?.assetsDir || pkg.json.dr?.assetsDir || 'assets';\n        const favicon = Path.join(pkg.realPath, assetsFolder, 'favicon.ico');\n        if (fs.existsSync(favicon)) {\n          if (faviconFile) {\n            log.warn('Found duplicate favicon file in', pkg.name, 'existing', faviconPackage);\n          }\n          faviconFile = Path.resolve(favicon);\n          faviconPackage = pkg.name;\n        }\n      }\n\n    }\n  });\n  return faviconFile;\n}\n\n"]}