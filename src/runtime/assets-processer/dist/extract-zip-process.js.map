{"version":3,"file":"extract-zip-process.js","sourceRoot":"","sources":["extract-zip-process.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAC/B;;GAEG;AACH,uCAAqC;AACrC,oDAAoB;AACpB,wDAAwB;AACxB,oDAAoB;AACpB,wDAAwB;AACxB,8DAA6B;AAE7B,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,GAAG,EAAE,EAAE;IACtC,2BAA2B;IAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AAEH,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,GAAG,EAAE,EAAE;IACvC,2BAA2B;IAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;IACjB,2BAA2B;IAC5B,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CACzC;AAED,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAE7B,KAAK,UAAU,KAAK;IAClB,MAAM,SAAS,GAAG,YAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACzC,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,cAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;SAClF,GAAG,CAAC,IAAI,CAAC,EAAE;QACV,MAAM,IAAI,GAAG,cAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACxC,OAAO,KAAK,IAAI,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,OAAO,CAAC,GAAG,sBAAsB,IAAI,EAAE,CAAC,CAAC;YAC7D,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,QAAQ,OAAO,CAAC,GAAG,sBAAsB,IAAI,EAAE,EAAC,CAAC,CAAC;YACrF,MAAM,UAAU,CAAC,IAAI,CAAC,CAAC;YACvB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;YACxD,IAAI,YAAY,KAAK,MAAM;gBACzB,YAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC1B,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,QAAQ,OAAO,CAAC,GAAG,qBAAqB,IAAI,EAAE,EAAC,CAAC,CAAC;QACvF,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI;gBACF,MAAM,IAAI,EAAE,CAAC;aACd;YAAC,OAAO,CAAC,EAAE;gBACV,2BAA2B;gBAC/B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;aAC1C;SACF;KACF;SAAM;QACL,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,QAAQ,OAAO,CAAC,GAAG,4BAA4B,EAAC,CAAC,CAAC;KACtF;AACH,CAAC;AAGD,KAAK,UAAU,UAAU,CAAC,IAAY;IACpC,MAAM,IAAI,GAAW,MAAM,YAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACtD,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC1C,MAAM,GAAG,GAAG,IAAI,iBAAM,CAAC,IAAI,CAAC,CAAC;QAC7B,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;YACjD,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,cAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;gBACzD,IAAK,GAAW,CAAC,IAAI,KAAK,QAAQ,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE;oBACtF,2BAA2B;oBAChC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,QAAQ,OAAO,CAAC,GAAG,IAAI,YAAE,CAAC,QAAQ,EAAE,IAAI,YAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,gBAAgB,IAAI,CAAC,KAAK,CAAC,YAAE,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,mBAAmB,IAAI,CAAC,KAAK,CAAC,YAAE,CAAC,QAAQ,EAAE,GAAG,OAAO,CAAC,GAAG,EAAC,CAAC,CAAC;iBAC3M;gBACD,MAAM,CAAC,GAAG,CAAC,CAAC;aACb;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED,KAAK,KAAK,EAAE,CAAC","sourcesContent":["/* eslint-disable no-console */\n/**\n * @deprecated\n */\nimport 'source-map-support/register';\nimport os from 'os';\nimport util from 'util';\nimport fs from 'fs';\nimport Path from 'path';\nimport AdmZip from 'adm-zip';\n\nprocess.on('uncaughtException', (err) => {\n  // eslint-disable-next-line\n  console.log(err);\n  process.send && process.send({error: err});\n});\n\nprocess.on('unhandledRejection', (err) => {\n  // eslint-disable-next-line\n  console.log(err);\n  process.send && process.send({error: err});\n});\n\nif (!process.send) {\n  // eslint-disable-next-line\n\tprocess.send = console.log.bind(console);\n}\n\nconst argv = process.argv;\nconst zipDir = argv[2];\nconst zipExtractDir = argv[3];\nconst deleteOption = argv[4];\n\nasync function start() {\n  const fileNames = fs.readdirSync(zipDir);\n  const proms = fileNames.filter(name => Path.extname(name).toLowerCase() === '.zip')\n  .map(name => {\n    const file = Path.resolve(zipDir, name);\n    return async () => {\n      console.log(`[pid:${process.pid}] start extracting ${file}`);\n      process.send && process.send({log: `[pid:${process.pid}] start extracting ${file}`});\n      await tryExtract(file);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      if (deleteOption !== 'keep')\n        fs.unlinkSync(file);\n      console.log('done', file);\n      process.send && process.send({done: `[pid:${process.pid}] done extracting ${file}`});\n    };\n  });\n  if (proms.length > 0) {\n    for (const prom of proms) {\n      try {\n        await prom();\n      } catch (e) {\n        // eslint-disable-next-line\n\t\t\t\tconsole.log(e);\n        process.send && process.send({error: e});\n      }\n    }\n  } else {\n    process.send && process.send({log: `[pid:${process.pid}] no downloaded file found`});\n  }\n}\n\n\nasync function tryExtract(file: string) {\n  const data: Buffer = await fs.promises.readFile(file);\n  await new Promise<void>((resolve, reject) => {\n    const zip = new AdmZip(data);\n    zip.extractAllToAsync(zipExtractDir, true, (err) => {\n      if (err) {\n        process.send && process.send({error: util.inspect(err)});\n        if ((err as any).code === 'ENOMEM' || err.toString().indexOf('not enough memory') >= 0) {\n          // eslint-disable-next-line\n\t\t\t\t\tprocess.send && process.send({log: `[pid:${process.pid}]${os.hostname()} ${os.userInfo().username} [Free mem]: ${Math.round(os.freemem() / 1048576)}M, [total mem]: ${Math.round(os.totalmem() / 1048576)}M`});\n        }\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nvoid start();\n"]}