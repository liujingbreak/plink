{"version":3,"file":"download-zip-process.js","sourceRoot":"","sources":["download-zip-process.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n// import {ZipResourceMiddleware} from 'serve-static-zip';\nimport request from 'request';\nimport fs from 'fs';\n// import Path from 'path';\n\nconst argv = process.argv;\nconst fetchUrl = argv[2];\nconst fileName = argv[3];\nconst retryTimes = parseInt(argv[4], 10);\n\nprocess.on('uncaughtException', (err) => {\n  // eslint-disable-next-line\n\tconsole.log(err);\n  process.send && process.send({error: err});\n});\n\nprocess.on('unhandledRejection', (err) => {\n  // eslint-disable-next-line\n  console.log(err);\n  process.send && process.send({error: err});\n});\n\nasync function downloadZip(fetchUrl: string) {\n  // eslint-disable-next-line\n\t// log.info(`${os.hostname()} ${os.userInfo().username} download zip[Free mem]: ${Math.round(os.freemem() / 1048576)}M, [total mem]: ${Math.round(os.totalmem() / 1048576)}M`);\n  const resource = fetchUrl + '?' + Math.random();\n  // const downloadTo = api.config.resolve('destDir', `remote-${Math.random()}-${path.split('/').pop()}`);\n  // log.info('fetch', resource);\n  process.send && process.send({log: `[pid:${process.pid}] fetch `+ resource});\n  await retry(async () => {\n    await new Promise<Buffer|null>((resolve, rej) => {\n      const writeStream = fs.createWriteStream(fileName);\n      writeStream.on('finish', () => {\n        process.send && process.send({log: 'zip file is written: ' + fileName});\n        resolve(null);\n      });\n      request({\n        uri: resource, method: 'GET', encoding: null\n      })\n      .on('response', res => {\n        if (res.statusCode > 299 || res.statusCode < 200)\n          return rej(new Error(res.statusCode + ' ' + res.statusMessage));\n      })\n      .on('error', err => {\n        return rej(err);\n      })\n      .pipe(writeStream);\n    });\n    // fs.writeFileSync(Path.resolve(distDir, fileName),\n    // \tbuf);\n    process.send && process.send({log: `${fileName} is written.`});\n    // const zip = new AdmZip(buf);\n    // await tryExtract(zip);\n  });\n}\n\n\n\nasync function retry<T>(func: (...args: any[]) => Promise<T>, ...args: any[]): Promise<T> {\n  for (let cnt = 0;;) {\n    try {\n      return await func(...args);\n    } catch (err) {\n      cnt++;\n      if (cnt >= retryTimes) {\n        throw err;\n      }\n      console.log(err);\n      process.send && process.send({log: 'Encounter error, will retry ' + (err as Error).stack ? err.stack : err});\n    }\n    await new Promise(res => setTimeout(res, cnt * 5000));\n  }\n}\n\ndownloadZip(fetchUrl)\n.catch(err => {\n  process.send && process.send({error: err});\n  process.exit(1);\n});\n"]}