{"version":3,"file":"devServer.js","sourceRoot":"","sources":["devServer.ts"],"names":[],"mappings":";;AACA,sCAAoC;AACpC,MAAM,GAAG,GAAG,IAAA,gBAAQ,EAAC,UAAU,CAAC,CAAC;AAEjC;;;;GAIG;AACH,mBAAwB,aAAyC;IAC/D,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;QAC5B,OAAO;KACR;IACD,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;IAC1C,MAAM,MAAM,GAAG,aAAa,CAAC,SAAS,CAAC,uBAAuB,CAAC;IAC/D,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC;IAE3B,SAAS,CAAC,uBAAuB,GAAG,UAAS,SAAS;QACpD,oCAAoC;QACpC,wFAAwF;QACxF,yDAAyD;QACzD,0FAA0F;QAC1F,uFAAuF;QACvF,sFAAsF;QACtF,mFAAmF;QAEnF,SAAS,CAAC,GAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;YACpC,MAAM,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;YAC1B,0BAA0B;YAC1B,GAAG,CAAC,SAAS,GAAG,UAAS,GAAG,IAAI;gBAC9B,IAAI;oBACF,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;iBAC7B;gBAAC,OAAO,CAAC,EAAE;oBACV,IAAK,CAAS,CAAC,IAAI,KAAK,uBAAuB,EAAE;wBAC/C,GAAG,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;qBAClE;yBAAM;wBACL,MAAM,CAAC,CAAC;qBACT;iBACF;gBACD,OAAO,GAAG,CAAC;YACb,CAAC,CAAC;YACF,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;QACH,IAAI,MAAM;YACR,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACjC,CAAC,CAAC;IACF,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC1B,IAAI,SAAS,CAAC,OAAO,IAAI,IAAI;QAC3B,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;IACzB,kBAAkB;IAClB,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC,GAAG,GAAG,CAAC;IACvD,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC,GAAG,GAAG,CAAC;IACvD,SAAS,CAAC,MAAc,CAAC,KAAK,GAAG,KAAK,CAAC;AAE1C,CAAC;AA7CD,4BA6CC","sourcesContent":["import {Configuration} from 'webpack-dev-server';\nimport {log4File} from '@wfh/plink';\nconst log = log4File(__filename);\n\n/**\n * Avoid process exit when encountering Error like ERR_HTTP_HEADERS_SENT\n * Allow CORS\n * @param webpackConfig \n */\nexport default function(webpackConfig: {devServer: Configuration}) {\n  if (!webpackConfig.devServer) {\n    return;\n  }\n  const devServer = webpackConfig.devServer;\n  const origin = webpackConfig.devServer.onBeforeSetupMiddleware;\n  devServer.host = '0.0.0.0';\n\n  devServer.onBeforeSetupMiddleware = function(devServer) {\n    // To elimiate HMR web socket issue:\n    //   Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    // at ServerResponse.setHeader (_http_outgoing.js:470:11)\n    // at Array.write (/Users/liujing/bk/credit-appl/node_modules/finalhandler/index.js:285:9)\n    // at listener (/Users/liujing/bk/credit-appl/node_modules/on-finished/index.js:169:15)\n    // at onFinish (/Users/liujing/bk/credit-appl/node_modules/on-finished/index.js:100:5)\n    // at callback (/Users/liujing/bk/credit-appl/node_modules/ee-first/index.js:55:10)\n\n    devServer.app!.use((req, res, next) => {\n      const old = res.setHeader;\n      // const oldEnd = res.end;\n      res.setHeader = function(...args) {\n        try {\n          return old.apply(res, args);\n        } catch (e) {\n          if ((e as any).code === 'ERR_HTTP_HEADERS_SENT') {\n            log.warn('Cannot set headers after they are sent to the client');\n          } else {\n            throw e;\n          }\n        }\n        return res;\n      };\n      next();\n    });\n    if (origin)\n      origin.call(this, devServer);\n  };\n  devServer.compress = true;\n  if (devServer.headers == null)\n    devServer.headers = {};\n  // CORS enablement\n  devServer.headers['Access-Control-Allow-Origin'] = '*';\n  devServer.headers['Access-Control-Allow-Headers'] = '*';\n  (devServer.static as any).watch = false;\n\n}\n"]}