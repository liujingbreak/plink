{"version":3,"file":"replace-and-injectSpec.js","sourceRoot":"","sources":["replace-and-injectSpec.ts"],"names":[],"mappings":";;;AAAA,kGAAgE;AAChE,gFAAkC;AAClC,wDAAwB;AAExB,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QACjB,MAAM,EAAE,GAAG,IAAI,0BAAE,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;QAClC,MAAM,QAAQ,GAAG,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,EAAE,2BAA2B,CAAC,CAAC;QACvG,2BAA2B;QAC3B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QACvC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAC1D,MAAM,EAAE,GAAG,IAAA,4BAAgB,EAAC,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,eAAe,EAAE,EAAE,EACnF,QAAQ,EAAE;YACR,SAAS,EAAE;gBACT,MAAM,KAAK,OAAO,UAAU,CAAC,CAAA,CAAC;aAC/B;SACF,CAAC,CAAC;QACH,2BAA2B;QAC3B,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,MAAM,eAAe,GAAG,8CAA8C,CAAC","sourcesContent":["import replaceAndInject from '../../ts/tsjs/replace-and-inject';\nimport RJ from 'require-injector';\nimport Path from 'path';\n\ndescribe('replace-and-inject', () => {\n  it('replace', () => {\n    const rj = new RJ({noNode: true});\n    const tsconfig = Path.resolve(require.resolve('@wfh/plink/package.json'), '../wfh/tsconfig-base.json');\n    // eslint-disable-next-line\n    console.log('tsconfig file', tsconfig);\n    rj.fromDir(__dirname).alias('lodash', 'NOTHING_BUT_LONG');\n    const rs = replaceAndInject(Path.resolve(__dirname, 'mock.ts'), mockFileContent, rj,\n    tsconfig, {\n      __context: {\n        foobar() { return 'REPLACED';}\n      }\n    });\n    // eslint-disable-next-line\n    console.log(rs);\n  });\n});\n\nconst mockFileContent = 'import _ from \\'lodash\\';__context.foobar();';\n"]}