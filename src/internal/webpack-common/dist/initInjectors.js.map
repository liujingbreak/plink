{"version":3,"file":"initInjectors.js","sourceRoot":"","sources":["initInjectors.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,6BAA6B;AAC7B,2BAA2B;AAC3B,8BAA8B;AAC9B,0BAA0B;AAC1B,8DAA8D;AAC9D,wFAAwF;AACxF,kFAAkF;AAElF;;;;GAIG;AACH,8FAA8F;AAC9F,+CAA+C;AAE/C,wCAAwC;AACxC,uDAAuD;AACvD,6CAA6C;AAE7C,iDAAiD;AACjD,6EAA6E;AAE7E,8BAA8B;AAC9B,iBAAiB;AACjB,WAAW;AACX,yFAAyF;AACzF,oFAAoF;AACpF,wCAAwC;AACxC,iBAAiB;AACjB,kEAAkE;AAClE,QAAQ;AACR,QAAQ;AACR,wBAAwB;AACxB,IAAI","sourcesContent":["/**\n * This file has same function of src/internal/ng-app-builder/ts/ng/injector-setup.ts,\n * so probably we should remove this file.\n */\n// import {parse} from 'url';\n// import Path from 'path';\n// // import api from '__api';\n// import _ from 'lodash';\n// // import {createNgRouterPath} from '../../isom/api-share';\n// import {walkPackages } from '@wfh/plink/wfh/dist/package-mgr/package-info-gathering';\n// import {initInjectorForNodePackages} from '@wfh/plink/wfh/dist/package-runner';\n\n/**\n * @deprecated\n * @param deployUrl\n * @param ssr \n */\n// export default async function walkPackagesAndSetupInjector(deployUrl: string, ssr = false):\n//   Promise<ReturnType<typeof walkPackages>> {\n\n//   const packageInfo = walkPackages();\n//   const apiProto = initInjectorForNodePackages()[1];\n//   // await initWebInjector(pks, apiProto);\n\n//   const publicUrlObj = parse(deployUrl || '');\n//   // const baseHrefPath = baseHref ? parse(baseHref).pathname : undefined;\n\n//   Object.assign(apiProto, {\n//     deployUrl,\n//     ssr,\n//     ngBaseRouterPath: publicUrlObj.pathname ? _.trim(publicUrlObj.pathname, '/') : '',\n//     // ngRouterPath: createNgRouterPath(baseHrefPath ? baseHrefPath : undefined),\n//     ssrRequire(requirePath: string) {\n//       if (ssr)\n//         return require(Path.join(this.__dirname, requirePath));\n//     }\n//   });\n//   return packageInfo;\n// }\n\n"]}