{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport util, {isRegExp} from 'util';\nimport Path from 'path';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport _ from 'lodash';\nimport {gt} from 'semver';\nimport {config, PlinkSettings, log4File, ConfigHandlerMgr, findPackagesByNames} from '@wfh/plink';\nimport * as _craPaths from './cra-scripts-paths';\nimport {CommandOption} from './build-options';\nimport {ReactScriptsHandler} from './types';\nconst log = log4File(__filename);\n\nexport const getReportDir = () => config.resolve('destDir', 'cra-scripts.report');\n\nexport function drawPuppy(slogon: string, message?: string) {\n  if (!slogon) {\n    slogon = 'Congrads! Time to publish your shit!';\n  }\n\n  const line = '-'.repeat(slogon.length);\n  console.log('\\n   ' + line + '\\n' +\n    ` < ${slogon} >\\n` +\n    '   ' + line + '\\n' +\n    '\\t\\\\   ^__^\\n\\t \\\\  (oo)\\\\_______\\n\\t    (__)\\\\       )\\\\/\\\\\\n\\t        ||----w |\\n\\t        ||     ||');\n  if (message) {\n    console.log(message);\n  }\n}\n\nexport function printConfig(c: any, level = 0): string {\n  const indent = '  '.repeat(level);\n  let out = '{\\n';\n  for (const prop of Object.keys(c)) {\n    const value = c[prop];\n    out += indent + `  ${JSON.stringify(prop)}: ${printConfigValue(value, level)},\\n`;\n  }\n  out += indent + '}';\n  return out;\n}\n\nfunction printConfigValue(value: any, level: number): string {\n  let out = '';\n  const indent = '  '.repeat(level);\n  if (util.isString(value) || util.isNumber(value) || util.isBoolean(value)) {\n    out += JSON.stringify(value) + '';\n  } else if (Array.isArray(value)) {\n    out += '[\\n';\n    value.forEach((row: any) => {\n      out += indent + '    ' + printConfigValue(row, level + 1);\n      out += ',\\n';\n    });\n    out += indent + '  ]';\n  } else if (typeof value === 'function') {\n    out += value.name + '()';\n  } else if (isRegExp(value)) {\n    out += `${value.toString()}`;\n  } else if (util.isObject(value)) {\n    const proto = Object.getPrototypeOf(value);\n    if (proto && proto.constructor !== Object) {\n      out += `new ${proto.constructor.name as string}()`;\n    } else {\n      out += printConfig(value, level + 1);\n    }\n  } else {\n    out += ' unknown';\n  }\n  return out;\n}\n\n\n// TODO: move to a Redux store\nexport function getCmdOptions(): CommandOption {\n  const cmdOption: CommandOption = JSON.parse(process.env.REACT_APP_cra_build!);\n  if (cmdOption.devMode || cmdOption.watch) {\n    (process.env as any).NODE_ENV = 'development';\n  }\n  return cmdOption;\n}\n\nexport type BuildCliOpts = {\n  watch: boolean;\n  include?: string[];\n  publicUrl?: string;\n  sourceMap?: boolean;\n  poll: boolean;\n  tsck: CommandOption['tsck'];\n} & NonNullable<PlinkSettings['cliOptions']>;\n\nexport function saveCmdOptionsToEnv(pkgName: string, cmdName: string, opts: BuildCliOpts, buildType: 'app' | 'lib'): CommandOption {\n  const completeName = [...findPackagesByNames([pkgName])][0]?.name;\n  if (completeName == null) {\n    throw new Error(`Package named \"${pkgName}\" can not be found`);\n  }\n  const cmdOptions: CommandOption = {\n    cmd: cmdName,\n    buildType,\n    buildTarget: completeName,\n    watch: opts.watch,\n    devMode: !!opts.dev,\n    publicUrl: opts.publicUrl,\n    // external: opts.external,\n    includes: opts.include,\n    webpackEnv: opts.dev ? 'development' : 'production',\n    usePoll: opts.poll,\n    tsck: opts.tsck\n  };\n  if (opts.publicUrl) {\n    (process.env as any).PUBLIC_URL = opts.publicUrl;\n  }\n  if (opts.sourceMap) {\n    log.info('source map is enabled');\n    process.env.GENERATE_SOURCEMAP = 'true';\n  }\n  process.env.REACT_APP_cra_build = JSON.stringify(cmdOptions);\n\n  // stateFactory.configureStore();\n  // config.initSync(cmd.opts() as GlobalOptions);\n  return cmdOptions;\n}\n\nexport function craVersionCheck() {\n  const craPackage = require(Path.resolve('node_modules/react-scripts/package.json')) as {version: string};\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!gt(craPackage.version, '3.4.0')) {\n    throw new Error(`react-scripts version must be greater than 3.4.0, current installed version is ${craPackage.version}`);\n  }\n}\n\nexport function runTsConfigHandlers(compilerOptions: any) {\n  const {getConfigFileInPackage} = require('./cra-scripts-paths') as typeof _craPaths;\n  const configFileInPackage = getConfigFileInPackage();\n  const cmdOpt = getCmdOptions();\n\n  config.configHandlerMgrChanged(mgr => mgr.runEachSync<ReactScriptsHandler>((cfgFile, result, handler) => {\n    if (handler.tsCheckCompilerOptions != null) {\n      log.info('Execute TS compiler option overrides', cfgFile);\n      handler.tsCheckCompilerOptions(compilerOptions, cmdOpt);\n    }\n  }, 'create-react-app ts compiler config'));\n\n  if (configFileInPackage) {\n    const cfgMgr = new ConfigHandlerMgr([configFileInPackage]);\n    cfgMgr.runEachSync<ReactScriptsHandler>((cfgFile, result, handler) => {\n      if (handler.tsCheckCompilerOptions != null) {\n        log.info('Execute TS checker compiler option overrides from ', cfgFile);\n        handler.tsCheckCompilerOptions(compilerOptions, cmdOpt);\n      }\n    }, 'create-react-app ts checker compiler config');\n  }\n}\n\nexport function runTsConfigHandlers4LibTsd() {\n  const compilerOptions = {paths: {}};\n  const {getConfigFileInPackage} = require('./cra-scripts-paths') as typeof _craPaths;\n  const configFileInPackage = getConfigFileInPackage();\n  const cmdOpt = getCmdOptions();\n  const log = log4File(__filename);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  config.configHandlerMgrChanged(mgr => mgr.runEachSync<ReactScriptsHandler>((cfgFile, _result, handler) => {\n    if (handler.libTsdCompilerOptions != null) {\n      log.info('Execute TSD compiler option overrides', cfgFile);\n      handler.libTsdCompilerOptions(compilerOptions, cmdOpt);\n    }\n  }, 'create-react-app ts compiler config'));\n\n  if (configFileInPackage) {\n    const cfgMgr = new ConfigHandlerMgr([configFileInPackage]);\n    cfgMgr.runEachSync<ReactScriptsHandler>((cfgFile, result, handler) => {\n      if (handler.libTsdCompilerOptions != null) {\n        log.info('Execute TSD compiler option overrides from ', cfgFile);\n        handler.libTsdCompilerOptions(compilerOptions, cmdOpt);\n      }\n    }, 'create-react-app ts compiler config');\n  }\n  return compilerOptions;\n}\n\nexport function createCliPrinter(msgPrefix: string) {\n  const flushed$ = new rx.Subject<void>();\n  const progressMsg$ = new rx.Subject<any[]>();\n  const [cols, rows] = process.stdout.getWindowSize();\n  rx.combineLatest(import('string-width'), progressMsg$)\n    .pipe(\n      op.mergeMap(([{default: strWidth}, msg]) => {\n        const textLines = cliLineWrapByWidth(util.format(msgPrefix, ...msg), cols, strWidth);\n        return rx.concat(...textLines.map((text, lineIdx) => Promise.all([\n          new Promise<void>(resolve => process.stdout.cursorTo(0, rows - textLines.length + lineIdx, resolve)),\n          new Promise<void>(resolve => process.stdout.write(text, (_err) => resolve())),\n          new Promise<void>(resolve => process.stdout.clearLine(1, resolve))\n        ])));\n      }),\n      op.map(() => flushed$.next())\n    ).subscribe();\n\n  return (...s: (string | number)[]) => {\n    const flushed = flushed$.pipe(\n      op.take(1)\n    ).toPromise();\n\n    progressMsg$.next(s);\n    return flushed;\n  };\n}\n\nexport function cliLineWrapByWidth(str: string, columns: number, calStrWidth: (str: string) => number) {\n  return str.split(/\\n\\r?/).reduce((lines, line) => {\n    lines.push(...cliLineWrap(line, columns, calStrWidth));\n    return lines;\n  }, [] as string[]);\n}\n\nfunction cliLineWrap(str: string, columns: number, calStrWidth: (str: string) => number) {\n  const lines = [] as string[];\n  let offset = 0;\n  let lastWidthData: [string, number, number] | undefined;\n\n  while (offset < str.length) {\n    // look for closest end position\n    const end = findClosestEnd(str.slice(offset), columns) + 1;\n    const lineEnd = offset + end;\n    lines.push(str.slice(offset, lineEnd));\n    offset = lineEnd;\n  }\n\n  function findClosestEnd(str: string, target: number) {\n    let low = 0, high = str.length;\n    while (high > low) {\n      const mid = low + ((high - low) >> 1);\n      const len = quickWidth(str, mid + 1);\n      // console.log('binary range', str, 'low', low, 'high', high, 'mid', mid, 'len', len);\n      if (target < len) {\n        high = mid;\n      } else if (len < target) {\n        low = mid + 1;\n      } else {\n        return mid;\n      }\n    }\n    // console.log('binary result', high);\n    // Normal binary search should return \"hight\", because it returns the non-existing index for insertion,\n    // but we are looking for an existing index number of whose value (ranking) is smaller than or equal to \"target\",\n    // so \"minus 1\" is needed here\n    return high - 1;\n  }\n\n  /**\n   * @param end - excluded, same as parameter \"end\" in string.prototype.slice(start, end)\n   */\n  function quickWidth(str: string, end: number) {\n    if (lastWidthData && lastWidthData[0] === str) {\n      const lastEnd = lastWidthData[1];\n      if (end > lastEnd) {\n        lastWidthData[2] = lastWidthData[2] + calStrWidth(str.slice(lastEnd, end));\n        lastWidthData[1] = end;\n      } else if (end < lastEnd) {\n        lastWidthData[2] = lastWidthData[2] - calStrWidth(str.slice(end, lastEnd));\n        lastWidthData[1] = end;\n      }\n      return lastWidthData[2];\n    }\n    return calStrWidth(str.slice(0, end));\n  }\n  return lines;\n}\n"]}