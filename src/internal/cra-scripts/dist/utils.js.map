{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport util, {isRegExp} from 'util';\nimport Path from 'path';\nimport _ from 'lodash';\nimport {gt} from 'semver';\nimport {config, PlinkSettings, log4File, ConfigHandlerMgr, findPackagesByNames} from '@wfh/plink';\nimport * as _craPaths from './cra-scripts-paths';\nimport {CommandOption} from './build-options';\nimport {ReactScriptsHandler} from './types';\nconst log = log4File(__filename);\n\nexport const getReportDir = () => config.resolve('destDir', 'cra-scripts.report');\n\nexport function drawPuppy(slogon: string, message?: string) {\n  if (!slogon) {\n    slogon = 'Congrads! Time to publish your shit!';\n  }\n\n  const line = '-'.repeat(slogon.length);\n  console.log('\\n   ' + line + '\\n' +\n    ` < ${slogon} >\\n` +\n    '   ' + line + '\\n' +\n    '\\t\\\\   ^__^\\n\\t \\\\  (oo)\\\\_______\\n\\t    (__)\\\\       )\\\\/\\\\\\n\\t        ||----w |\\n\\t        ||     ||');\n  if (message) {\n    console.log(message);\n  }\n}\n\nexport function printConfig(c: any, level = 0): string {\n  const indent = '  '.repeat(level);\n  let out = '{\\n';\n  for (const prop of Object.keys(c)) {\n    const value = c[prop];\n    out += indent + `  ${JSON.stringify(prop)}: ${printConfigValue(value, level)},\\n`;\n  }\n  out += indent + '}';\n  return out;\n}\n\nfunction printConfigValue(value: any, level: number): string {\n  let out = '';\n  const indent = '  '.repeat(level);\n  if (util.isString(value) || util.isNumber(value) || util.isBoolean(value)) {\n    out += JSON.stringify(value) + '';\n  } else if (Array.isArray(value)) {\n    out += '[\\n';\n    value.forEach((row: any) => {\n      out += indent + '    ' + printConfigValue(row, level + 1);\n      out += ',\\n';\n    });\n    out += indent + '  ]';\n  } else if (typeof value === 'function') {\n    out += value.name + '()';\n  } else if (isRegExp(value)) {\n    out += `${value.toString()}`;\n  } else if (util.isObject(value)) {\n    const proto = Object.getPrototypeOf(value);\n    if (proto && proto.constructor !== Object) {\n      out += `new ${proto.constructor.name as string}()`;\n    } else {\n      out += printConfig(value, level + 1);\n    }\n  } else {\n    out += ' unknown';\n  }\n  return out;\n}\n\n\n// TODO: move to a Redux store\nexport function getCmdOptions(): CommandOption {\n  const cmdOption: CommandOption = JSON.parse(process.env.REACT_APP_cra_build!);\n  if (cmdOption.devMode || cmdOption.watch) {\n    (process.env as any).NODE_ENV = 'development';\n  }\n  return cmdOption;\n}\n\nexport type BuildCliOpts = {\n  watch: boolean;\n  include?: string[];\n  publicUrl?: string;\n  sourceMap?: boolean;\n} & NonNullable<PlinkSettings['cliOptions']>;\n\nexport function saveCmdOptionsToEnv(pkgName: string, cmdName: string, opts: BuildCliOpts, buildType: 'app' | 'lib'): CommandOption {\n\n  const completeName = [...findPackagesByNames([pkgName])][0]?.name;\n  if (completeName == null) {\n    throw new Error(`Package named \"${pkgName}\" can not be found`);\n  }\n  const cmdOptions: CommandOption = {\n    cmd: cmdName,\n    buildType,\n    buildTarget: completeName,\n    watch: opts.watch,\n    devMode: !!opts.dev,\n    publicUrl: opts.publicUrl,\n    // external: opts.external,\n    includes: opts.include,\n    webpackEnv: opts.dev ? 'development' : 'production'\n  };\n  if (opts.publicUrl) {\n    (process.env as any).PUBLIC_URL = opts.publicUrl;\n  }\n  if (opts.sourceMap) {\n    log.info('source map is enabled');\n    process.env.GENERATE_SOURCEMAP = 'true';\n  }\n  process.env.REACT_APP_cra_build = JSON.stringify(cmdOptions);\n\n  // stateFactory.configureStore();\n  // config.initSync(cmd.opts() as GlobalOptions);\n  return cmdOptions;\n}\n\n// function withClicOpt(cmd: commander.Command) {\n//   cmd.option('-w, --watch', 'Watch file changes and compile', false)\n//   .option('--dev', 'set NODE_ENV to \"development\", enable react-scripts in dev mode', false)\n//   .option('--purl, --publicUrl <string>', 'set environment variable PUBLIC_URL for react-scripts', '/');\n//   withGlobalOptions(cmd);\n// }\n\n\nexport function craVersionCheck() {\n  const craPackage = require(Path.resolve('node_modules/react-scripts/package.json')) as {version: string};\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!gt(craPackage.version, '3.4.0')) {\n    throw new Error(`react-scripts version must be greater than 3.4.0, current installed version is ${craPackage.version}`);\n  }\n}\n\nexport function runTsConfigHandlers(compilerOptions: any) {\n  const {getConfigFileInPackage} = require('./cra-scripts-paths') as typeof _craPaths;\n  const configFileInPackage = getConfigFileInPackage();\n  const cmdOpt = getCmdOptions();\n\n  config.configHandlerMgrChanged(mgr => mgr.runEachSync<ReactScriptsHandler>((cfgFile, result, handler) => {\n    if (handler.tsCheckCompilerOptions != null) {\n      log.info('Execute TS compiler option overrides', cfgFile);\n      handler.tsCheckCompilerOptions(compilerOptions, cmdOpt);\n    }\n  }, 'create-react-app ts compiler config'));\n\n  if (configFileInPackage) {\n    const cfgMgr = new ConfigHandlerMgr([configFileInPackage]);\n    cfgMgr.runEachSync<ReactScriptsHandler>((cfgFile, result, handler) => {\n      if (handler.tsCheckCompilerOptions != null) {\n        log.info('Execute TS checker compiler option overrides from ', cfgFile);\n        handler.tsCheckCompilerOptions(compilerOptions, cmdOpt);\n      }\n    }, 'create-react-app ts checker compiler config');\n  }\n}\n\nexport function runTsConfigHandlers4LibTsd() {\n  const compilerOptions = {paths: {}};\n  const {getConfigFileInPackage} = require('./cra-scripts-paths') as typeof _craPaths;\n  const configFileInPackage = getConfigFileInPackage();\n  const cmdOpt = getCmdOptions();\n  const log = log4File(__filename);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  config.configHandlerMgrChanged(mgr => mgr.runEachSync<ReactScriptsHandler>((cfgFile, _result, handler) => {\n    if (handler.libTsdCompilerOptions != null) {\n      log.info('Execute TSD compiler option overrides', cfgFile);\n      handler.libTsdCompilerOptions(compilerOptions, cmdOpt);\n    }\n  }, 'create-react-app ts compiler config'));\n\n  if (configFileInPackage) {\n    const cfgMgr = new ConfigHandlerMgr([configFileInPackage]);\n    cfgMgr.runEachSync<ReactScriptsHandler>((cfgFile, result, handler) => {\n      if (handler.libTsdCompilerOptions != null) {\n        log.info('Execute TSD compiler option overrides from ', cfgFile);\n        handler.libTsdCompilerOptions(compilerOptions, cmdOpt);\n      }\n    }, 'create-react-app ts compiler config');\n  }\n  return compilerOptions;\n}\n"]}