{"version":3,"file":"termux-issue-webpack-plugin.js","sourceRoot":"","sources":["termux-issue-webpack-plugin.ts"],"names":[],"mappings":";;;AAEA,MAAM,UAAU,GAAG,uBAAuB,CAAC;AAE3C,SAAgB,QAAQ;IACtB,OAAO,OAAO,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAC9C,CAAC;AAFD,4BAEC;AAED,MAAa,mBAAmB;IAC9B,KAAK,CAAC,QAAkB;QACtB,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;QACT,MAAM,UAAU,GAAG,EAAc,CAAC;QAClC,KAAK,MAAM,IAAI,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACxC,MAAM,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAClE,GAAG,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAE7C,sCAAsC;YACtC,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,GAAG,CAAC,CAAC;YAChE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;QACD,MAAM,SAAS,GAAG,IAAI,GAAG,CAAS,UAAU,CAAC,CAAC;QAE9C,gCAAgC;QAChC,mFAAmF;QACnF,gCAAgC;QAChC,MAAM;QAEN,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,KAAK,CAAC,EAAE;YACpD,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAE;gBACrD,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACvB,sCAAsC;oBACtC,OAAO,CAAC,GAAG,CAAC,+DAA+D,EAAE,IAAI,CAAC,CAAC;oBACnF,KAAK,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACjD;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AA9BD,kDA8BC","sourcesContent":["import {Compiler, Compilation} from 'webpack';\n\nconst TERMUX_DIR = '/data/data/com.termux';\n\nexport function isTermux() {\n  return process.cwd().startsWith(TERMUX_DIR);\n}\n\nexport class TermuxWebpackPlugin {\n  apply(compiler: Compiler) {\n    if (!isTermux())\n      return;\n    const lookupDirs = [] as string[];\n    for (const item of TERMUX_DIR.split('/')) {\n      const dir = ((lookupDirs.length > 0 ? lookupDirs[lookupDirs.length - 1] : '') +\n                 '/' + item).replace(/^\\/\\//, '/');\n\n      // eslint-disable-next-line no-console\n      console.log('[TermuxIssueWebpackPlugin] Termux directory', dir);\n      lookupDirs.push(dir);\n    }\n    const lookupSet = new Set<string>(lookupDirs);\n\n    // let compilation: Compilation;\n    // compiler.hooks.compilation.tap('TermuxIssueResolve', (compilation0, params) => {\n    //   compilation = compilation0;\n    // });\n\n    compiler.hooks.done.tap('TermuxIssueResolve', stats => {\n      for (const item of stats.compilation.fileDependencies) {\n        if (lookupSet.has(item)) {\n          // eslint-disable-next-line no-console\n          console.log('[TermuxIssueWebpackPlugin] remove unaccessable fileDependency', item);\n          stats.compilation.fileDependencies.delete(item);\n        }\n      }\n    });\n  }\n}\n\n"]}