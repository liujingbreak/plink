{"version":3,"file":"cra-scripts-paths.js","sourceRoot":"","sources":["cra-scripts-paths.ts"],"names":[],"mappings":"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","sourcesContent":["// import {findPackage} from './build-target-helper';\nimport Path from 'node:path';\nimport fs from 'fs';\nimport _ from 'lodash';\n// import type {PlinkEnv} from '@wfh/plink/wfh/dist/node-path';\nimport pCfg from '@wfh/plink/wfh/dist/config';\nimport {ConfigHandlerMgr} from '@wfh/plink/wfh/dist/config-handler';\nimport fsext from 'fs-extra';\nimport {log4File, config, plinkEnv} from '@wfh/plink';\nimport {ReactScriptsHandler, CraScriptsPaths, PKG_LIB_ENTRY_PROP, PKG_LIB_ENTRY_DEFAULT, PKG_APP_ENTRY_PROP,\n  PKG_APP_ENTRY_DEFAULT} from './types';\nimport {getCmdOptions} from './utils';\nconst log = log4File(__filename);\n\nlet craScriptsPaths: CraScriptsPaths;\nlet configFileInPackage: string | undefined | null;\n\nexport function getConfigFileInPackage() {\n  if (configFileInPackage) {\n    return configFileInPackage;\n  } else {\n    paths();\n    return configFileInPackage;\n  }\n}\n\nexport default function paths() {\n  if (craScriptsPaths) {\n    return craScriptsPaths;\n  }\n  const cmdOption = getCmdOptions();\n\n  const paths = require(Path.resolve('node_modules/react-scripts/config/paths')) as CraScriptsPaths;\n  const changedPaths = paths;\n\n  const {pkg: firstEntryPkg, file: firstEntryFile} = cmdOption.buildTargets[0];\n  if (cmdOption.buildType === 'lib') {\n    if (firstEntryPkg == null)\n      throw new Error(`First entry file must be inside a Plink package, ${cmdOption.buildTargets[0].file}`);\n    const packageJson = firstEntryPkg.json;\n    const plinkProps = packageJson.plink ? packageJson.plink : packageJson.dr;\n    const {realPath: pkgDir} = firstEntryPkg!;\n    changedPaths.appBuild = Path.resolve(pkgDir, 'build');\n    changedPaths.appIndexJs = firstEntryFile ?? Path.resolve(pkgDir, _.get(plinkProps, [PKG_LIB_ENTRY_PROP], PKG_LIB_ENTRY_DEFAULT));\n  } else if (cmdOption.buildType === 'app') {\n    if (firstEntryPkg == null)\n      throw new Error(`First entry file must be inside a Plink package, ${cmdOption.buildTargets[0].file}`);\n    const packageJson = firstEntryPkg.json;\n    const plinkProps = packageJson.plink ? packageJson.plink : packageJson.dr;\n    const {realPath: pkgDir} = firstEntryPkg!;\n    changedPaths.appIndexJs = firstEntryFile ?? Path.resolve(pkgDir, _.get(plinkProps, [PKG_APP_ENTRY_PROP], PKG_APP_ENTRY_DEFAULT));\n    // CRA also accepts process.env.BUILD_PATH as appBuild value\n    changedPaths.appBuild = pCfg.resolve('staticDir');\n  } else if (cmdOption.buildType === 'dll') {\n    // const [dllName] = extractDllName(cmdOption.buildTargets);\n    changedPaths.appBuild = pCfg.resolve('staticDir');\n    // changedPaths.appBuild = outputPathForDllName(dllName);\n    changedPaths.appIndexJs = cmdOption.buildTargets[0].file!; // Webpack configuration property entry will be changed in webpack-dll\n  }\n\n  changedPaths.appWebpackCache = Path.join(plinkEnv.distDir, 'webpack-cache');\n  changedPaths.appTsBuildInfoFile = Path.resolve(plinkEnv.distDir, 'cra-scripts.forked-ts-checker.tsbuildinfo.json');\n\n  if (firstEntryPkg) {\n    configFileInPackage = Path.resolve(firstEntryPkg.realPath, _.get(firstEntryPkg.json, ['config-overrides-path'], 'config-overrides.ts'));\n\n    if (fs.existsSync(configFileInPackage)) {\n      const cfgMgr = new ConfigHandlerMgr([configFileInPackage]);\n      cfgMgr.runEachSync<ReactScriptsHandler>((cfgFile, result, handler) => {\n        if (handler.changeCraPaths != null) {\n          log.info('Execute CRA scripts paths configuration overrides from ', cfgFile);\n          handler.changeCraPaths(changedPaths, config().cliOptions!.env!, cmdOption);\n        }\n      });\n    }\n  } else {\n    configFileInPackage = null;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  pCfg.configHandlerMgrChanged(handler => handler.runEachSync<ReactScriptsHandler>((cfgFile, _result, handler) => {\n    if (handler.changeCraPaths != null) {\n      log.info('Execute CRA scripts paths configuration', cfgFile);\n      handler.changeCraPaths(changedPaths, config().cliOptions!.env!, cmdOption);\n    }\n  }));\n  if (!changedPaths.publicUrlOrPath.endsWith('/'))\n    changedPaths.publicUrlOrPath += '/';\n  // eslint-disable-next-line no-console\n  // console.log('[cra-scripts-paths] changed react-scripts paths:\\n', changedPaths);\n  craScriptsPaths = changedPaths;\n  fsext.mkdirpSync(changedPaths.appBuild);\n  // fork-ts-checker needs this file path\n  // process.env._plink_cra_scripts_indexJs = changedPaths.appIndexJs;\n  process.env._plink_cra_scripts_tsConfig = changedPaths.appTsConfig;\n  // log.warn(changedPaths);\n  return changedPaths;\n}\n\n\n"]}