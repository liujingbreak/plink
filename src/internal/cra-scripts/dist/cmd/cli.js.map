{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":";;;;;AACA,wDAAwB;AACxB,iDAAmC;AACnC,sCAAmF;AACnF,sCAAqG;AACrG,wEAA0D;AAC1D,oCAA2D;AAE3D,qCAAqC;AACrC,yCAAyC;AACzC,MAAM,GAAG,GAAG,IAAA,gBAAQ,EAAC,UAAU,CAAC,CAAC;AAEjC,MAAM,GAAG,GAAiB,CAAC,OAAO,EAAE,EAAE;IACpC,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;SAC1C,WAAW,CAAC,0EAA0E,CAAC;SACvF,QAAQ,CAAC,eAAe,EAAE,2EAA2E;QACtG,qCAAqC,CAAC;SACrC,QAAQ,CAAC,0BAA0B,EAAE,0HAA0H,CAAC;SAChK,MAAM,CAAC,aAAa,EAAE,wDAAwD,EAAE,KAAK,CAAC;SACtF,MAAM,CAAC,gCAAgC,EAAE,2FAA2F,EAAE,aAAa,EAAE,EAAE,CAAC;SACxJ,MAAM,CAAC,mCAAmC,EACzC,6JAA6J;QAC/J,2HAA2H;QAC3H,+EAA+E;QAC/E,mHAAmH,EAAE,aAAa,EAAE,EAAE,CAAC;SACtI,MAAM,CAAC,cAAc,EAAE,qHAAqH,EAAE,KAAK,CAAC;SACpJ,MAAM,CAAC,CAAC,IAAI,EAAE,OAAiB,EAAE,EAAE;QAClC,IAAI,OAAO,CAAC,GAAG,EAAE,KAAK,cAAI,CAAC,OAAO,CAAC,gBAAQ,CAAC,OAAO,CAAC,EAAE;YACpD,OAAO,CAAC,KAAK,CAAC,cAAI,CAAC,OAAO,CAAC,gBAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/C;QACD,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAEjE,OAAO,CAAC,6BAA6B,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IACL,WAAW,CAAC,QAAQ,CAAC,CAAC;IAEtB,OAAO,CAAC,OAAO,CAAC,8BAA8B,CAAC;SAC5C,WAAW,CAAC,mGAAmG;QAC9G,0EAA0E,CAAC;SAC5E,QAAQ,CAAC,cAAc,EAAE,2DAA2D,CAAC;SACrF,MAAM,CAAC,KAAK,EAAE,OAAO,EAAiB,EAAE;QACvC,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAClE,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAGL,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;SAC1C,QAAQ,CAAC,0BAA0B,EAAE,sFAAsF,CAAC,CAAE,WAAW,CAAC,2FAA2F,CAAC;SACtO,MAAM,CAAC,iCAAiC,EAAE,2FAA2F,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAA,CAAC,EAAE,EAAc,CAAC;SACxL,MAAM,CAAC,oBAAoB,EAAE,iCAAiC,EAAE,KAAK,CAAC;SACtE,MAAM,CAAC,4BAA4B,EAAE,yDAAyD,EAAE,KAAK,CAAC;SACtG,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE;QAClB,IAAI,OAAO,CAAC,GAAG,EAAE,KAAK,cAAI,CAAC,OAAO,CAAC,gBAAQ,CAAC,OAAO,CAAC,EAAE;YACpD,OAAO,CAAC,KAAK,CAAC,cAAI,CAAC,OAAO,CAAC,gBAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/C;QACD,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAClE,OAAO,CAAC,6BAA6B,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IACL,WAAW,CAAC,QAAQ,CAAC,CAAC;IAEtB,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC;SAC9B,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC;SAC5B,WAAW,CAAC,iCAAiC,CAAC;SAC9C,MAAM,CAAC,KAAK,EAAC,GAAG,EAAC,EAAE;QAClB,CAAC,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEL,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC;SAC3B,KAAK,CAAC,aAAa,CAAC;SACpB,QAAQ,CAAC,UAAU,EAAE,qFAAqF,CAAC;SAC3G,WAAW,CAAC,yBAAyB,CAAC;SACtC,MAAM,CAAC,KAAK,EAAE,UAAkB,EAAE,EAAE;QACnC,MAAM,SAAS,GAAG,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,CAAC;QACpF,sEAAsE;QACtE,MAAM,MAAM,GAAG,OAAO,CAAC,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAW,CAAC;QAErG,MAAM,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE;YACtC,MAAM,EAAE,GAAG,IAAA,oBAAI,EAAC,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;gBAC/C,QAAQ,EAAE,WAAW;gBACrB,cAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC;aACnD,EAAE,EAAC,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,EAAC,CAAC,CAAC;YACtD,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;gBACnB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnB,GAAG,CAAC,GAAG,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,GAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAsDa,sBAAO;AApDtB,SAAS,WAAW,CAAC,GAAsB;IACzC,GAAG,CAAC,MAAM,CAAC,8BAA8B,EAAE,uDAAuD,EAAE,SAAS,CAAC,CAAC;AACjH,CAAC;AAED,SAAS,aAAa,CAAC,IAAY,EAAE,IAA0B;IAC7D,IAAI,IAAI;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,eAAe,CAAC,OAAe,EAAE,IAAkB,EAAE,IAA2B,EAAE,OAAiB;;IAC1G,kBAAoB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAChD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAA,MAAA,IAAA,gCAAU,GAAE,CAAC,OAAO,0CAAE,MAAM,KAAI,IAAI,EAAE;QAChE,OAAO,GAAG,MAAA,IAAA,gCAAU,GAAE,CAAC,OAAO,mCAAI,EAAE,CAAC;KACtC;IACD,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;QACvB,MAAM,IAAI,KAAK,CAAC,oHAAoH,CAAC,CAAC;KACvI;IACD,MAAM,cAAc,GAAG,IAAA,4BAAoB,GAAE,CAAC;IAC9C,MAAM,GAAG,GAAG,cAAM,CAAC;IACnB,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;;QACxC,MAAM,GAAG,GAAG,CAAC,GAAG,IAAA,2BAAmB,EAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,GAAG,EAAE;YACP,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE;gBACjC,wBAAwB;gBACxB,OAAO,EAAC,GAAG,EAAC,CAAC;aACd;iBAAM;gBACL,4BAA4B;gBAC5B,OAAO,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;aACtB;SACF;aAAM;YACL,MAAM,IAAI,GAAG,cAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,GAAG,GAAG,MAAA,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,0CAAE,IAAI,CAAC;YACpD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBACxC,OAAO,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC;aACtB;iBAAM;gBACL,OAAO,EAAC,IAAI,EAAC,CAAC;aACf;SACF;IACH,CAAC,CAAC,CAAC;IACH,IAAA,2BAAmB,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;IACxD,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IAErC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QACzC,GAAG,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;QACpE,OAAO;KACR;IACD,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,CAAoB,CAAC;IACzD,OAAO,CAAC,GAAG,EAAE,CAAC;AAChB,CAAC","sourcesContent":["#!/usr/bin/env node\nimport Path from 'path';\nimport {fork} from 'child_process';\nimport {CliExtension, findPackagesByNames, packageOfFileFactory} from '@wfh/plink';\nimport {config, log4File, plinkEnv, commander, dispatcher as plinkStoreDispatcher} from '@wfh/plink';\nimport {getSetting} from '../../isom/cra-scripts-setting';\nimport {saveCmdOptionsToEnv, BuildCliOpts} from '../utils';\nimport * as _preload from '../preload';\n// import inspector from 'inspector';\n// inspector.open(9222, '0.0.0.0', true);\nconst log = log4File(__filename);\n\nconst cli: CliExtension = (program) => {\n  const buildCmd = program.command('cra-build')\n    .description('Compile react application or library (work with create-react-app v5.0.1)')\n    .argument('<app|lib|dll>', '\"app\" stands for building a complete application like create-react-app,\\n' +\n    '\"lib\" stands for building a library')\n    .argument('[packages_or_entries...]', '(multiple) target packages, the \"scope\" name part can be omitted, or entry file path (for DLL), or module name (for DLL)')\n    .option('-w, --watch', 'when argument is \"lib\", watch file changes and compile', false)\n    .option('--ref-dll,--rd <manifest-file>', 'Reference to DLL manifest file, file can be absolute or relative path to \"dist\" directory', arrayOptionFn, [])\n    .option('-i, --include <module-path-regex>',\n      '(multiple value), when argument is \"lib\", we will set \"external\" property of Webpack configuration for all request not begin with \".\" (not relative path), ' +\n    'meaning all non-relative modules will not be included in the output bundle file, you need to explicitly provide a list in' +\n    ' Regular expression (e.g. -i \\'^someLib(/|$)\\' -i \\'^someLib2(/|$)\\' -i ...) ' +\n    ' to make them be included in bundle file. To make specific module (React) external: -i \\'^(?!react(-dom)?($|/))\\'', arrayOptionFn, [])\n    .option('--source-map', 'set environment variable GENERATE_SOURCEMAP to \"true\" (see https://create-react-app.dev/docs/advanced-configuration', false)\n    .action((type, entries: string[]) => {\n      if (process.cwd() !== Path.resolve(plinkEnv.workDir)) {\n        process.chdir(Path.resolve(plinkEnv.workDir));\n      }\n      runReactScripts(buildCmd.name(), buildCmd.opts(), type, entries);\n\n      require('react-scripts/scripts/build');\n    });\n  withClicOpt(buildCmd);\n\n  program.command('cra-build-tsd <package-name>')\n    .description('Compile packages for only generating Typescript definition files. If you are creating a library, ' +\n      'command \"cra-build\" will also generate tsd file along with client bundle')\n    .argument('package-name', 'target package name, the \"scope\" name part can be omitted')\n    .action(async (pkgName): Promise<void> => {\n      runReactScripts(StartCmd.name(), StartCmd.opts(), 'lib', pkgName);\n      await (await import('../tsd-generate.js')).buildTsd([pkgName]);\n    });\n\n\n  const StartCmd = program.command('cra-start')\n    .argument('<packages_or_entries...>', '(multiple) target packages, the \"scope\" name part can be omitted, or entry file path') .description('Run CRA start script for react application or library (work with create-react-app v5.0.1)')\n    .option('--rd, --ref-dll <manifest-file>', 'Reference to DLL manifest file, file can be absolute or relative path to \"dist\" directory', (v, p) => {p.push(v); return p;}, [] as string[])\n    .option('--use-poll, --poll', 'use Webpack watch option \"poll\"', false)\n    .option('--no-ts-checker, --no-tsck', 'disable forked-ts-checker-webpack-plugin for Typescript', false)\n    .action((entries) => {\n      if (process.cwd() !== Path.resolve(plinkEnv.workDir)) {\n        process.chdir(Path.resolve(plinkEnv.workDir));\n      }\n      runReactScripts(StartCmd.name(), StartCmd.opts(), 'app', entries);\n      require('react-scripts/scripts/start');\n    });\n  withClicOpt(StartCmd);\n\n  program.command('cra-open <url>')\n    .argument('<url>', 'The URL')\n    .description('Run react-dev-utils/openBrowser')\n    .action(async url => {\n      (await import('../cra-open-browser.cjs')).default.default(url);\n    });\n\n  program.command('cra-analyze')\n    .alias('cra-analyse')\n    .argument('[js-dir]', 'Normally this path should be <root-dir>dist/static/<output-path-basename>/static/js')\n    .description('Run source-map-explorer')\n    .action(async (outputPath: string) => {\n      const smePkgDir = Path.dirname(require.resolve('source-map-explorer/package.json'));\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      const smeBin = require(Path.resolve(smePkgDir, 'package.json')).bin['source-map-explorer'] as string;\n\n      await new Promise<any>((resolve, rej) => {\n        const cp = fork(Path.resolve(smePkgDir, smeBin), [\n          '--gzip', '--no-root',\n          Path.resolve(outputPath ? outputPath : '', '*.js')\n        ], {stdio: ['inherit', 'inherit', 'inherit', 'ipc']});\n        cp.on('error', err => {\n          console.error(err);\n          rej(err);\n        });\n        cp.on('exit', (_sign, code) => {resolve(code); });\n      });\n    });\n};\n\nfunction withClicOpt(cmd: commander.Command) {\n  cmd.option('--purl, --publicUrl <string>', 'set environment variable PUBLIC_URL for react-scripts', undefined);\n}\n\nfunction arrayOptionFn(curr: string, prev: string[] | undefined) {\n  if (prev)\n    prev.push(curr);\n  return prev;\n}\n\nfunction runReactScripts(cmdName: string, opts: BuildCliOpts, type: 'app' | 'lib' | 'dll', entries: string[]) {\n  plinkStoreDispatcher.changeActionOnExit('none');\n  if (entries.length === 0 && getSetting().entries?.length != null) {\n    entries = getSetting().entries ?? [];\n  }\n  if (entries.length == 0) {\n    throw new Error('Specifiy at least one \"[packages_or_entries]\" argument in command line or respective property in \"-c\" setting file');\n  }\n  const packageLocator = packageOfFileFactory();\n  const cfg = config;\n  const targetEntries = entries.map(entry => {\n    const pkg = [...findPackagesByNames([entry])][0];\n    if (pkg) {\n      if (pkg.json.plink || pkg.json.dr) {\n        // It is a Plink package\n        return {pkg};\n      } else {\n        // It is a 3rd-party package\n        return {file: entry};\n      }\n    } else {\n      const file = Path.resolve(entry);\n      const pkg = packageLocator.getPkgOfFile(file)?.orig;\n      if (pkg && (pkg.json.plink || pkg.json.dr)) {\n          return {pkg, file};\n      } else {\n        return {file};\n      }\n    }\n  });\n  saveCmdOptionsToEnv(cmdName, opts, type, targetEntries);\n  if (process.env.PORT == null && cfg().port)\n    process.env.PORT = cfg().port + '';\n\n  if (!['app', 'lib', 'dll'].includes(type)) {\n    log.error('type argument must be one of \\'app\\', \\'lib\\', \\'dll\\'');\n    return;\n  }\n  const preload = require('../preload') as typeof _preload;\n  preload.poo();\n}\n\nexport {cli as default};\n\n"]}