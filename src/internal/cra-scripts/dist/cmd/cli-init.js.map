{"version":3,"file":"cli-init.js","sourceRoot":"","sources":["cli-init.ts"],"names":[],"mappings":"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","sourcesContent":["// import parseJson, {Ast} from '@wfh/plink/wfh/dist/utils/json-sync-parser';\n// import replaceCode, {ReplacementInf} from '@wfh/plink/wfh/dist/utils/patch-text';\nimport fs from 'fs';\nimport parse, {ObjectAst} from '@wfh/plink/wfh/dist/utils/json-sync-parser';\nimport replacePatches, {ReplacementInf} from '@wfh/plink/wfh/dist/utils/patch-text';\nimport {logger as log4js} from '@wfh/plink';\nimport _ from 'lodash';\n// import {pathToProjKey} from '@wfh/plink/wfh/dist/package-mgr';\n\nconst log = log4js.getLogger('cra');\n\n// const DEFAULT_DEPS = ['react-app-polyfill', '@wfh/cra-scripts', '@wfh/webpack-common', '@wfh/redux-toolkit-observable',\n//   'axios-observable'];\n\nexport function initTsconfig() {\n  // const {default: parse} = await import('@wfh/plink/wfh/dist/utils/json-sync-parser');\n  overrideTsConfig();\n}\n\nfunction overrideTsConfig() {\n  const baseCompileOptions = JSON.parse(fs.readFileSync(require.resolve('@wfh/plink/wfh/tsconfig-base.json'), 'utf8')).compilerOptions;\n\n  let fileContent = fs.readFileSync('tsconfig.json', 'utf8');\n  const ast = parse(fileContent);\n  const pMap = new Map(ast.properties.map(el => [/^\"(.*)\"$/.exec(el.name.text)![1], el]));\n\n  // Due to react-scripts does not recoganize \"extends\" in tsconfig.json: react-scripts/config/modules.js\n  const currCoPropsAst = (pMap.get('compilerOptions')!.value as ObjectAst).properties;\n  const lastPropEndPos = currCoPropsAst[currCoPropsAst.length - 1].value.end;\n  const currCoMap = new Map(currCoPropsAst.map(el => [/^\"(.*)\"$/.exec(el.name.text)![1], el]));\n  const replacements: ReplacementInf[] = [\n    {\n      start: lastPropEndPos, end: lastPropEndPos,\n      replacement: '\\n'\n    }\n  ];\n\n  for (const [key, value] of Object.entries(baseCompileOptions)) {\n    if (!currCoMap.has(key)) {\n      log.info(`Add compiler option: ${key}:${JSON.stringify(value)}`);\n      replacements.push({\n        start: lastPropEndPos, end: lastPropEndPos,\n        replacement: `,\\n    \"${key}\": ${JSON.stringify(value)}`\n      });\n    }\n  }\n  if (replacements.length === 1) {\n    replacements.splice(0, 1);\n  }\n\n  const coAst = pMap.get('compilerOptions')!.value as ObjectAst;\n  const rootDir = coAst.properties.find(prop => prop.name.text === '\"rootDir\"');\n  if (rootDir == null) {\n    replacements.push({start: coAst.start + 1, end: coAst.start + 1,\n      replacement: '\\n    \"rootDir\": \".\",'});\n  }\n  if (replacements.length > 0) {\n    fileContent = replacePatches(fileContent, replacements);\n    fs.writeFileSync('tsconfig.json', fileContent);\n    log.info('tsconfig.json is updated.');\n  }\n}\n\n\nexport default function initRedux() {\n}\n"]}