{"version":3,"file":"hack-webpack-api.js","sourceRoot":"","sources":["hack-webpack-api.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport Path from 'path';\nimport _webpack from 'webpack';\nimport {log4File} from '@wfh/plink';\nimport chalk from 'chalk';\nimport {getCmdOptions} from './utils';\n// Don't install @types/react-dev-utils, it breaks latest html-webpack-plugin's own type definitions \nconst _formatWebpackMessages = require('react-dev-utils/formatWebpackMessages');\nconst log = log4File(__filename);\n\n/**\n * CRA only has \"build\" command which runs Webpack compiler.run() function, but we want to\n * support \"watch\" function, so hack Webpack's compiler.run() function by replacing it with\n * compiler.watch() function\n */\nexport function hackWebpack4Compiler() {\n  const webpack: typeof _webpack = require(Path.resolve('node_modules/webpack'));\n  if (getCmdOptions().cmd !== 'cra-start' && getCmdOptions().watch) {\n    const hacked = function() {\n      const formatWebpackMessages: typeof _formatWebpackMessages = require('react-dev-utils/formatWebpackMessages');\n      // eslint-disable-next-line prefer-rest-params\n      const compiler: ReturnType<typeof webpack> = webpack.apply(global, arguments as any);\n      // const origRun = compiler.run;\n      compiler.run = (handler) => {\n        return compiler.watch({}, (err, stats) => {\n          let messages: ReturnType<typeof _formatWebpackMessages>;\n          if (err) {\n            if ((err as any)?.details)\n              log.error('Webpack error \"details\":' + (err as any).details);\n            let errMessage = err.message;\n\n            // Add additional information for postcss errors\n            if (Object.prototype.hasOwnProperty.call(err, 'postcssNode')) {\n              errMessage +=\n                '\\nCompileError: Begins at CSS selector ' +\n                (err as any).postcssNode.selector;\n            }\n            messages = formatWebpackMessages({\n              errors: [errMessage],\n              warnings: []\n            } as any);\n          } else if (stats) {\n            messages = formatWebpackMessages(\n              stats.toJson({all: false, warnings: true, errors: true})\n            );\n          }\n          if (messages.errors.length) {\n            // Only keep the first error. Others are often indicative\n            // of the same problem, but confuse the reader with noise.\n            if (messages.errors.length > 1) {\n              messages.errors.length = 1;\n            }\n            console.error(chalk.red(messages.errors.join('\\n\\n')));\n            if (messages.warnings.length) {\n              // eslint-disable-next-line no-console\n              console.log(\n                chalk.yellow(\n                  '\\nTreating warnings as errors because process.env.CI = true.\\n' +\n                    'Most CI servers set it automatically.\\n'\n                )\n              );\n            }\n          }\n        });\n      };\n      return compiler;\n    };\n    return Object.assign(hacked, webpack);\n  } else {\n    // create-react-app doesn't print Webpack's detail error, have to hack it\n    // see https://webpack.js.org/api/node/#error-handling\n    const hacked = function(...args: [any, ...any[]]) {\n      const compiler = webpack(...args);\n      const compileRun = compiler.run;\n      compiler.run = (cb: (err: any, stats: any) => void) => {\n        return compileRun.call(compiler, (err: unknown, stats: unknown) => {\n          if ((err as any)?.details) {\n            log.error('Webpack error \"details\":' + (err as any).details);\n          }\n          cb(err, stats);\n        });\n      };\n      return compiler;\n    };\n    return Object.assign(hacked, webpack);\n  }\n\n}\n"]}