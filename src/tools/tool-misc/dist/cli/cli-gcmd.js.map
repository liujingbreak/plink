{"version":3,"file":"cli-gcmd.js","sourceRoot":"","sources":["cli-gcmd.ts"],"names":[],"mappings":"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","sourcesContent":["import generateStructure from '@wfh/plink/wfh/dist/template-gen';\nimport replaceText from '@wfh/plink/wfh/dist/utils/patch-text';\nimport {findPackagesByNames} from '@wfh/plink/wfh/dist/cmd/utils';\nimport {getState, getStore, actionDispatcher, isCwdWorkspace} from '@wfh/plink/wfh/dist/package-mgr';\nimport parse, {ObjectAst} from '@wfh/plink/wfh/dist/utils/json-sync-parser';\nimport Path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport * as op from 'rxjs/operators';\nimport {GlobalOptions, log4File} from '@wfh/plink';\nimport {getTscConfigOfPkg} from '@wfh/plink/wfh/dist/utils/misc';\nimport * as _tscmd from '@wfh/plink/wfh/dist/ts-cmd';\n\nconst log = log4File(__filename);\nexport interface CBOptions extends GlobalOptions {\n  forTemplate: boolean;\n  dryRun: boolean;\n}\n\nexport async function generate(packageName: string, cmdName: string, opts: CBOptions) {\n  const targetPkgs = Array.from(findPackagesByNames(getState(), [packageName]));\n\n  if (targetPkgs.length === 0) {\n    throw new Error(`Can not find package ${packageName}`);\n  }\n  const targetPkg = targetPkgs[0]!;\n  const pkgTsDirInfo = getTscConfigOfPkg(targetPkg.json);\n\n  const lowerCaseCmdName = cmdName.toLowerCase();\n  const cmdFileName = lowerCaseCmdName.replace(/:/g, '-');\n  const camelCaseCmd = lowerCaseCmdName.replace(/[-:]([a-zA-Z])/g, (match, $1: string) => $1.toUpperCase());\n  if (opts.dryRun) {\n    log.warn('Dryrun mode...');\n  }\n  await generateStructure(Path.resolve(__dirname, '../../template-cligen'),\n    Path.resolve(targetPkg.realPath, pkgTsDirInfo.srcDir),\n    {\n      fileMapping: [ [/foobar/g, cmdFileName] ],\n      textMapping: {\n        foobar: lowerCaseCmdName,\n        foobarId: camelCaseCmd,\n        foobarFile: cmdFileName\n      }\n    }, {dryrun: opts.dryRun});\n\n  const pkJsonFile = Path.resolve(targetPkg.realPath, 'package.json');\n\n  if (opts.dryRun) {\n    log.info(chalk.cyan(pkJsonFile) + ' will be changed.');\n  } else {\n    let text = fs.readFileSync(pkJsonFile, 'utf8');\n    const objAst = parse(text);\n    const plinkProp = objAst.properties.find(prop => prop.name.text === '\"dr\"')\n      || objAst.properties.find(prop => prop.name.text === '\"plink\"');\n    if (plinkProp) {\n      const drProp = plinkProp.value as ObjectAst;\n      if (drProp.properties.map(item => item.name.text).includes('\"cli\"')) {\n        throw new Error(`${pkJsonFile} has already defined a \"cli\" property as executable entry`);\n      }\n      const pkjsonText = replaceText(text, [{\n        text: `\\n    \"cli\": \"${pkgTsDirInfo.destDir}/cli/cli.js#default\"` + (drProp.properties.length > 0 ? ',' : '\\n  '),\n        start: drProp.start + 1,\n        end: drProp.start + 1\n      }]);\n      fs.writeFileSync(pkJsonFile, pkjsonText);\n      log.info(chalk.cyan(pkJsonFile) + 'is changed.');\n\n      if (isCwdWorkspace()) {\n        actionDispatcher.updateWorkspace({dir: process.cwd(), isForce: false, packageJsonFiles: [pkJsonFile]});\n        await getStore().pipe(\n          op.map(s => s.workspaceUpdateChecksum),\n          op.distinctUntilChanged(),\n          op.skip(1),\n          op.take(1)\n        ).toPromise();\n        const {tsc} = require('@wfh/plink/wfh/dist/ts-cmd') as typeof _tscmd;\n        await tsc({package: [packageName], pathsJsons: []});\n      }\n\n    } else {\n      throw new Error(`${pkJsonFile} has no \"dr\" or \"plink\" property, is it an valid Plink package?`);\n    }\n  }\n}\n"]}