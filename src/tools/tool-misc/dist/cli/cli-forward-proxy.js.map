{"version":3,"file":"cli-forward-proxy.js","sourceRoot":"","sources":["cli-forward-proxy.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport net, {Socket} from 'net';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport {log4File, config} from '@wfh/plink';\n// import inspector from 'inspector';\n\n// inspector.open(9222, 'localhost', true);\nconst log = log4File(__filename);\n\nexport function start(port: number, hostMap: Map<string, string> = new Map(),\n  opts?: {\n    /** if host is not in hostMap, forward to this proxy */\n    fallbackProxyHost: string;\n    fallbackproxyPort: number;\n  }) {\n  const server = net.createServer();\n\n  const actions = {\n    proxyToProxy(_remoteHost: string, _remotePort: number, _socket: Socket, _firstPacket: Buffer) {},\n    proxyToRemote(_remoteHost: string, _remotePort: number,\n      _socket: Socket, _firstPacket: Buffer, _isTsl: boolean, _httpProtocal: string) {},\n    socketCreated(_socket: Socket, _msg: string) {}\n  };\n\n  type ActionType<K extends keyof typeof actions> = {\n    type: K;\n    payload: (typeof actions)[K] extends (arg: infer P) => any ? P :\n      (typeof actions)[K] extends (...args: infer A) => any ? A : unknown;\n  };\n\n  const dispatch = {} as {\n    [K in keyof typeof actions]:\n    (...params: Parameters<typeof actions[K]>) => ActionType<K>\n  };\n\n  const action$ = new rx.Subject<ActionType<keyof typeof actions>>();\n  const ofType = <T extends keyof typeof actions>(type: T) => {\n    return (input: rx.Observable<ActionType<keyof typeof actions>>): rx.Observable<ActionType<T>> => {\n      return input.pipe(\n        op.filter(action => action.type === type)\n      ) as rx.Observable<ActionType<T>>;\n    };\n  };\n\n  for (const [key] of Object.entries(actions)) {\n    dispatch[key] = (...params: any[]) => {\n      const action = {\n        type: key as keyof typeof actions,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        payload: params.length === 0 ? params[0] : params\n      };\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      action$.next(action as any);\n    };\n  }\n\n  rx.merge(\n    rx.fromEvent<Socket>(server, 'connection').pipe(\n      op.mergeMap((clientToProxySocket) => {\n        log.debug('Client Connected To Proxy', clientToProxySocket.remoteAddress +\n          ':' + clientToProxySocket.remotePort);\n        return rx.fromEvent<Buffer>(clientToProxySocket, 'data').pipe(\n          op.map(data => ({clientToProxySocket, data})),\n          op.take(1)\n        );\n      }),\n      op.map(({clientToProxySocket, data}) => {\n        const greeting = data.toString();\n        log.info(greeting);\n        const isTLSConnection = greeting.indexOf('CONNECT') !== -1;\n\n        // Considering Port as 80 by default \n        let serverPort = 80;\n        let serverAddress = '';\n        let protocal = 'HTTP/1.1';\n        if (isTLSConnection) {\n          const match = /CONNECT +([^\\s:]+)(?::(\\S+))?(?: +(\\S+))?/.exec(greeting)!;\n          // Port changed to 443, parsing the host from CONNECT \n          serverPort = match[2] ? parseInt(match[2], 10) : 443;\n          serverAddress = match[1];\n          if (match[3])\n            protocal = match[3];\n        } else {\n          // Parsing HOST from HTTP\n          const match = /Host: +([^\\s:]+)(?::(\\S+))?/.exec(greeting);\n          if (match != null) {\n            serverAddress = match[1];\n            serverPort = match[2] ? parseInt(match[2], 10) : 80;\n          }\n        }\n        // log.info('proxy to:', serverAddress + ':' + serverPort);\n        if (serverAddress && hostMap.has(serverAddress)) {\n          const splitted = hostMap.get(serverAddress)!.split(':');\n          serverAddress = splitted[0];\n          if (splitted[1])\n            serverPort = parseInt(splitted[1], 10);\n\n          dispatch.proxyToRemote(serverAddress, serverPort, clientToProxySocket, data, isTLSConnection, protocal);\n        } else if (opts?.fallbackProxyHost) {\n          dispatch.proxyToProxy(opts.fallbackProxyHost, opts.fallbackproxyPort,\n            clientToProxySocket, data);\n        } else if (serverAddress) {\n          dispatch.proxyToRemote(serverAddress, serverPort, clientToProxySocket, data, isTLSConnection, protocal);\n        } else {\n          throw new Error(`unknown server address for ${greeting}`);\n        }\n      })\n    ),\n    action$.pipe(\n      ofType('proxyToProxy'),\n      op.map(({payload: [host, port, clientToProxySocket, data]}) => {\n        const proxyToServerSocket = net.connect({\n          host, port\n        }, () => {\n          log.info('PROXY TO FORBACK proxy connection created', host, ':', port);\n          const connected = proxyToServerSocket.pipe(clientToProxySocket);\n          dispatch.socketCreated(connected, 'Remote proxy reading');\n          proxyToServerSocket.write(data);\n          // Piping the sockets\n          clientToProxySocket.pipe(proxyToServerSocket);\n        });\n        dispatch.socketCreated(proxyToServerSocket, 'remote proxy server connection');\n      })\n    ),\n    action$.pipe(\n      ofType('proxyToRemote'),\n      op.map(({payload: [host, port, clientToProxySocket, data, isTLSConnection, protocal]}) => {\n        const proxyToServerSocket = net.connect({ host, port }, () => {\n          log.info('PROXY TO SERVER connection created', host, ':', port);\n\n          const socket = proxyToServerSocket.pipe(clientToProxySocket);\n          dispatch.socketCreated(socket, 'remote server reading');\n          if (isTLSConnection) {\n            // Send Back OK to HTTPS CONNECT Request\n            clientToProxySocket.write(protocal + ' 200 OK\\r\\n\\n');\n          } else {\n            proxyToServerSocket.write(data);\n          }\n          // Piping the sockets\n          clientToProxySocket.pipe(proxyToServerSocket);\n        });\n        dispatch.socketCreated(proxyToServerSocket, 'remote server connection');\n      })\n    ),\n    action$.pipe(\n      ofType('socketCreated'),\n      op.map(({payload: [proxyToServerSocket, msg]}) => {\n        proxyToServerSocket.on('error', (err) => {\n          if ((err as NodeJS.ErrnoException).code === 'ECONNRESET')\n            log.warn('PROXY TO SERVER ECONNRESET', msg, proxyToServerSocket.remoteAddress, ':', proxyToServerSocket.remotePort, err);\n          else\n            log.error('PROXY TO SERVER ERROR', msg, proxyToServerSocket.remoteAddress, ':', proxyToServerSocket.remotePort, err);\n        });\n        proxyToServerSocket.on('lookup', (err, _addr, _fam, _host) => {\n          if (err)\n            log.warn('lookup error', err);\n        });\n        proxyToServerSocket.on('timeout', () => {\n          log.warn('PROXY TO SERVER timeout', proxyToServerSocket.remoteAddress, ':', proxyToServerSocket.remotePort);\n        });\n      })\n    )\n  ).pipe(\n    op.catchError((err, src) => {\n      log.error('Fatal error', err);\n      return src;\n    })\n  ).subscribe();\n\n  server.on('error', (err) => {\n    log.info('SERVER ERROR');\n    log.info(err);\n  });\n\n  server.on('close', () => {\n    log.info('Client Disconnected');\n  });\n\n  server.listen(port, () => {\n    log.info(`Server runnig at http://${config().localIP}:` + port);\n  });\n\n  return () => {\n    server.close();\n  };\n}\n\n"]}