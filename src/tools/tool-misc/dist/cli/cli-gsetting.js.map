{"version":3,"file":"cli-gsetting.js","sourceRoot":"","sources":["cli-gsetting.ts"],"names":[],"mappings":"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","sourcesContent":["import { findPackagesByNames } from '@wfh/plink';\nimport generateStructure from '@wfh/plink/wfh/dist/template-gen';\nimport {actionDispatcher, PackageInfo} from '@wfh/plink/wfh/dist/package-mgr';\nimport {tsc} from '@wfh/plink/wfh/dist/ts-cmd';\nimport fs from 'fs';\nimport Path from 'path';\nimport plink from '__plink';\nimport _ from 'lodash';\n\nexport async function generateSetting(pkgs: string[], opt: {dryRun: boolean}) {\n  if (opt.dryRun) {\n    plink.logger.info('Dryrun mode');\n  }\n  const pkgsInfo = Array.from(findPackagesByNames(pkgs));\n  let i = 0;\n  const pkgInfoWithJsonFiles: Array<[pkg: PackageInfo, jsonFile: string] | null> =\n    await Promise.all(pkgsInfo.map(async pkgInfo => {\n      if (pkgInfo == null) {\n        plink.logger.error(`Package not found: ${pkgs[i]}`);\n        return null;\n      }\n\n      let camelCased = pkgInfo.shortName.replace(/-([^])/g, (match, g1) => g1.toUpperCase());\n      const upperCaseFirstName = camelCased.charAt(0).toUpperCase() + camelCased.slice(1) + 'Setting';\n\n      const json = _.cloneDeep(pkgInfo.json);\n      const pkgjsonProp = json.dr || json.plink!;\n      if (pkgjsonProp.setting) {\n        plink.logger.warn(`There has been an existing \"${pkgInfo.json.dr ? 'dr' : 'plink'}.setting\" in ${pkgInfo.realPath}/package.json file`);\n        return null;\n      }\n\n      pkgjsonProp.setting = {\n        value: `isom/${pkgInfo.shortName}-setting.js#defaultSetting`,\n        type: `isom/${pkgInfo.shortName}-setting#` + upperCaseFirstName\n      };\n\n      const pkgjsonStr = JSON.stringify(json, null, '  ');\n      const pkgjsonFile = Path.resolve(pkgInfo.realPath, 'package.json');\n\n      let jsonDone: Promise<any>;\n      if (opt.dryRun) {\n        plink.logger.info(`Will write file ${pkgjsonFile}:\\n` + pkgjsonStr);\n        jsonDone = Promise.resolve();\n      } else {\n        jsonDone = fs.promises.writeFile(pkgjsonFile, pkgjsonStr);\n        plink.logger.info(`Write file ${pkgjsonFile}`);\n      }\n\n      const filesDone = generateStructure(Path.resolve(__dirname, '../../template-gsetting'),\n        Path.resolve(pkgInfo.realPath, 'isom'), {\n          fileMapping: [\n            [/foobar/g, pkgInfo.shortName]\n          ],\n          textMapping: {\n            foobarPackage: pkgInfo.name,\n            foobar: camelCased,\n            Foobar: camelCased.charAt(0).toUpperCase() + camelCased.slice(1)\n          }\n        }, {dryrun: opt.dryRun});\n      await Promise.all([jsonDone, filesDone]);\n      return [pkgInfo, pkgjsonFile] as [pkg: PackageInfo, jsonFile: string];\n    }));\n\n  if (!opt.dryRun) {\n    const meta = pkgInfoWithJsonFiles.filter(item => item != null);\n    if (meta.length === 0)\n      return;\n    await tsc({\n      package: meta.map(item => item![0].name)\n    });\n    await new Promise(resolve => setImmediate(resolve));\n    await import('@wfh/plink/wfh/dist/editor-helper');\n    actionDispatcher.scanAndSyncPackages({packageJsonFiles:\n      meta.map(item => item![1])\n    });\n  }\n}\n"]}