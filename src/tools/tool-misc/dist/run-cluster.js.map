{"version":3,"file":"run-cluster.js","sourceRoot":"","sources":["run-cluster.ts"],"names":[],"mappings":";;;;AAAA,wEAAmC;AACnC,qCAA6B;AAC7B,sCAAoC;AAEpC,MAAM,OAAO,GAAG,IAAA,cAAI,GAAE,CAAC,MAAM,CAAC;AAC9B,MAAM,GAAG,GAAG,IAAA,gBAAQ,EAAC,UAAU,CAAC,CAAC;AAEjC,SAAgB,YAAY,CAAC,GAAG,GAAG,OAAO;IACxC,IAAI,GAAG,GAAG,CAAC,EAAE;QACX,GAAG,GAAG,CAAC,CAAC;KACT;IACD,IAAI,sBAAO,CAAC,SAAS,EAAE;QACrB,GAAG,CAAC,IAAI,CAAC,WAAW,OAAO,CAAC,GAAG,aAAa,CAAC,CAAC;QAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAChC,sBAAO,CAAC,IAAI,EAAE,CAAC;SAChB;QACD,sBAAO,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;YAC1C,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;KACJ;AACH,CAAC;AAdD,oCAcC","sourcesContent":["import cluster from 'node:cluster';\nimport {cpus} from 'node:os';\nimport {log4File} from '@wfh/plink';\n\nconst numCPUs = cpus().length;\nconst log = log4File(__filename);\n\nexport function startCluster(num = numCPUs) {\n  if (num < 2) {\n    num = 2;\n  }\n  if (cluster.isPrimary) {\n    log.info(`Primary ${process.pid} is running`);\n\n    for (let i = 0; i < num - 1; i++) {\n      cluster.fork();\n    }\n    cluster.on('exit', (worker, code, signal) => {\n      log.info('Worker', worker.process.pid, 'exits');\n    });\n  }\n}\n"]}