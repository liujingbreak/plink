{"version":3,"file":"cache-service.js","sourceRoot":"","sources":["cache-service.ts"],"names":[],"mappings":"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","sourcesContent":["import Path from 'path';\nimport {IncomingMessage, ServerResponse} from 'http';\nimport stream from 'stream';\nimport url from 'url';\nimport fs from 'fs-extra';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport _ from 'lodash';\nimport {Request, Response, NextFunction} from 'express';\nimport {ServerOptions, createProxyServer} from 'http-proxy';\nimport chalk from 'chalk';\nimport api from '__plink';\nimport {log4File, config} from '@wfh/plink';\n// import { createProxyMiddleware as proxy} from 'http-proxy-middleware';\nimport {createSlice, castByActionType} from '@wfh/redux-toolkit-observable/dist/tiny-redux-toolkit';\nimport {createReplayReadableFactory} from '@wfh/assets-processer/dist/utils';\nimport {httpProxyObservable, observeProxyResponse} from '@wfh/assets-processer/dist/http-proxy-observable';\nimport {ProxyCacheState, CacheData} from './types';\n\n\nconst httpProxyLog = log4File(__filename);\n\nexport function createProxyWithCache(proxyPath: string, serverOptions: ServerOptions, cacheRootDir: string,\n  opts: {manual: boolean; memCacheLength?: number} = {manual: false}) {\n  const defaultProxy = createProxyServer({\n    changeOrigin: true,\n    ws: false,\n    secure: false,\n    cookieDomainRewrite: {'*': ''},\n    followRedirects: true,\n    proxyTimeout: 20000,\n    timeout: 10000,\n    ...serverOptions\n  });\n  const initialState: ProxyCacheState = {\n    cacheDir: cacheRootDir,\n  };\n\n  const proxy$ = httpProxyObservable(defaultProxy);\n\n  if (!opts.manual) {\n    api.expressAppSet(app => {\n      app.use(proxyPath, (req, res, next) => {\n        const key = keyOfUri(req.method, req.url);\n        cacheController.actionDispatcher.hitCache({key, req, res, next});\n      });\n    });\n  }\n  const cacheController = createSlice({\n    initialState,\n    name: `HTTP-proxy-cache-${proxyPath}`,\n    debugActionOnly: config().cliOptions?.verbose,\n    reducers: {\n      configTransformer(s: ProxyCacheState, payload: {\n        remote?: ProxyCacheState['responseTransformer'];\n        cached?: ProxyCacheState['cacheTransformer'];\n      }) {\n        if (payload.remote)\n          s.responseTransformer = payload.remote;\n        if (payload.cached)\n          s.cacheTransformer = payload.cached;\n      },\n      hitCache(s: ProxyCacheState, payload: {\n        key: string; req: Request; res: Response; next: NextFunction;\n        /** override remote target */\n        target?: string;\n      }) {},\n\n      _requestRemoteDone(s: ProxyCacheState, payload: {\n        key: string; reqHost: string | undefined;\n        res: ServerResponse;\n        data: {headers: CacheData['headers']; readable: IncomingMessage};\n      }) {},\n\n      _loadFromStorage(\n        s: ProxyCacheState,\n        payload: {\n          key: string; req: Request; res: Response;\n          next: NextFunction;\n          target?: string;\n        }\n      ) {\n        s.cacheByUri.set(payload.key, 'loading');\n      },\n\n      _requestRemote(s: ProxyCacheState, payload: {\n        key: string; req: Request; res: Response; next: NextFunction;\n        target?: string;\n      }) {\n        s.cacheByUri.set(payload.key, 'requesting');\n      },\n      _savingFile(s: ProxyCacheState, payload: {\n        key: string;\n        res: ServerResponse;\n        data: CacheData;\n      }) {\n        s.cacheByUri.set(payload.key, 'saving');\n      },\n      _done(s: ProxyCacheState, payload: {\n        key: string;\n        res: ServerResponse;\n        data: CacheData;\n      }) {\n        s.cacheByUri.delete(payload.key);\n        // if (payload.data.statusCode !== 304) {\n        //   if (s.cacheByUri.size >= s.memCacheLength) {\n        //     // TODO: improve for LRU algorigthm\n        //     s.cacheByUri.delete(payload.key);\n        //     return;\n        //   }\n        //   s.cacheByUri.set(payload.key, payload.data);\n        // }\n      },\n      _clean(s: ProxyCacheState, key: string) {\n        s.cacheByUri.delete(key);\n      }\n    }\n  });\n\n  cacheController.epic(action$ => {\n    const actions = castByActionType(cacheController.actions, action$);\n    const dispatcher = cacheController.actionDispatcher;\n\n    async function requestingRemote(\n      key: string, reqHost: string | undefined,\n      proxyRes: IncomingMessage,\n      res: ServerResponse,\n      headers: [string, string | string[]][]) {\n\n      httpProxyLog.debug('cache size:', cacheController.getState().cacheByUri.size);\n      const dir = Path.join(cacheController.getState().cacheDir, key);\n      const file = Path.join(dir, 'body');\n      const statusCode = proxyRes.statusCode || 200;\n      const {responseTransformer} = cacheController.getState();\n      if (statusCode === 304) {\n        dispatcher._done({key, res, data: {\n          statusCode, headers, body: createReplayReadableFactory(proxyRes)\n        }\n        });\n        httpProxyLog.warn('Version info is not recorded, due to response 304 from', res.req.url, ',\\n you can remove existing npm/cache cache to avoid 304');\n        return;\n      }\n      if (statusCode !== 200) {\n        httpProxyLog.error(`Response code is ${statusCode} for request:`, res.req.url);\n        dispatcher._done({key, res, data: {statusCode, headers, body: () => proxyRes}});\n        return;\n      }\n\n      if (responseTransformer == null) {\n        const doneMkdir = fs.mkdirp(dir);\n        const readableFac = createReplayReadableFactory(proxyRes, undefined,\n          {debugInfo: key, expectLen: parseInt(proxyRes.headers['content-length'] as string, 10)});\n        // dispatcher._done({key, data: {\n        //       statusCode, headers, body: () => proxyRes\n        //     }, res\n        //   });\n        dispatcher._savingFile({key, data: {\n          statusCode, headers, body: readableFac\n        }, res\n        });\n        await doneMkdir;\n        void fs.promises.writeFile(\n          Path.join(dir, 'header.json'),\n          JSON.stringify({statusCode, headers}, null, '  '),\n          'utf-8');\n\n        try {\n          await new Promise((resolve, reject) => readableFac()\n            .pipe(fs.createWriteStream(file))\n            .on('finish', resolve)\n            .on('error', reject));\n\n          dispatcher._done({key, data: {\n            statusCode, headers, body: readableFac\n          }, res\n          });\n\n          httpProxyLog.info(`response is written to (length: ${headers.find(item => item[0] === 'content-length')![1] as string})`,\n            Path.posix.relative(process.cwd(), file));\n        } catch (e) {\n          httpProxyLog.error('Failed to write cache file ' +\n            Path.posix.relative(process.cwd(), file), e);\n        }\n\n        return;\n      }\n      if (reqHost && !reqHost.startsWith('http')) {\n        reqHost = 'http://' + reqHost;\n      }\n\n      const {readable: transformed, length} = await responseTransformer(headers, reqHost, proxyRes);\n      const lengthHeaderIdx = headers.findIndex(row => row[0] === 'content-length');\n      if (lengthHeaderIdx >= 0)\n        headers[lengthHeaderIdx][1] = '' + length;\n\n      dispatcher._savingFile({key, res, data: {\n        statusCode, headers, body: transformed\n      }});\n\n      await fs.mkdirp(dir);\n      void fs.promises.writeFile(\n        Path.join(dir, 'header.json'),\n        JSON.stringify({statusCode, headers}, null, '  '),\n        'utf-8');\n      await new Promise((resolve, reject) => transformed()\n        .on('end', resolve)\n        .pipe(fs.createWriteStream(file))\n        .on('error', reject));\n\n      dispatcher._done({key, res, data: {\n        statusCode, headers, body: transformed\n      }});\n      httpProxyLog.info('write response to file', Path.posix.relative(process.cwd(), file), 'size', length);\n    }\n\n    return rx.merge(\n      actions.hitCache.pipe(\n        op.mergeMap( ({payload}) => {\n          const waitCacheAndSendRes = actions._done.pipe(\n            // In case it is of redirected request, HPM has done piping response (ignored \"manual reponse\" setting)\n            op.filter(action => action.payload.key === payload.key),\n            op.take(1),\n            op.mergeMap(({payload: {key, res, data}}) => {\n              if (res.writableEnded) {\n                throw new Error('Response is ended early, why?');\n              }\n              for (const entry of data.headers) {\n                res.setHeader(entry[0], entry[1]);\n              }\n              res.statusCode = data.statusCode;\n              const pipeEvent$ = new rx.Subject<'finish' | 'close'>();\n              res.on('finish', () => {\n                pipeEvent$.next('finish');\n              })\n                .on('close', () => {\n                  pipeEvent$.next('close');\n                })\n                .on('error', err => pipeEvent$.error(err));\n\n              data.body().pipe(res);\n              httpProxyLog.info('pipe response of', payload.key);\n\n              return pipeEvent$.pipe(\n                op.filter(event => event === 'finish' || event === 'close'),\n                op.tap(event => {\n                  if (event === 'close')\n                    httpProxyLog.error('Response connection is closed early', key,\n                      'expect content-lenth', data.headers['content-length']);\n                }),\n                op.take(1),\n                op.mapTo(key)\n                // op.timeout(120000),\n                // op.catchError(err => {\n                // httpProxyLog.error(err);\n                // if (!res.headersSent) {\n                // res.statusCode = 500;\n                // res.end();\n                // } else {\n                // res.end();\n                // }\n                // return rx.EMPTY;\n                // })\n              );\n            }),\n            op.tap(key => httpProxyLog.info(`replied: ${key}`))\n          );\n          const item = cacheController.getState().cacheByUri.get(payload.key);\n          httpProxyLog.info('hitCache for ' + payload.key);\n\n          let finished$: rx.Observable<unknown> | undefined;\n\n          if (item == null) {\n            finished$ = rx.merge(\n              waitCacheAndSendRes,\n              rx.defer(() => {\n                dispatcher._loadFromStorage(payload);\n                return rx.EMPTY;\n              })\n            );\n          } else if (item === 'loading' || item === 'requesting' || item === 'saving') {\n            finished$ = waitCacheAndSendRes;\n          } else {\n            httpProxyLog.info('hit cached', payload.key);\n            const transformer = cacheController.getState().cacheTransformer;\n            if (transformer == null) {\n              for (const entry of item.headers) {\n                payload.res.setHeader(entry[0], entry[1]);\n              }\n              payload.res.status(item.statusCode);\n              finished$ = new rx.Observable<void>(sub => {\n                item.body()\n                  .on('end', () => {sub.next(); sub.complete(); })\n                  .pipe(payload.res);\n              });\n            } else {\n              finished$ = rx.from(transformer(item.headers, payload.req.headers.host, item.body())).pipe(\n                op.take(1),\n                op.mergeMap(({readable, length}) => {\n                  const lengthHeaderIdx = item.headers.findIndex(row => row[0] === 'content-length');\n                  if (lengthHeaderIdx >= 0)\n                    item.headers[lengthHeaderIdx][1] = '' + length;\n                  for (const entry of item.headers) {\n                    payload.res.setHeader(entry[0], entry[1]);\n                  }\n                  payload.res.status(item.statusCode);\n                  return stream.promises.pipeline(\n                    readable(), payload.res\n                  );\n                })\n              );\n            }\n          }\n\n          return rx.timer(5000, 5000).pipe(\n            op.takeUntil(finished$),\n            op.map(idx => {\n              const item = cacheController.getState().cacheByUri.get(payload.key);\n              httpProxyLog.info(`${chalk.blue(payload.key)} [${typeof item === 'string' ? item : 'cached'}] has been processed for ${chalk.yellow((idx + 1) * 5 + 's')}`);\n              return item;\n            }),\n            op.count(),\n            op.tap(() => httpProxyLog.info(`${chalk.green(payload.key)} is finished`)),\n            op.timeout(60000),\n            op.catchError((err) => {\n              httpProxyLog.error('Failed to write response', err);\n              return rx.EMPTY;\n            })\n          );\n        }, 5)\n      ),\n      actions._loadFromStorage.pipe(\n        op.mergeMap(async ({payload}) => {\n          try {\n            const dir = Path.join(cacheController.getState().cacheDir, payload.key);\n            const hFile = Path.join(dir, 'header.json');\n            const bFile = Path.join(dir, 'body');\n            if (fs.existsSync(hFile)) {\n              httpProxyLog.info('load', payload.key);\n              const transformer = cacheController.getState().cacheTransformer;\n              if (transformer == null) {\n                const headersStr = await fs.promises.readFile(hFile, 'utf-8');\n                const {statusCode, headers} = JSON.parse(headersStr) as {statusCode: number; headers: [string, string | string[]][]};\n\n                dispatcher._done({key: payload.key, res: payload.res,\n                  data: {\n                    statusCode,\n                    headers,\n                    body: () => fs.createReadStream(bFile)\n                  }});\n                return;\n              }\n\n              const headersStr = await fs.promises.readFile(hFile, 'utf-8');\n              const {statusCode, headers} = JSON.parse(headersStr) as {statusCode: number; headers: [string, string | string[]][]};\n              const {readable, length} = await transformer(headers, payload.req.headers.host, fs.createReadStream(bFile));\n              const lengthHeaderIdx = headers.findIndex(row => row[0] === 'content-length');\n              if (lengthHeaderIdx >= 0)\n                headers[lengthHeaderIdx][1] = '' + length;\n\n              dispatcher._done({key: payload.key,\n                res: payload.res,\n                data: {\n                  statusCode,\n                  headers,\n                  body: readable\n                }});\n            } else {\n              httpProxyLog.info('No existing file for', payload.key);\n              dispatcher._requestRemote(payload);\n            }\n          } catch (ex) {\n            httpProxyLog.error('Failed to save cache for: ' + payload.key, ex);\n            dispatcher._clean(payload.key);\n          }\n        })\n      ),\n      actions._requestRemote.pipe(\n        op.mergeMap(({payload}) => {\n          const proxyOpts: ServerOptions = {};\n          if (payload.target) {\n            proxyOpts.target = payload.target;\n            proxyOpts.ignorePath = true;\n          }\n          return rx.defer(() => {\n            cacheController.getState().proxy.web(payload.req, payload.res, proxyOpts);\n            return observeProxyResponse(proxy$, payload.res);\n          }).pipe(\n            op.mergeMap(({payload: [proxyRes, _req, res]}) => {\n              return requestingRemote(payload.key, payload.req.headers.host, proxyRes, res,\n                Object.entries(proxyRes.headers).filter(entry => entry[1] != null) as [string, string | string[]][]);\n            }),\n            op.catchError(err => {\n              httpProxyLog.warn(`Retry \"${payload.req.url}\"`, err);\n              return rx.timer(1000).pipe(\n                op.mapTo(rx.throwError(err))\n              );\n            }),\n            op.retry(3)\n          );\n        })\n      ),\n      proxy$.proxyReq.pipe(\n        op.tap(({payload: [proxyReq, req, res, opts]}) => {\n          const target = opts.target as url.Url;\n          httpProxyLog.info('Request', target.hostname, target.pathname);\n        })\n      ),\n      proxy$.econnreset.pipe(\n        op.tap(({payload: [err]}) => {\n          httpProxyLog.info('econnreset', err);\n        })\n      )\n    ).pipe(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      op.ignoreElements(),\n      op.catchError((err, src) => {\n        httpProxyLog.error('HTTP proxy cache error', err);\n        return src;\n      })\n    );\n  });\n\n  return cacheController;\n}\n\nexport function keyOfUri(method: string, path: string) {\n  const url = new URL('http://f.com' + path);\n  const key = method + url.pathname + (url.search ? '/' + _.trimStart(url.search, '?') : '');\n  return key;\n}\n"]}