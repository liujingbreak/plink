{"version":3,"file":"cache-service-client.js","sourceRoot":"","sources":["cache-service-client.ts"],"names":[],"mappings":"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","sourcesContent":["import http from 'node:http';\nimport {promises, Writable, Readable} from 'node:stream';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport {log4File} from '@wfh/plink';\nimport {createActionStreamByType, ActionStreamControl, ActionTypes} from '@wfh/redux-toolkit-observable/dist/rx-utils';\n\nconst logClient = log4File(__filename);\nconst logSlice = log4File(__filename, 'rx');\n\ntype ServerResponseMsg = {\n  onRespond<K extends keyof ClientMessage>(type: K, payload: ActionTypes<ClientMessage>[K]['payload'], content: string | Buffer): void;\n  /** subscribed changes */\n  onChange(key: string, value: any): void;\n};\nexport type ClientMessage = {\n  ping(key: string): void;\n  shutdownServer(): void;\n  setForNonexist(key: string, value: any): void;\n  delete(key: string): void;\n  increase(key: string, value: number): void;\n  subscribeKey(key: string): void;\n  unsubscribeKey(key: string): void;\n};\n\nexport type ServerResponseContent = Record<keyof ClientMessage, {success: boolean; error?: string}> & {\n  setForNonexist: {success: boolean; value: unknown; error?: string};\n  increase: {success: boolean; value: unknown; error?: string};\n};\n\nexport type ClientActions = {\n  _reconnectForSubs(): void;\n  _responseEnd(req: http.ClientRequest, resContent: string | Buffer): void;\n  _shutdownSelf(): void;\n} & ClientMessage & ServerResponseMsg;\n\nexport function createClient(opts?: {\n  /** default 1000 */\n  reconnectWaitMs?: number;\n  /** default http://localhost:14401*/\n  serverEndpoint?: string;\n}) {\n  const agent = new http.Agent({keepAlive: true});\n  logClient.info('client is created');\n\n  const slice = createActionStreamByType<ClientActions>({\n    debug: true,\n    log: (...args) => logSlice.debug(...args)\n  });\n  const subscribingKeys$ = new rx.BehaviorSubject<Set<string>>(new Set());\n  rx.merge(\n    slice.actionOfType('subscribeKey').pipe(\n      op.map(({payload}) => {\n        const keys = subscribingKeys$.getValue();\n        if (!keys.has(payload)) {\n          keys.add(payload);\n          subscribingKeys$.next(keys);\n        }\n      })\n    ),\n    slice.actionOfType('unsubscribeKey').pipe(\n      op.map(({payload}) => {\n        const keys = subscribingKeys$.getValue();\n        if (keys.has(payload)) {\n          keys.delete(payload);\n          subscribingKeys$.next(keys);\n        }\n      })\n    ),\n    slice.actionOfType('_reconnectForSubs').pipe(\n      op.subscribeOn(rx.queueScheduler),\n      op.map(() => {\n        subscribingKeys$.next(subscribingKeys$.getValue());\n      })\n    ),\n    subscribingKeys$.pipe(\n      op.filter(keys => keys.size > 0),\n      op.switchMap(() => subscribeKeys(slice, [...subscribingKeys$.getValue().keys()], opts?.reconnectWaitMs != null ? opts.reconnectWaitMs : 1000)),\n      op.map(data => {\n        const json = JSON.parse(data.toString()) as {key: string; value: any};\n        slice.dispatcher.onChange(json.key, json.value);\n      })\n      // TODO: re-create request for subscription after response is ended by server\n    ),\n    slice.action$.pipe(\n      op.filter(\n        act => !slice.isActionType(act, 'subscribeKey') &&\n         !slice.isActionType(act, '_reconnectForSubs') &&\n         !slice.isActionType(act, '_responseEnd') &&\n         !slice.isActionType(act, 'onRespond') &&\n         !slice.isActionType(act, 'onChange')\n      ),\n      op.mergeMap(act => new rx.Observable<string | Buffer>(sub => {\n        const req = http.request(opts?.serverEndpoint || 'http://localhost:14401/cache', {\n          method: 'POST',\n          agent\n        }, res => {\n          logClient.debug('client recieving');\n          void readToBuffer(res).then(content => {\n            sub.next(content);\n            sub.complete();\n          });\n        });\n        if (req.reusedSocket) {\n          logClient.debug('Socket is reused for', act.type, act.payload);\n        }\n        req.on('error', err => {\n          if (req.reusedSocket && (err as unknown as {code: string}).code === 'ECONNRESET') {\n            logClient.info('Connection closed by server \"ECONNRESET\", retry request');\n            sub.complete();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            (slice.dispatchFactory(act.type as keyof ClientActions) as any)(act.payload as string);\n          } else {\n            setTimeout(() => sub.error(err), 2000);\n          }\n        });\n        const requestBody = {...act, type: slice.nameOfAction(act)};\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        (requestBody as any).client = process.pid;\n        req.end(JSON.stringify(requestBody));\n      }).pipe(\n        op.map(out => {\n          slice.dispatcher.onRespond(slice.nameOfAction(act)! as keyof ClientMessage, act.payload as any, out);\n          // if (slice.isActionType(act, 'shutdownServer'))\n          //   slice.dispatcher._shutdownSelf();\n        }),\n        op.catchError((err, src) => {\n          logClient.error('Error in action: ' + slice.nameOfAction(act), err);\n          return src;\n        })\n      ))\n    ),\n    slice.actionOfType('onRespond').pipe(\n      op.map(({payload}) => {\n        logClient.info('Recieved', payload);\n      })\n    ),\n    slice.actionOfType('onChange').pipe(\n      op.filter(({payload: [key, value]}) => key === '__SERVER' && value === 'shutting'),\n      op.take(1),\n      op.map(() => slice.dispatcher._shutdownSelf())\n    )\n  ).pipe(\n    op.takeUntil(slice.actionOfType('_shutdownSelf')),\n    op.catchError((err, src) => {\n      logClient.error('client', err);\n      return src;\n    })\n  ).subscribe();\n\n  slice.dispatcher.subscribeKey('__SERVER');\n  return {\n    ...slice,\n    serverReplied<K extends keyof ClientMessage>(\n      actType: K,\n      predicate: (payload: ActionTypes<ClientMessage>[K]['payload'], content: string | Buffer) => boolean\n    ) {\n      return slice.actionOfType('onRespond').pipe(\n        op.filter(({payload: [type, payload, content]}) => type === actType && predicate(payload as ActionTypes<ClientMessage>[K]['payload'], content)),\n        op.take(1)\n      ).toPromise();\n    }\n  };\n}\n\n\nfunction subscribeKeys(slice: ActionStreamControl<ClientActions>, keys: string[], reconnectWaitMs: number) {\n  const longPollAgent = new http.Agent({keepAlive: true});\n\n  const send$ = new rx.Subject();\n  const request$ = new rx.Subject<http.ClientRequest>();\n  const response$ = new rx.BehaviorSubject<'wait' | http.IncomingMessage | 'end'>('wait');\n  const data$ = new rx.Subject<Buffer>();\n\n  function doRequest() {\n    response$.next('wait');\n    const req = http.request('http://localhost:14401/cache', {\n      method: 'POST',\n      agent: longPollAgent,\n      headers: {\n        'Transfer-Encoding': 'chunked'\n      }\n    }, res => {\n      response$.next(res);\n      logClient.info('client recieving');\n      res.on('end', () => {\n        response$.next('end');\n      });\n      res.on('data', (chunk) => data$.next(chunk));\n      res.on('error', err => {\n        response$.error(err);\n      });\n    });\n    request$.next(req);\n    req.on('error', err => {\n      if (req.reusedSocket && (err as unknown as {code: string}).code === 'ECONNRESET') {\n        logClient.info('Connection closed by server \"ECONNRESET\", create new request');\n        slice.dispatcher._reconnectForSubs();\n      } else {\n        request$.error(err);\n      }\n    });\n    req.end(JSON.stringify({\n      type: 'subscribe',\n      payload: {\n        client: '' + process.pid,\n        keys\n      }\n    }));\n  }\n\n  return rx.merge(\n    send$.pipe(\n      op.map(() => doRequest()),\n      op.ignoreElements()\n    ),\n    response$.pipe(\n      op.filter(s => s === 'end'),\n      op.concatMap(() => rx.timer(reconnectWaitMs)),\n      op.map(() => send$.next()),\n      op.ignoreElements()\n    ),\n    rx.combineLatest(request$, response$).pipe(\n      op.takeLast(1), // on unsubscribed\n      op.map(([req, res]) => {\n        if (res === 'wait') {\n          logClient.info('Destroy subscription request');\n          req.destroy();\n        } else if (res !== 'end' && res != null) {\n          logClient.info('Abort subscription response');\n          res.destroy();\n        }\n      }),\n      op.ignoreElements()\n    ),\n    data$,\n    rx.defer(() => send$.next()).pipe(\n      op.ignoreElements()\n    )\n  ).pipe(\n    op.catchError((err, src) => {\n      logClient.warn('subscription error', err);\n      return rx.timer(2000).pipe(op.concatMap(() => src));\n    })\n  );\n}\n\nasync function readToBuffer(input: Readable) {\n  const buf = [] as Array<string | Buffer>;\n  const writable = new Writable({\n    write(chunk: Buffer, enc, cb) {\n      buf.push(chunk);\n      cb();\n    },\n    final(cb) {\n      cb();\n    }\n  });\n\n  await promises.pipeline(input, writable);\n  if (buf.length > 0 && Buffer.isBuffer(buf[0]))\n    return Buffer.concat(buf as Buffer[]).toString();\n  else\n    return (buf as string[]).join('');\n}\n"]}