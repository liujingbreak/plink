{"version":3,"file":"npm-registry-cache-service.js","sourceRoot":"","sources":["npm-registry-cache-service.ts"],"names":[],"mappings":"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","sourcesContent":["import Path from 'path';\nimport os from 'os';\nimport {Transform, Writable, Readable, promises as streamProm} from 'stream';\nimport fs from 'fs';\nimport zlib from 'zlib';\nimport {config, log4File, ExtensionContext} from '@wfh/plink';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport {Request, Response} from 'express';\nimport ProxyAgent from 'proxy-agent';\nimport {createSlice, castByActionType} from '@wfh/redux-toolkit-observable/dist/tiny-redux-toolkit';\nimport chalk from 'chalk';\nimport {CacheData, NpmRegistryVersionJson, TarballsInfo, Transformer} from './types';\nimport {createProxyWithCache} from './cache-service';\n// import insp from 'inspector';\n// insp.open(9222, '0.0.0.0', true);\nconst isWin = os.platform().indexOf('win32') >= 0;\nconst log = log4File(__filename);\n\ntype PkgDownloadRequestParams = {\n  pkgName: string;\n  version: string;\n};\n\nexport default function createNpmRegistryServer(api: ExtensionContext): (() => Promise<void>) | undefined {\n  const setting = config()['@wfh/assets-processer'].npmRegistryCacheServer;\n  if (setting == null)\n    return;\n  const DEFAULT_HOST = setting.host || (`http://localhost${config().port !== 80 ? ':' + config().port : ''}`);\n  const STATE_FILE = Path.resolve(setting.cacheDir || config.resolve('destDir'), 'npm-registry-cache.json');\n\n  const servePath = Path.posix.join(setting.path || '/registry', 'versions');\n  const envVarDesc = `${isWin ? 'set' : 'export'} npm_config_registry=http://${config().localIP}:${config().port}${servePath}`;\n  log.info('NPM registry cache is serving at ', servePath, '\\n' +\n    `You can set environment variable: ${chalk.cyan(envVarDesc)}`);\n\n  const versionsCacheCtl = createProxyWithCache(servePath, {\n      selfHandleResponse: true,\n      target: setting.registry || 'https://registry.npmjs.org',\n      agent: setting.proxy ? new ProxyAgent(setting.proxy) : undefined\n    },\n    Path.posix.join(setting.cacheDir || config.resolve('destDir'), 'versions')\n  );\n\n  const tarballDir = Path.resolve(setting.cacheDir || config.resolve('destDir'), 'download-tarballs');\n  const pkgDownloadRouter = api.express.Router();\n  const serveTarballPath = Path.posix.join(setting.path || '/registry', '_tarballs');\n\n  api.expressAppSet(app => app.use(serveTarballPath, pkgDownloadRouter));\n\n  pkgDownloadRouter.get<PkgDownloadRequestParams>('/:pkgName/:version', (req, res) => {\n    pkgDownloadCtl.actionDispatcher.fetchTarball({\n      req, res, pkgName: req.params.pkgName, version: req.params.version});\n  });\n\n  const pkgDownloadCtl = createSlice({\n    name: 'pkgCache',\n    initialState: {} as TarballsInfo,\n    reducers: {\n      load(s: TarballsInfo, data: TarballsInfo) {\n        Object.assign(s, data);\n      },\n      add(s: TarballsInfo, payload: {pkgName: string; versions: {[version: string]: string}}) {\n        let pkgEntry = s[payload.pkgName];\n        if (pkgEntry == null)\n          s[payload.pkgName] = payload.versions;\n        else\n          s[payload.pkgName] = {...pkgEntry, ...payload.versions};\n      },\n      fetchTarball(_s: TarballsInfo,\n        _payload: {req: Request<PkgDownloadRequestParams>; res: Response; pkgName: string; version: string}) {\n      }\n    },\n    debugActionOnly: !!config().cliOptions?.verbose\n  });\n\n  pkgDownloadCtl.epic(action$ => {\n    const actionByType = castByActionType(pkgDownloadCtl.actions, action$);\n    // const fetchActionState = new Map<string, Response[]>();\n    // map key is host name of remote tarball server\n    // const cacheSvcByOrigin = new Map<string, ReturnType<typeof createProxyWithCache>>();\n    const tarballCacheSerivce = createProxyWithCache('', {followRedirects: true, selfHandleResponse: true},\n      tarballDir);\n\n    if (fs.existsSync(STATE_FILE)) {\n      void fs.promises.readFile(STATE_FILE, 'utf-8')\n      .then(content => {\n        log.info('Read cache state file:', STATE_FILE);\n        pkgDownloadCtl.actionDispatcher.load(JSON.parse(content));\n      });\n    }\n\n    return rx.merge(\n       actionByType.fetchTarball.pipe(\n        op.mergeMap(({payload}) => {\n          return pkgDownloadCtl.getStore().pipe(\n            op.map(s => _.get(s, [payload.pkgName, payload.version])),\n            op.distinctUntilChanged(),\n            op.filter(value => value != null),\n            op.take(1),\n            op.map(url => {\n              log.info('incoming request download', url);\n              try {\n                tarballCacheSerivce.actionDispatcher.hitCache({\n                  key: url.replace(/^https?:\\//g, ''),\n                  req: payload.req, res: payload.res,\n                  next: () => {},\n                  target: url\n                });\n              } catch (e) {\n                log.error('Failed for download URL:' + url, e);\n                throw e;\n              }\n            })\n          );\n        })\n      )\n    ).pipe(\n      op.ignoreElements(),\n      op.catchError((err, src) => {\n        log.error(err);\n        return src; // re-subsribe on fail\n      })\n    );\n  });\n\n  versionsCacheCtl.actionDispatcher.configTransformer({\n    remote: createTransformer(true),\n    cached: createTransformer(false)\n  });\n\n  function createTransformer(trackRemoteUrl: boolean): Transformer {\n    return async (headers: CacheData['headers'], reqHost: string | undefined,\n      source: NodeJS.ReadableStream) => {\n      let fragments = '';\n      let bufLength = 0;\n      const subject = new rx.ReplaySubject<Buffer>();\n      let decompress: NodeJS.ReadWriteStream | undefined;\n      let compresser: NodeJS.ReadWriteStream | undefined;\n      const encodingHeader = headers.find(([name]) => name === 'content-encoding');\n      const contentEncoding = encodingHeader ? encodingHeader[1] : '';\n      switch (contentEncoding) {\n        case 'br':\n          decompress = zlib.createBrotliDecompress();\n          compresser = zlib.createBrotliCompress();\n          break;\n        // Or, just use zlib.createUnzip() to handle both of the following cases:\n        case 'gzip':\n          decompress = zlib.createGunzip();\n          compresser = zlib.createGzip();\n          break;\n        case 'deflate':\n          decompress = zlib.createInflate();\n          compresser = zlib.createDeflate();\n          break;\n        default:\n      }\n      const transformers: any[] = decompress ? [decompress] : [];\n      const processTrans = new Transform({\n        transform(chunk, _encode, cb) {\n          if (Buffer.isBuffer(chunk)) {\n            fragments += chunk.toString();\n          } else {\n            fragments += chunk as string;\n          }\n          cb();\n        },\n        flush(cb) {\n          if (fragments.length === 0) {\n            return cb(null, '');\n          }\n          try {\n            const json = JSON.parse(fragments) as NpmRegistryVersionJson;\n            const param: {[ver: string]: string} = {};\n\n            if (json.versions) {\n              for (const [ver, versionEntry] of Object.entries(json.versions)) {\n                const origTarballUrl = param[ver] = versionEntry.dist.tarball;\n                const urlObj = new URL(origTarballUrl);\n                const url = versionEntry.dist.tarball = (reqHost || DEFAULT_HOST) +\n                  `${serveTarballPath}/${encodeURIComponent(json.name)}/${encodeURIComponent(ver)}${urlObj.search}`;\n                if (!url.startsWith('http'))\n                  versionEntry.dist.tarball = 'http://' + url;\n              }\n              if (trackRemoteUrl)\n                pkgDownloadCtl.actionDispatcher.add({pkgName: json.name, versions: param});\n\n              cb(null, JSON.stringify(json));\n            } else {\n              log.info('Skip transform', fragments);\n              cb(null, fragments);\n            }\n\n          } catch (e) {\n            log.error(fragments, e);\n            return cb(null, '');\n          }\n        }\n      });\n      transformers.push(processTrans);\n      if (compresser)\n        transformers.push(compresser);\n\n      transformers.push( new Writable({\n          write(chunk_1, _enc, cb_2) {\n            const buffer = Buffer.isBuffer(chunk_1) ? chunk_1 : Buffer.from(chunk_1 as string);\n            bufLength += buffer.length;\n            subject.next(buffer);\n            cb_2();\n          },\n          final(cb_3) {\n            subject.complete();\n            cb_3();\n          }\n        })\n      );\n      // NodeJS bug: https://github.com/nodejs/node/issues/40191:\n      // stream.promises.pipeline doesn't support arrays of streams since node 16.10\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n      const done: Promise<unknown> = (streamProm.pipeline as any)(source, ...transformers);\n      await done;\n\n      return {\n        length: bufLength,\n        readable: () => new Readable({\n          read() {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const self = this;\n            subject.subscribe({\n              next(buf) {\n                self.push(buf);\n              },\n              error(err) {\n                self.destroy(err);\n              },\n              complete() {\n                self.push(null);\n              }\n            });\n          }\n        })\n      };\n    };\n  }\n\n  return () => {\n    log.info('Save changed', STATE_FILE);\n    return fs.promises.writeFile(STATE_FILE, JSON.stringify(pkgDownloadCtl.getState(), null, '  '));\n  };\n}\n"]}