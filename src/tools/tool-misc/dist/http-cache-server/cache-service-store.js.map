{"version":3,"file":"cache-service-store.js","sourceRoot":"","sources":["cache-service-store.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/indent */\n/**\n * To support cluster mode, this module should run inside Master process\n */\nimport http from 'node:http';\nimport {promises, Writable} from 'node:stream';\nimport * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\nimport {log4File} from '@wfh/plink';\nimport {ActionTypes, createActionStreamByType} from '@wfh/redux-toolkit-observable/dist/rx-utils';\nimport {ClientMessage, ServerResponseContent} from './cache-service-client';\n\nconst log = log4File(__filename);\nconst logSlice = log4File(__filename, 'rx');\n\ntype ServerActions = {\n  listening(): void;\n  shutdown(): void;\n  request(req: http.IncomingMessage, res: http.ServerResponse<http.IncomingMessage>): void;\n  emitStateChange(clientId: string, key: string, value: any): void;\n  onClientSubscribe(clientId: string, keys: string[], res: http.OutgoingMessage): void;\n  onClientUnsubscribe(clientId: string, keys: Set<string> | null): void;\n  /** Temporarily cut off response */\n  endSubscribeRes(clientId: string): void;\n  onSubscribeResClosed(res: http.OutgoingMessage): void;\n  // keepSubsAlive(clientId: string, key: string): void;\n  // sendChange(clientId: string, key: string, value: any): void;\n  subscribeResExpired(clientId: string, res: http.OutgoingMessage): void;\n  error(err: Error): void;\n};\n\ntype RequestBody<\n  T extends 'subscribe' | Exclude<keyof ClientMessage, 'subscribeKey'> =\n  'subscribe' | Exclude<keyof ClientMessage, 'subscribeKey'>\n> = T extends 'subscribe' ? {\n  type: 'subscribe';\n  payload: {\n    client: number;\n    keys: string[];\n  };\n} : T extends Exclude<keyof ClientMessage, 'subscribeKey'> ? {\n  type: T;\n  client: number;\n  payload: ActionTypes<ClientMessage>[T]['payload'];\n} : unknown;\n\ntype ServerState = {\n  responseByClientId: Map<string, http.OutgoingMessage | null>;\n};\n\nexport function startStore(opts?: {reconnInterval?: number}) {\n  const slice = createActionStreamByType<ServerActions>({\n    debug: false,\n    log: (...args) => logSlice.debug(...args)\n  });\n  const server = http.createServer({keepAlive: true});\n  const reconnInterval = opts?.reconnInterval || 60000;\n  server.keepAliveTimeout = 60000;\n  server.listen(14401);\n  server.once('listening', () => slice.dispatcher.listening());\n  server.on('error', err => slice.dispatcher.error(err));\n  server.on('request', (req, res) => slice.dispatcher.request(req, res));\n\n  // key is clientId + ':' + data key, value is changed data value\n  const subscribedMsgQByObsKey = new Map<string, {\n    changedValue$: rx.Observable<any>;\n  }>();\n\n  const state$ = new rx.BehaviorSubject<ServerState>({\n    responseByClientId: new Map()\n  });\n\n  const store = new rx.BehaviorSubject<Map<string, any>>(new Map());\n  rx.merge(\n    slice.actionOfType('request').pipe(\n      op.mergeMap(async ({payload: [req, res]}) => {\n        log.debug('on request ' + req.method, req.url);\n        if (req.url === '/cache' && req.method === 'POST') {\n          let jsonStr = '';\n          const writable = new Writable({\n            write(chunk, _encoding, callback) {\n              jsonStr += (chunk as Buffer).toString('utf-8');\n              callback(null);\n            },\n            final(cb) {\n              cb(null);\n            }\n          });\n          await promises.pipeline(req, writable);\n          onMessage(jsonStr, res);\n        }\n      })\n    ),\n    slice.actionOfType('error').pipe(\n      op.map(err => log.warn('[server] runtime error', err))\n    ),\n    slice.actionOfType('onClientSubscribe').pipe(\n      op.mergeMap(({payload: [client, keys, res]}) => {\n        state$.getValue().responseByClientId.set(client, res);\n        state$.next(state$.getValue());\n        const hClose = () => {\n          const byClient = state$.getValue().responseByClientId;\n          byClient.delete(client);\n          state$.next((state$.getValue()));\n        };\n        res.once('close', hClose);\n\n        return rx.merge(\n          // Remove \"close\" event listener from response\n          slice.actionOfType('endSubscribeRes').pipe(\n            op.map(({payload: clientId}) => {\n              const byClient = state$.getValue().responseByClientId;\n              return byClient.get(clientId);\n            }),\n            op.filter(res0 => res0 === res),\n            op.map(() => res.off('close', hClose))\n          ),\n          state$.pipe(\n            op.map(s => s.responseByClientId.get(client)),\n            op.distinctUntilChanged(),\n            op.switchMap(\n              res => rx.timer(res == null ? 2 * 60000 : reconnInterval)\n               .pipe(op.mapTo(res))\n            ),\n            op.map(res => {\n              if (res == null) {\n                // client does not reconnect, consider as \"unsubscribe\"\n                slice.dispatcher.onClientUnsubscribe(client, new Set(keys));\n              } else {\n                logSlice.info('time to end response for', client, keys);\n                slice.dispatcher.endSubscribeRes(client);\n              }\n            })\n          ),\n          rx.from(keys).pipe(\n            op.mergeMap(key => {\n              const observeKey = client + ':' + key;\n              if (!subscribedMsgQByObsKey.has(observeKey)) {\n                const changedValue$ = store.pipe(\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                  op.map(s => s.get(key)),\n                  // op.filter(value => value != null),\n                  op.distinctUntilChanged()\n                );\n                subscribedMsgQByObsKey.set(observeKey, {changedValue$});\n\n                return rx.merge(\n                  changedValue$.pipe(\n                    op.buffer(\n                      rx.combineLatest(\n                        changedValue$.pipe(op.observeOn(rx.asyncScheduler)),\n                        // It is important \"asyncScheduler\" being applied here to delay emitting (ensure it emits \"changedValue$\" slightly slower than the upstream changedValue$,\n                        // make sure buffer() can work properly\n                        state$.pipe(op.map(s => s.responseByClientId.get(client)))\n                      ).pipe(\n                        op.filter(([, res]) => res != null)\n                      )\n                    ),\n                    op.filter(values => values.length > 0), // skip in case of no value changed between two subscription requests from client side\n                    op.map(values => {\n                      log.info('value changed for client', client, key, values);\n                      const res = state$.getValue().responseByClientId.get(client);\n                      for (const value of values) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        res!.write(JSON.stringify({key, value}));\n                        // slice.dispatcher.sendChange(client, key, value);\n                      }\n                    })\n                  )\n                ).pipe(\n                  op.takeUntil(slice.actionOfType('onClientUnsubscribe').pipe(\n                    op.filter(({payload: [clientId, unsubscribeKeys]}) => clientId === client && (key == null || unsubscribeKeys == null || unsubscribeKeys.has(key))),\n                    op.tap(({payload: [clientId, unsubscribeKey]}) => {\n                      log.info(`unsubscribed from ${clientId}: ${unsubscribeKey ? [...unsubscribeKey.values()].join() : '' || 'all'}`);\n                    })\n                  ))\n                );\n              } else {\n                return rx.EMPTY;\n              }\n            })\n          )\n        );\n      })\n    ),\n    slice.actionOfType('endSubscribeRes').pipe(\n      op.map(({payload: clientId}) => {\n        const byClient = state$.getValue().responseByClientId;\n        const res = byClient.get(clientId);\n        if (res) {\n          res.end();\n          byClient.delete(clientId);\n        }\n      })\n    )\n  ).pipe(\n    op.takeUntil(slice.actionOfType('shutdown').pipe(\n      op.take(1),\n      op.map(() => {\n        log.info('shutting down');\n        server.close();\n        // process.exit(0);\n      })\n    )),\n    op.catchError((err, src) => {\n      log.error(err);\n      return src;\n    })\n  ).subscribe();\n\n  function onMessage(jsonStr: string, res: http.ServerResponse<http.IncomingMessage>) {\n    // log.info(jsonStr);\n    const action = JSON.parse(jsonStr) as RequestBody;\n    if (action.type === 'subscribe') {\n      const {client, keys} = action.payload as unknown as {client: string; keys: string[]};\n      slice.dispatcher.onClientSubscribe(client, keys, res);\n    } else {\n      if (action.type === 'setForNonexist') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const {payload: [key, value]} = action;\n        if (store.getValue().has(key)) {\n          res.statusCode = 202;\n          const content: ServerResponseContent['setForNonexist'] = {\n            success: false,\n            value: store.getValue().get(key)\n          };\n          res.end(JSON.stringify(content));\n          return;\n        } else {\n          store.getValue().set(key, value);\n          store.next(store.getValue());\n          const content: ServerResponseContent['setForNonexist'] = {\n            success: true,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            value\n          };\n          res.end(JSON.stringify(content));\n          return;\n        }\n      } else if (action.type === 'delete') {\n        const {payload: key} = action as ActionTypes<ClientMessage>['delete'];\n        const state = store.getValue();\n        if (state.has(key)) {\n          state.delete(key);\n        }\n        store.next(state);\n      } else if (action.type === 'increase') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const {payload: [key, value]} = action as ActionTypes<ClientMessage>['increase'];\n        const state = store.getValue();\n        if (state.has(key)) {\n          state.set(key, state.get(key) + value);\n        } else {\n          state.set(key, value);\n        }\n        store.next(state);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        res.end(JSON.stringify({success: true, value: state.get(key)}));\n        return;\n      } else if (action.type === 'unsubscribeKey') {\n        slice.dispatcher.onClientUnsubscribe('' + action.client, new Set([action.payload]));\n      } else if (action.type === 'shutdownServer') {\n        res.end('ok');\n        slice.dispatcher.shutdown();\n        return;\n      }\n      const defaultContent: ServerResponseContent['ping'] = {success: true};\n      res.end(JSON.stringify(defaultContent));\n    }\n  }\n\n  return {\n    shutdown() {\n      slice.dispatcher.shutdown();\n    },\n    started: slice.actionOfType('listening').pipe(\n      op.take(1),\n      op.tap(() => log.info('Server listening'))\n    ).toPromise()\n  };\n}\n\n"]}