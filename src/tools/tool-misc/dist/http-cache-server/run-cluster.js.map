{"version":3,"file":"run-cluster.js","sourceRoot":"","sources":["run-cluster.ts"],"names":[],"mappings":";;;;AAAA,wEAAmC;AACnC,qCAA6B;AAC7B,sCAAoC;AAEpC,MAAM,OAAO,GAAG,IAAA,cAAI,GAAE,CAAC,MAAM,GAAG,CAAC,CAAC;AAClC,MAAM,GAAG,GAAG,IAAA,gBAAQ,EAAC,UAAU,CAAC,CAAC;AAEjC;;;;;;;;;;;EAWE;AACF,SAAgB,YAAY,CAAC,GAAG,GAAG,OAAO;IACxC,IAAI,GAAG,GAAG,CAAC,EAAE;QACX,GAAG,GAAG,CAAC,CAAC;KACT;IAED,IAAI,sBAAO,CAAC,SAAS,EAAE;QAErB,GAAG,CAAC,IAAI,CAAC,WAAW,OAAO,CAAC,GAAG,aAAa,CAAC,CAAC;QAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,MAAM,MAAM,GAAG,sBAAO,CAAC,IAAI,EAAE,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,4BAA4B,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;SAChE;QACD,sBAAO,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE;YAC5C,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;KACJ;AACH,CAAC;AAjBD,oCAiBC","sourcesContent":["import cluster from 'node:cluster';\nimport {cpus} from 'node:os';\nimport {log4File} from '@wfh/plink';\n\nconst numCPUs = cpus().length - 1;\nconst log = log4File(__filename);\n\n/**\n * Usage:\n *\ncluster.setupMaster({\n  exec: Path.resolve(__dirname, '<your worker js file>'),\n  args: [\n   // your parameter passed to workers\n  ]\n});\n\nstartCluster(2);\n*/\nexport function startCluster(num = numCPUs) {\n  if (num < 2) {\n    num = 2;\n  }\n\n  if (cluster.isPrimary) {\n\n    log.info(`Primary ${process.pid} is running`);\n\n    for (let i = 0; i < num; i++) {\n      const worker = cluster.fork();\n      worker.send(JSON.stringify({__plink_cluster_worker_index: i}));\n    }\n    cluster.on('exit', (worker, _code, _signal) => {\n      log.info('Worker', worker.process.pid, 'exits');\n    });\n  }\n}\n\n"]}