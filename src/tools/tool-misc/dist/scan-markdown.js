"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.scan = void 0;
const tslib_1 = require("tslib");
// import api from '__api';
const path_1 = tslib_1.__importDefault(require("path"));
const fs_1 = tslib_1.__importDefault(require("fs"));
const util_1 = require("util");
const log = require('log4js').getLogger('tool-misc.' + path_1.default.basename(__filename));
async function scan(dir) {
    // let globExcludes: string[] = ['node_modules'];
    if (!dir)
        dir = path_1.default.resolve();
    const result = {};
    await globDirs(dir, result);
    log.info(result);
}
exports.scan = scan;
const readdir = (0, util_1.promisify)(fs_1.default.readdir);
const statAsync = (0, util_1.promisify)(fs_1.default.stat);
async function globDirs(dir, collection) {
    const baseDirName = path_1.default.basename(dir);
    if (baseDirName === 'node_modules' || baseDirName.startsWith('.'))
        return Promise.resolve(collection);
    log.info('scan', dir);
    const subDirDone = readdir(dir)
        .then(async (dirs) => {
        const subDirs = await Promise.all(dirs.map(async (baseSubDir) => {
            const subDir = path_1.default.resolve(dir, baseSubDir);
            const stat = await statAsync(subDir);
            if (stat.isFile() && subDir.endsWith('.md')) {
                let col = collection[dir];
                if (!col)
                    col = collection[dir] = [];
                col.push(baseSubDir);
            }
            return stat.isDirectory() ? subDir : null;
        }));
        return Promise.all(subDirs.filter(subDir => subDir).map(subDir => {
            return globDirs(subDir, collection);
        }));
    });
    await subDirDone;
    return collection;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nhbi1tYXJrZG93bi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNjYW4tbWFya2Rvd24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLDJCQUEyQjtBQUMzQix3REFBd0I7QUFDeEIsb0RBQW9CO0FBQ3BCLCtCQUErQjtBQUUvQixNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLFlBQVksR0FBRyxjQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFFM0UsS0FBSyxVQUFVLElBQUksQ0FBQyxHQUFXO0lBQ3BDLGlEQUFpRDtJQUNqRCxJQUFJLENBQUMsR0FBRztRQUNOLEdBQUcsR0FBRyxjQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFFdkIsTUFBTSxNQUFNLEdBQThCLEVBQUUsQ0FBQztJQUM3QyxNQUFNLFFBQVEsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFFNUIsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNuQixDQUFDO0FBVEQsb0JBU0M7QUFFRCxNQUFNLE9BQU8sR0FBRyxJQUFBLGdCQUFTLEVBQUMsWUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3RDLE1BQU0sU0FBUyxHQUFHLElBQUEsZ0JBQVMsRUFBQyxZQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7QUFHckMsS0FBSyxVQUFVLFFBQVEsQ0FBQyxHQUFXLEVBQUUsVUFBcUM7SUFDeEUsTUFBTSxXQUFXLEdBQUcsY0FBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QyxJQUFJLFdBQVcsS0FBSyxjQUFjLElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUM7UUFDL0QsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRXJDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBRXRCLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7U0FDOUIsSUFBSSxDQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsRUFBRTtRQUNqQixNQUFNLE9BQU8sR0FBRyxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUMsVUFBVSxFQUFDLEVBQUU7WUFDNUQsTUFBTSxNQUFNLEdBQUcsY0FBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7WUFDN0MsTUFBTSxJQUFJLEdBQUcsTUFBTSxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDckMsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDM0MsSUFBSSxHQUFHLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUMxQixJQUFJLENBQUMsR0FBRztvQkFDTixHQUFHLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztnQkFDN0IsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzthQUN0QjtZQUNELE9BQU8sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUM1QyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ0osT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDL0QsT0FBTyxRQUFRLENBQUMsTUFBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsQ0FBQztJQUNILE1BQU0sVUFBVSxDQUFDO0lBQ2pCLE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIGltcG9ydCBhcGkgZnJvbSAnX19hcGknO1xuaW1wb3J0IFBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHtwcm9taXNpZnl9IGZyb20gJ3V0aWwnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmNvbnN0IGxvZyA9IHJlcXVpcmUoJ2xvZzRqcycpLmdldExvZ2dlcigndG9vbC1taXNjLicgKyBQYXRoLmJhc2VuYW1lKF9fZmlsZW5hbWUpKTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNjYW4oZGlyOiBzdHJpbmcpIHtcbiAgLy8gbGV0IGdsb2JFeGNsdWRlczogc3RyaW5nW10gPSBbJ25vZGVfbW9kdWxlcyddO1xuICBpZiAoIWRpcilcbiAgICBkaXIgPSBQYXRoLnJlc29sdmUoKTtcblxuICBjb25zdCByZXN1bHQ6IHtbZGlyOiBzdHJpbmddOiBzdHJpbmdbXX0gPSB7fTtcbiAgYXdhaXQgZ2xvYkRpcnMoZGlyLCByZXN1bHQpO1xuXG4gIGxvZy5pbmZvKHJlc3VsdCk7XG59XG5cbmNvbnN0IHJlYWRkaXIgPSBwcm9taXNpZnkoZnMucmVhZGRpcik7XG5jb25zdCBzdGF0QXN5bmMgPSBwcm9taXNpZnkoZnMuc3RhdCk7XG5cblxuYXN5bmMgZnVuY3Rpb24gZ2xvYkRpcnMoZGlyOiBzdHJpbmcsIGNvbGxlY3Rpb246IHtbZGlyOiBzdHJpbmddOiBzdHJpbmdbXX0pOiBQcm9taXNlPHtbZGlyOiBzdHJpbmddOiBzdHJpbmdbXX0+IHtcbiAgY29uc3QgYmFzZURpck5hbWUgPSBQYXRoLmJhc2VuYW1lKGRpcik7XG4gIGlmIChiYXNlRGlyTmFtZSA9PT0gJ25vZGVfbW9kdWxlcycgfHwgYmFzZURpck5hbWUuc3RhcnRzV2l0aCgnLicpKVxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoY29sbGVjdGlvbik7XG5cbiAgbG9nLmluZm8oJ3NjYW4nLCBkaXIpO1xuXG4gIGNvbnN0IHN1YkRpckRvbmUgPSByZWFkZGlyKGRpcilcbiAgLnRoZW4oYXN5bmMgZGlycyA9PiB7XG4gICAgY29uc3Qgc3ViRGlycyA9IGF3YWl0IFByb21pc2UuYWxsKGRpcnMubWFwKGFzeW5jIGJhc2VTdWJEaXIgPT4ge1xuICAgICAgY29uc3Qgc3ViRGlyID0gUGF0aC5yZXNvbHZlKGRpciwgYmFzZVN1YkRpcik7XG4gICAgICBjb25zdCBzdGF0ID0gYXdhaXQgc3RhdEFzeW5jKHN1YkRpcik7XG4gICAgICBpZiAoc3RhdC5pc0ZpbGUoKSAmJiBzdWJEaXIuZW5kc1dpdGgoJy5tZCcpKSB7XG4gICAgICAgIGxldCBjb2wgPSBjb2xsZWN0aW9uW2Rpcl07XG4gICAgICAgIGlmICghY29sKVxuICAgICAgICAgIGNvbCA9IGNvbGxlY3Rpb25bZGlyXSA9IFtdO1xuICAgICAgICBjb2wucHVzaChiYXNlU3ViRGlyKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzdGF0LmlzRGlyZWN0b3J5KCkgPyBzdWJEaXIgOiBudWxsO1xuICAgIH0pKTtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoc3ViRGlycy5maWx0ZXIoc3ViRGlyID0+IHN1YkRpcikubWFwKHN1YkRpciA9PiB7XG4gICAgICByZXR1cm4gZ2xvYkRpcnMoc3ViRGlyISwgY29sbGVjdGlvbik7XG4gICAgfSkpO1xuICB9KTtcbiAgYXdhaXQgc3ViRGlyRG9uZTtcbiAgcmV0dXJuIGNvbGxlY3Rpb247XG59XG4iXX0=