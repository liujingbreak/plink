{"version":3,"file":"service-main-process.js","sourceRoot":"","sources":["service-main-process.ts"],"names":[],"mappings":";;AAAA,sCAAsC;AACtC,sCAAkD;AAElD,qEAAqE;AAErE,IAAA,mBAAW,EAAC,MAAM,CAAC,CAAC;AAEpB,KAAK,CAAC,KAAK;IACT,8FAA8F;IAE9F,iBAAS,CAAC,IAAI,CAAC,GAAG,EAAE;QAClB,WAAW,CAAC,QAAQ,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,MAAM,EAAC,UAAU,EAAC,GAAG,OAAO,CAAC,6CAA6C,CAAqB,CAAC;IAEhG,MAAM,WAAW,GAAG,UAAU,CAAC,EAAC,cAAc,EAAE,IAAI,EAAC,CAAC,CAAC;IACvD,MAAM,WAAW,CAAC,OAAO,CAAC;IAE1B,wBAAwB;IACxB,8FAA8F;IAC9F,aAAa;IACb,MAAM;IAEN,mBAAmB;IACnB,0BAA0B;AAC5B,CAAC,CAAC,EAAE,CAAC","sourcesContent":["// import cluster from 'node:cluster';\nimport {exitHooks, initProcess} from '@wfh/plink';\nimport * as __service from '../../http-cache-server/cache-service-store';\n// import * as runCluster from '../../http-cache-server/run-cluster';\n\ninitProcess('none');\n\nvoid (async function() {\n  // const {startCluster} = require('../../http-cache-server/run-cluster') as typeof runCluster;\n\n  exitHooks.push(() => {\n    storeServer.shutdown();\n  });\n\n  const {startStore} = require('../../http-cache-server/cache-service-store') as typeof __service;\n\n  const storeServer = startStore({reconnInterval: 2000});\n  await storeServer.started;\n\n  // cluster.setupMaster({\n  //   exec: require.resolve('../../../dist/__tests__/http-cache-server/service-client-worker'),\n  //   args: []\n  // });\n\n  // startCluster(2);\n  // storeServer.shutdown();\n})();\n"]}