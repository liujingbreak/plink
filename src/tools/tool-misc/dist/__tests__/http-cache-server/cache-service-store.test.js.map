{"version":3,"file":"cache-service-store.test.js","sourceRoot":"","sources":["cache-service-store.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {Writable} from 'node:stream';\nimport * as op from 'rxjs/operators';\nimport {jest, describe, it} from '@jest/globals';\nimport '@wfh/plink-test/dist/init-plink';\nimport {forceForkAsPreserveSymlink} from '@wfh/plink';\nimport {createClient} from '@wfh/tool-misc/dist/http-cache-server/cache-service-client';\n\njest.setTimeout(20000);\ndescribe('http cache server', () => {\n  it('multi-process state server and client uses http \"keep-alive\" connection', async () => {\n\n    const chrProcOutput = new Writable({\n      write(chunk, _enc, cb) {\n        // eslint-disable-next-line no-console\n        console.log((chunk as Buffer | string).toString());\n        cb();\n      },\n      final(cb) {\n        cb();\n      }\n    });\n\n    const {exited, childProcess} = forceForkAsPreserveSymlink('@wfh/tool-misc/dist/__tests__/http-cache-server/service-main-process', {\n      stdio: 'pipe'\n    });\n    childProcess.stdout!.pipe(chrProcOutput);\n    childProcess.stderr!.pipe(chrProcOutput);\n\n    const client = createClient();\n\n    client.dispatcher.ping('test');\n    await client.serverReplied('ping', payload => payload === 'test');\n    const keyChanged = client.actionOfType('onChange').pipe(\n      op.map(({payload: [key, value]}) => {\n        // eslint-disable-next-line no-console\n        console.log(`key ${key} is changed: ${value as string}`);\n      }),\n      op.take(1)\n    ).toPromise();\n\n    client.dispatcher.subscribeKey('test-key');\n    client.dispatcher.subscribeKey('test-key2');\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    client.dispatcher.setForNonexist('test-key', 1);\n    await client.serverReplied('setForNonexist', ([key, value]) => key === 'test-key' && value === 1);\n    await keyChanged;\n\n    await new Promise(resolve => setTimeout(resolve, 2500));\n\n    const keyChangedAgain = client.actionOfType('onChange').pipe(\n      op.filter(({payload: [key, value]}) => key === 'test-key2'),\n      op.map(({payload: [key, value]}) => {\n        // eslint-disable-next-line no-console\n        console.log(`key ${key} is changed: ${value as string}`);\n      }),\n      op.take(1)\n    ).toPromise();\n\n    client.dispatcher.setForNonexist('test-key2', 2);\n    await keyChangedAgain;\n\n    client.dispatcher.shutdownServer();\n    await client.serverReplied('shutdownServer', () => true);\n    childProcess.kill('SIGINT');\n    return exited;\n  });\n});\n\n"]}