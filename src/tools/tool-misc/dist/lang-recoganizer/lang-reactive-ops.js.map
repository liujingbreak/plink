{"version":3,"file":"lang-reactive-ops.js","sourceRoot":"","sources":["lang-reactive-ops.ts"],"names":[],"mappings":"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","sourcesContent":["import * as rx from 'rxjs';\nimport * as op from 'rxjs/operators';\n\ninterface CacheAndReplayState<T> {\n  cacheData: T[];\n  cacheStartPos: number;\n  // markIdices: LinkedList<{offset: number; laNum: number}>;\n  unmarkPositions: Set<number>;\n  inputValue?: T;\n  inputIdx: number;\n}\n\nexport function cacheAndReplay<T>(\n  markAction: rx.Observable<number>, // with offset of look ahead\n  replayAction: rx.Observable<number> // with target marked position\n) {\n  const store = new rx.BehaviorSubject<CacheAndReplayState<T>>({\n    cacheData: [],\n    cacheStartPos: -1,\n    // markIdices: new LinkedList<{offset: number; laNum: number}>(),\n    unmarkPositions: new Set<number>(),\n    inputIdx: -1\n  });\n\n  const replayer = new rx.Subject<{value: T; idx: number}>();\n\n  return (input: rx.Observable<T>) => {\n    const unsubscribeSubj = new rx.Subject();\n    // handle mark action\n    markAction.pipe(\n      op.mergeMap(laNumber => store.pipe(\n        op.distinctUntilChanged((a, b) => a.inputValue === b.inputValue),\n        op.filter(state => state.inputValue != null),\n        op.take(1),\n        op.map(s => {\n          if (s.unmarkPositions.size === 0) {\n            s.cacheStartPos = s.inputIdx;\n            s.cacheData.push(s.inputValue!);\n          }\n          // s.markIdices.add({offset: s.inputIdx, laNum: laNumber});\n          s.unmarkPositions.add(laNumber + s.inputIdx);\n          store.next({\n            ...s\n          });\n        })\n      )),\n      op.takeUntil(unsubscribeSubj)\n    ).subscribe();\n\n    // handle replay action\n    replayAction.pipe(\n      op.mergeMap((position) => store.pipe(\n        op.distinctUntilChanged((a, b) => a.cacheStartPos === b.cacheStartPos),\n        op.filter(state => state.cacheStartPos >= 0),\n        op.take(1),\n        op.map(state => {\n          for (let i = position - state.cacheStartPos, l = state.cacheData.length; i < l; i++) {\n            const value = state.cacheData[i];\n            replayer.next({value, idx: state.cacheStartPos + i});\n          }\n          store.next({...state});\n        })\n      )),\n      op.takeUntil(unsubscribeSubj)\n    ).subscribe();\n\n    // unmarkAction.pipe(\n    //   op.map(() => {\n    //     const s = store.getValue();\n    //     if (s.markIdices.length > 0) {\n    //       s.markIdices.pop();\n    //     }\n    //     if (s.markIdices.length === 0) {\n    //       s.cacheData.splice(0);\n    //     }\n    //     store.next({...s});\n    //   }),\n    //   op.takeUntil(unsubscribeSubj)\n    // ).subscribe();\n\n    return rx.merge(\n      replayer.pipe(op.observeOn(rx.queueScheduler)),\n      input.pipe(\n        op.map((item, idx) => {\n          const state = store.getValue();\n          if (state.unmarkPositions.has(idx)) {\n            // console.log('unmark', state.unmarkPositions.size);\n            state.unmarkPositions.delete(idx);\n            if (state.unmarkPositions.size === 0) {\n              state.cacheData.splice(0);\n            }\n          }\n          if (state.unmarkPositions.size > 0) {\n            state.cacheData.push(item);\n          }\n          store.next({...state});\n          return {value: item, idx};\n        })\n      )\n    ).pipe(\n      op.map((item) => {\n        const state = store.getValue();\n        state.inputIdx = item.idx;\n        state.inputValue = item.value;\n        store.next({...state});\n        return item;\n      }),\n      op.finalize(() => {\n        unsubscribeSubj.next();\n        unsubscribeSubj.complete();\n      })\n    );\n  };\n}\n\nexport function test() {\n  const marker = new rx.Subject<number>();\n  const replay = new rx.Subject<number>();\n\n  rx.range(0, 20).pipe(\n    // op.take(20),\n    cacheAndReplay(marker, replay),\n    op.map(({value, idx}, totalIndex) => {\n      // eslint-disable-next-line no-console\n      console.log(`(${totalIndex}) offset:${idx}, value: ${value}`);\n      if (totalIndex === 5) {\n        marker.next(4);\n      }\n      if (totalIndex === 8) {\n        marker.next(2);\n      }\n      if (totalIndex === 10) {\n        replay.next(8);\n      }\n      if (totalIndex === 15) {\n        replay.next(5);\n      }\n\n    }),\n    op.take(50)\n  ).subscribe();\n}\n"]}