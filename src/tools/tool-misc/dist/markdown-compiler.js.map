{"version":3,"file":"markdown-compiler.js","sourceRoot":"","sources":["markdown-compiler.ts"],"names":[],"mappings":";;;;AAAA,sEAAmC;AACnC,2DAAqC;AACrC,mCAAkC;AAElC,MAAM,IAAI,GAAG,IAAA,mBAAU,EAAC,QAAQ,CAAC,CAAC;AAElC,MAAM,EAAE,GAAG,IAAI,qBAAQ,CAAC;IACtB,IAAI,EAAE,IAAI;IACV,SAAS,CAAC,GAAG,EAAE,IAAI;QACjB,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;YAClC,IAAI;gBACF,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC;aAC9C;YAAC,OAAO,EAAE,EAAE,GAAE;SAChB;QACD,OAAO,EAAE,CAAC,CAAC,gCAAgC;IAC7C,CAAC;CACF,CAAC,CAAC;AAEH,SAAgB,aAAa,CAAC,QAAgB,EAAE,OAAO,GAAG,KAAK;IAC7D,MAAM,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACjC,OAAO;QACL,OAAO,EAAE,IAAI;QACb,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;KAC5D,CAAC;AACJ,CAAC;AAND,sCAMC","sourcesContent":["import Markdown from 'markdown-it';\nimport * as hljs from 'highlight.js';\nimport {createHash} from 'crypto';\n\nconst hash = createHash('sha256');\n\nconst mk = new Markdown({\n  html: true,\n  highlight(str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return hljs.highlight(lang, str, true).value;\n      } catch (__) {}\n    }\n    return ''; // use external default escaping\n  }\n});\n\nexport function compileToHtml(markdown: string, genHash = false) {\n  const html = mk.render(markdown);\n  return {\n    content: html,\n    hash: genHash ? hash.update(html).digest('hex') : undefined\n  };\n}\n\n"]}