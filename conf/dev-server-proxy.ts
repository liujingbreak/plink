/**
 * This file is generated by @wfh/tool-misc
 */
import {ConfigHandler, PlinkSettings, InjectorConfigHandler} from '@wfh/plink';

const workspaceSetting: ConfigHandler & InjectorConfigHandler = {
  /** Change settings of Plink and other Plink compliant packages */
  onConfig(setting: PlinkSettings, cliOpt: NonNullable<PlinkSettings['cliOptions']>): void {
    setting['@wfh/assets-processer'].proxyToDevServer = {
      target: 'http://localhost:14333',
      ws: true,
      changeOrigin: true
    };
    // Run command "plink setting" to see details of setting properties
    //
    // default setting value:
    // {
    //   port: 14333,
    //   localIP: '192.168.3.14',
    //   publicPath: '/',
    //   devMode: false,
    //   useYarn: false,
    //   destDir: 'E:\\dr\\plink\\dist',
    //   staticDir: 'E:\\dr\\plink\\dist\\static',
    //   serverDir: 'E:\\dr\\plink\\dist\\server',
    //   rootPath: 'E:\\dr\\plink',
    //   packageScopes: [ 'wfh', 'bk', 'bk-core', 'dr', 'dr-core', 'types' ],
    //   nodeRoutePath: '/',
    //   staticAssetsURL: '',
    //   packageContextPathMapping: {},
    //   browserSideConfigProp: [],
    //   enableSourceMaps: true,
    //   outputPathMap: {},
    //   __filename: 'E:\\dr\\plink\\node_modules\\@wfh\\plink\\wfh\\dist\\config\\config-slice.js',
    //   cliOptions: { dryRun: false, config: [], prop: [], verbose: false, dev: false },
    //   '@wfh/doc-entry': { basename: '/plink' },
    //   '@wfh/doc-ui-common': {},
    //   '@wfh/http-server': {
    //     ssl: {
    //       enabled: false,
    //       key: 'key.pem',
    //       cert: 'cert.pem',
    //       port: 443,
    //       httpForward: true
    //     },
    //     noHealthCheck: false,
    //     hostnames: []
    //   },
    //   '@wfh/assets-processer': {
    //     fetchUrl: null,
    //     fetchRetry: 5,
    //     downloadMode: 'fork',
    //     fetchLogErrPerTimes: 20,
    //     fetchIntervalSec: 90,
    //     cacheControlMaxAge: {
    //       js: '365 days',
    //       css: '365 days',
    //       less: '365 days',
    //       html: null,
    //       png: '365 days',
    //       jpg: '365 days',
    //       jpeg: '365 days',
    //       gif: '365 days',
    //       svg: '365 days',
    //       eot: '365 days',
    //       ttf: '365 days',
    //       woff: '365 days',
    //       woff2: '365 days'
    //     },
    //     fallbackIndexHtml: { '^/[^/?#.]+': '<%=match[0]%>/index.html' },
    //     httpProxy: {},
    //     httpProxyWithCache: {},
    //     fetchMailServer: null,
    //     serveIndex: false,
    //     requireToken: false
    //   },
    //   '@wfh/material-components-react': { materialTheme: 'default' },
    //   '@wfh/cra-scripts': { lessLoaderAdditionalData: '', lessLoaderOtherOptions: {} },
    //   '@wfh/express-app': { enableCORS: true }
    // }

    // TODO: modify value of "setting"
  },
  /** For Node.js runtime, replace module in "require()" or import syntax */
  setupNodeInjector(factory, setting) {
    // factory.fromPlinkPackage('@wfh/foobar').alias('moduleA', 'moduleB');
  },
  /** For Client framework build tool (React, Angular), replace module in "require()" or import syntax */
  setupWebInjector(factory, setting) {
    // factory.fromPlinkPackage('@wfh/foobar').alias('moduleA', 'moduleB');
  }
};

export default workspaceSetting;
